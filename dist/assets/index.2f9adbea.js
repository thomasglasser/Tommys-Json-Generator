import{r as v,c as ne}from"./index.a6ea7667.js";function Qe(o,e){for(var r=0;r<e.length;r++){const t=e[r];if(typeof t!="string"&&!Array.isArray(t)){for(const a in t)if(a!=="default"&&!(a in o)){const n=Object.getOwnPropertyDescriptor(t,a);n&&Object.defineProperty(o,a,n.get?n:{enumerable:!0,get:()=>t[a]})}}}return Object.freeze(Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}))}var X={},se={};Object.defineProperty(se,"__esModule",{value:!0});se.initCollections=void 0;function et(o){o.register("keybind",["key.advancements","key.attack","key.back","key.chat","key.command","key.drop","key.forward","key.fullscreen","key.hotbar.1","key.hotbar.2","key.hotbar.3","key.hotbar.4","key.hotbar.5","key.hotbar.6","key.hotbar.7","key.hotbar.8","key.hotbar.9","key.inventory","key.jump","key.left","key.loadToolbarActivator","key.pickItem","key.playerlist","key.right","key.saveToolbarActivator","key.screenshot","key.smoothCamera","key.sneak","key.spectatorOutlines","key.sprint","key.swapOffhand","key.togglePerspective","key.use"]),o.register("slot",["mainhand","offhand","head","chest","legs","feet"]),o.register("gamemode",["survival","creative","adventure","spectator"]),o.register("entity_source",["this","killer","direct_killer","killer_player"]),o.register("copy_source",["block_entity","this","killer","killer_player"]),o.register("loot_table_apply_bonus_formula",["minecraft:uniform_bonus_count","minecraft:binomial_with_bonus_count","minecraft:ore_drops"]),o.register("map_decoration",["mansion","monument","village_desert","village_plains","village_savanna","village_snowy","village_taiga","jungle_temple","swamp_hut","player","frame","red_marker","blue_marker","target_x","target_point","player_off_map","player_off_limits","red_x","banner_white","banner_orange","banner_magenta","banner_light_blue","banner_yellow","banner_lime","banner_pink","banner_gray","banner_light_gray","banner_cyan","banner_purple","banner_blue","banner_brown","banner_green","banner_red","banner_black"]),o.register("map_feature",["bastion_remnant","buried_treasure","desert_pyramid","endcity","fortress","igloo","jungle_pyramid","mansion","mineshaft","monument","nether_fossil","ocean_ruin","pillager_outpost","ruined_portal","shipwreck","stronghold","swamp_hut","village"]),o.register("recipe_group",["bed","light_gray_dye","iron_ingot","wooden_stairs","black_dye","stained_terracotta","dyed_bed","magenta_dye","bark","rabbit_stew","light_blue_dye","wooden_fence_gate","planks","stained_glass","wooden_door","stained_glass_pane","wooden_fence","sticks","concrete_powder","wooden_pressure_plate","boat","brown_dye","yellow_dye","bonemeal","red_dye","wooden_trapdoor","wooden_button","gold_ingot","pink_dye","wooden_slab","orange_dye","carpet","sign","wool","sugar","blue_dye","white_dye","banner","netherite_ingot"]),o.register("biome_category",["beach","desert","extreme_hills","forest","icy","jungle","mesa","mountain","mushroom","nether","none","ocean","plains","river","savanna","swamp","taiga","the_end","underground"]),o.register("heightmap_type",["MOTION_BLOCKING","MOTION_BLOCKING_NO_LEAVES","OCEAN_FLOOR","OCEAN_FLOOR_WG","WORLD_SURFACE","WORLD_SURFACE_WG"]),o.register("generation_step",["air","liquid"]),o.register("decoration_step",["raw_generation","lakes","local_modifications","underground_structures","surface_structures","strongholds","underground_ores","underground_decoration","fluid_springs","vegetal_decoration","top_layer_modification"]),o.register("loot_context_type",["minecraft:empty","minecraft:chest","minecraft:command","minecraft:selector","minecraft:fishing","minecraft:entity","minecraft:archaeology","minecraft:gift","minecraft:barter","minecraft:advancement_reward","minecraft:advancement_entity","minecraft:advancement_location","minecraft:generic","minecraft:block"]),o.register("banner_pattern",["base","square_bottom_left","square_bottom_right","square_top_left","square_top_right","stripe_bottom","stripe_top","stripe_left","stripe_right","stripe_center","stripe_middle","stripe_downright","stripe_downleft","small_stripes","cross","straight_cross","triangle_bottom","triangle_top","triangles_bottom","triangles_top","diagonal_left","diagonal_up_right","diagonal_up_left","diagonal_right","circle","rhombus","half_vertical","half_horizontal","half_vertical_right","half_horizontal_bottom","border","curly_border","gradient","gradient_up","bricks","globe","creeper","skull","flower","mojang","piglin"]),o.register("dye_color",["white","orange","magenta","light_blue","yellow","lime","pink","gray","light_gray","cyan","purple","blue","brown","green","red","black"]),o.register("cave_surface",["floor","ceiling"]),o.register("direction",["down","up","north","east","south","west"]),o.register("axis",["x","y","z"]),o.register("display_position",["firstperson_righthand","firstperson_lefthand","thirdperson_righthand","thirdperson_lefthand","gui","head","ground","fixed"]),o.register("gui_light",["front","side"]),o.register("item_model_predicates",["angle","blocking","broken","cast","charged","cooldown","custom_model_data","damage","damaged","firework","lefthanded","pull","pulling","throwing","time"]),o.register("glyph_provider_type",["bitmap","reference","ttf","space","unihex"]),o.register("mob_category",["monster","creature","ambient","axolotls","underground_water_creature","water_creature","water_ambient","misc"]),o.register("feature_flags",["vanilla","bundle","trade_rebalance","update_1_21"]),o.register("sprite_source_type",["single","directory","filter","unstitch","paletted_permutations"]),o.register("type_specific_type",["any","axolotl","boat","cat","fishing_hook","fox","frog","horse","lightning","llama","mooshroom","painting","parrot","player","rabbit","slime","tropical_fish","villager"]),o.register("axolotl_variant",["lucy","wild","gold","cyan","blue"]),o.register("boat_variant",["oak","spruce","birch","jungle","acacia","dark_oak","mangrove","bamboo"]),o.register("fox_variant",["red","snow"]),o.register("horse_variant",["white","creamy","chestnut","brown","black","gray","dark_brown"]),o.register("llama_variant",["creamy","white","brown","gray"]),o.register("mooshroom_variant",["red","brown"]),o.register("parrot_variant",["red_blue","blue","green","yellow_blue","gray"]),o.register("rabbit_variant",["brown","white","black","white_splotched","gold","salt","evil"]),o.register("tropical_fish_variant",["kob","sunstreak","snooper","dasher","brinely","spotty","flopper","stripey","glitter","blockfish","betty","clayfish"]),o.register("armor_material",["leather","chainmail","iron","gold","diamond","turtle","netherite"]),o.register("damage_scaling",["never","always","when_caused_by_living_non_player"]),o.register("damage_effects",["hurt","thorns","drowning","burning","poking","freezing"]),o.register("death_message_type",["default","fall_variants","intentional_game_design"]),o.register("recipe_category",["blocks","building","equipment","food","misc","redstone"])}se.initCollections=et;var le={},me={};Object.defineProperty(me,"__esModule",{value:!0});me.initAdvancementSchemas=void 0;const s=v();function tt(o,e){const r=s.Reference.bind(void 0,o),t=s.StringNode.bind(void 0,e),a=(0,s.ChoiceNode)([{type:"object",node:(0,s.Opt)(r("entity_predicate")),change:n=>{var c,l;return(l=(c=n[0])===null||c===void 0?void 0:c.predicate)!==null&&l!==void 0?l:{}}},{type:"list",node:(0,s.ListNode)(r("condition")),change:n=>[{condition:"minecraft:entity_properties",predicate:n}]}],{context:"conditions"});o.register("advancement",(0,s.Mod)((0,s.ObjectNode)({display:(0,s.Opt)((0,s.Mod)((0,s.ObjectNode)({icon:(0,s.ObjectNode)({item:t({validator:"resource",params:{pool:"item"}}),nbt:(0,s.Opt)(t({validator:"nbt",params:{registry:{category:"minecraft:item",id:["pop",{push:"item"}]}}}))}),title:r("text_component"),description:r("text_component"),background:(0,s.Opt)(t()),frame:(0,s.Opt)(t({enum:["task","challenge","goal"]})),show_toast:(0,s.Opt)((0,s.BooleanNode)()),announce_to_chat:(0,s.Opt)((0,s.BooleanNode)()),hidden:(0,s.Opt)((0,s.BooleanNode)())}),{default:()=>({icon:{item:"minecraft:stone"},title:"",description:""})})),parent:(0,s.Opt)(t({validator:"resource",params:{pool:"$advancement"}})),criteria:(0,s.MapNode)(t(),r("advancement_criteria")),requirements:(0,s.Opt)((0,s.ListNode)((0,s.ListNode)(t()))),rewards:(0,s.Opt)((0,s.ObjectNode)({function:(0,s.Opt)(t({validator:"resource",params:{pool:"$function"}})),loot:(0,s.Opt)((0,s.ListNode)(t({validator:"resource",params:{pool:"$loot_table"}}))),recipes:(0,s.Opt)((0,s.ListNode)(t({validator:"resource",params:{pool:"$recipe"}}))),experience:(0,s.Opt)((0,s.NumberNode)({integer:!0}))})),sends_telemetry_event:(0,s.Opt)((0,s.BooleanNode)())},{context:"advancement"}),{default:()=>({criteria:{requirement:{trigger:"minecraft:location"}}})})),o.register("advancement_criteria",(0,s.ObjectNode)({trigger:t({validator:"resource",params:{pool:"trigger_type"}}),conditions:(0,s.Opt)((0,s.ObjectNode)({player:(0,s.Mod)(a,{enabled:n=>n.pop().push("trigger").get()!=="minecraft:impossible"}),[s.Switch]:["pop",{push:"trigger"}],[s.Case]:{"minecraft:allay_drop_item_on_block":{location:a},"minecraft:bee_nest_destroyed":{block:(0,s.Opt)(t({validator:"resource",params:{pool:"block"}})),num_bees_inside:(0,s.Opt)(r("int_bounds")),item:(0,s.Opt)(r("item_predicate"))},"minecraft:bred_animals":{parent:a,partner:a,child:a},"minecraft:brewed_potion":{potion:(0,s.Opt)(t({validator:"resource",params:{pool:"potion"}}))},"minecraft:changed_dimension":{from:(0,s.Opt)(t({validator:"resource",params:{pool:"$dimension"}})),to:(0,s.Opt)(t({validator:"resource",params:{pool:"$dimension"}}))},"minecraft:channeled_lightning":{victims:(0,s.Opt)((0,s.ListNode)(a))},"minecraft:construct_beacon":{level:r("int_bounds")},"minecraft:consume_item":{item:(0,s.Opt)(r("item_predicate"))},"minecraft:cured_zombie_villager":{villager:a,zombie:a},"minecraft:effects_changed":{effects:(0,s.Opt)((0,s.MapNode)(t({validator:"resource",params:{pool:"mob_effect"}}),r("status_effect_predicate"))),source:(0,s.Opt)(a)},"minecraft:enter_block":{block:(0,s.Opt)(t({validator:"resource",params:{pool:"block"}})),state:(0,s.Opt)((0,s.MapNode)(t(),t(),{validation:{validator:"block_state_map",params:{id:["pop",{push:"block"}]}}}))},"minecraft:enchanted_item":{levels:r("int_bounds"),item:(0,s.Opt)(r("item_predicate"))},"minecraft:entity_hurt_player":{damage:(0,s.Opt)(r("damage_predicate"))},"minecraft:entity_killed_player":{entity:a,killing_blow:(0,s.Opt)(r("damage_source_predicate"))},"minecraft:fall_from_height":{start_position:(0,s.Opt)(r("location_predicate")),distance:(0,s.Opt)(r("distance_predicate"))},"minecraft:filled_bucket":{item:(0,s.Opt)(r("item_predicate"))},"minecraft:fishing_rod_hooked":{rod:(0,s.Opt)(r("item_predicate")),entity:a,item:(0,s.Opt)(r("item_predicate"))},"minecraft:inventory_changed":{slots:(0,s.Opt)((0,s.ObjectNode)({empty:r("int_bounds"),occupied:r("int_bounds"),full:r("int_bounds")})),items:(0,s.Opt)((0,s.ListNode)(r("item_predicate")))},"minecraft:item_durability_changed":{delta:r("int_bounds"),durability:r("int_bounds"),item:(0,s.Opt)(r("item_predicate"))},"minecraft:item_used_on_block":{location:a},"minecraft:kill_mob_near_sculk_catalyst":{entity:a,killing_blow:(0,s.Opt)(r("damage_source_predicate"))},"minecraft:killed_by_crossbow":{unique_entity_types:r("int_bounds"),victims:(0,s.Opt)((0,s.ListNode)(a))},"minecraft:levitation":{distance:(0,s.Opt)(r("distance_predicate")),duration:r("int_bounds")},"minecraft:lightning_strike":{lightning:a,bystander:a},"minecraft:nether_travel":{start_position:(0,s.Opt)(r("location_predicate")),distance:(0,s.Opt)(r("distance_predicate"))},"minecraft:placed_block":{location:a},"minecraft:player_generates_container_loot":{loot_table:t({validator:"resource",params:{pool:"$loot_table"}})},"minecraft:player_hurt_entity":{damage:(0,s.Opt)(r("damage_predicate")),entity:a},"minecraft:player_interacted_with_entity":{item:(0,s.Opt)(r("item_predicate")),entity:a},"minecraft:player_killed_entity":{entity:a,killing_blow:(0,s.Opt)(r("damage_source_predicate"))},"minecraft:recipe_crafted":{recipe_id:t({validator:"resource",params:{pool:"$recipe"}}),ingredients:(0,s.Opt)((0,s.ListNode)(r("item_predicate")))},"minecraft:recipe_unlocked":{recipe:t({validator:"resource",params:{pool:"$recipe"}})},"minecraft:ride_entity_in_lava":{start_position:(0,s.Opt)(r("location_predicate")),distance:(0,s.Opt)(r("distance_predicate"))},"minecraft:slide_down_block":{block:(0,s.Opt)(t({validator:"resource",params:{pool:"block"}}))},"minecraft:shot_crossbow":{item:(0,s.Opt)(r("item_predicate"))},"minecraft:summoned_entity":{entity:a},"minecraft:tame_animal":{entity:a},"minecraft:target_hit":{projectile:a,shooter:a,signal_strength:r("int_bounds")},"minecraft:thrown_item_picked_up_by_entity":{entity:a,item:(0,s.Opt)(r("item_predicate"))},"minecraft:thrown_item_picked_up_by_player":{entity:a,item:(0,s.Opt)(r("item_predicate"))},"minecraft:used_ender_eye":{distance:(0,s.Opt)(r("float_bounds"))},"minecraft:used_totem":{item:(0,s.Opt)(r("item_predicate"))},"minecraft:using_item":{item:(0,s.Opt)(r("item_predicate"))},"minecraft:villager_trade":{villager:a,item:(0,s.Opt)(r("item_predicate"))}}},{context:"criterion"}))},{category:"predicate",context:"criterion"}))}me.initAdvancementSchemas=tt;var _e={},ue={};Object.defineProperty(ue,"__esModule",{value:!0});ue.initModelSchemas=void 0;const N=v();function rt(o,e){N.Reference.bind(void 0,o);const r=N.StringNode.bind(void 0,e),t=(n,c,l)=>(0,N.ListNode)((0,N.NumberNode)({min:c,max:l}),{minLength:n,maxLength:n}),a=(0,N.ChoiceNode)([{type:"alias",match:n=>typeof n=="string"&&n.startsWith("#"),node:r(),change:n=>typeof n=="string"?`#${n}`:"#0"},{type:"reference",match:n=>typeof n=="string",node:r({validator:"resource",params:{pool:"$texture"}}),change:n=>typeof n=="string"?n.replace(/^#/,""):""}],{choiceContext:"texture"});o.register("model",(0,N.Mod)((0,N.ObjectNode)({parent:(0,N.Opt)(r({validator:"resource",params:{pool:"$model"}})),ambientocclusion:(0,N.Opt)((0,N.BooleanNode)()),gui_light:(0,N.Opt)(r({enum:"gui_light"})),textures:(0,N.Opt)((0,N.MapNode)(r(),a)),elements:(0,N.Opt)((0,N.ListNode)((0,N.ObjectNode)({from:t(3,-16,32),to:t(3,-16,32),rotation:(0,N.Opt)((0,N.ObjectNode)({origin:t(3),axis:r({enum:"axis"}),angle:(0,N.NumberEnum)({values:[-45,-22.5,0,22.5,45]}),rescale:(0,N.Opt)((0,N.BooleanNode)())})),shade:(0,N.Opt)((0,N.BooleanNode)()),faces:(0,N.MapNode)(r({enum:"direction"}),(0,N.ObjectNode)({texture:a,uv:(0,N.Opt)(t(4)),cullface:(0,N.Opt)(r({enum:"direction"})),rotation:(0,N.Opt)((0,N.NumberNode)({integer:!0})),tintindex:(0,N.Opt)((0,N.NumberNode)({integer:!0}))}))},{context:"model_element"}))),display:(0,N.Opt)((0,N.MapNode)(r({enum:"display_position"}),(0,N.ObjectNode)({rotation:t(3),translation:t(3,-80,80),scale:t(3,-4,4)},{context:"item_transform"}))),overrides:(0,N.Opt)((0,N.ListNode)((0,N.ObjectNode)({predicate:(0,N.MapNode)(r({enum:"item_model_predicates"}),(0,N.NumberNode)()),model:r({validator:"resource",params:{pool:"$model"}})},{context:"model_override"})))},{context:"model"}),{default:()=>({parent:"minecraft:item/generated",textures:{layer0:"minecraft:item/diamond"}})}))}ue.initModelSchemas=rt;var pe={};Object.defineProperty(pe,"__esModule",{value:!0});pe.initBlockDefinitionSchemas=void 0;const S=v();function ot(o,e){const r=S.Reference.bind(void 0,o),t=S.StringNode.bind(void 0,e);o.register("block_definition",(0,S.Mod)((0,S.ChoiceNode)([{type:"variants",match:n=>n.variants!==void 0,node:(0,S.ObjectNode)({variants:(0,S.MapNode)(t(),r("model_variant"))}),change:n=>({variants:{"":{}}})},{type:"multipart",match:n=>n.multipart!==void 0,node:(0,S.ObjectNode)({multipart:(0,S.ListNode)((0,S.ObjectNode)({when:(0,S.Opt)(r("multipart_condition")),apply:r("model_variant")}))}),change:n=>({multipart:{when:{},apply:{}}})}],{context:"block_definition"}),{default:()=>({variants:{"":{model:"minecraft:block/stone"}}})}));const a={model:t({validator:"resource",params:{pool:"$model"}}),x:(0,S.Opt)((0,S.NumberEnum)({integer:!0,values:[0,90,180,270]})),y:(0,S.Opt)((0,S.NumberEnum)({integer:!0,values:[0,90,180,270]})),uvlock:(0,S.Opt)((0,S.BooleanNode)())};o.register("model_variant",(0,S.ChoiceNode)([{type:"object",node:(0,S.ObjectNode)(a),change:n=>Array.isArray(n)&&n.length>0?n[0]:{}},{type:"list",node:(0,S.ListNode)((0,S.ObjectNode)({...a,weight:(0,S.Opt)((0,S.NumberNode)({integer:!0,min:1}))},{context:"model_variant"})),change:n=>[{weight:1,...n}]}],{context:"model_variant"})),o.register("multipart_condition",(0,S.ChoiceNode)([{type:"object",priority:-1,match:()=>!0,node:(0,S.MapNode)(t(),t()),change:n=>typeof n=="object"&&Array.isArray(n==null?void 0:n.OR)&&n.OR.length>0?n.OR[0]:{}},{type:"or",match:n=>typeof n=="object"&&(n==null?void 0:n.OR)!==void 0,node:(0,S.ObjectNode)({OR:(0,S.ListNode)(r("multipart_condition"))}),change:n=>({OR:[n!=null?n:{}]})}],{context:"multipart_condition"}))}pe.initBlockDefinitionSchemas=ot;var ge={};Object.defineProperty(ge,"__esModule",{value:!0});ge.initFontSchemas=void 0;const w=v();function it(o,e){const r=w.Reference.bind(void 0,o),t=w.StringNode.bind(void 0,e);o.register("font",(0,w.ObjectNode)({providers:(0,w.ListNode)(r("glyph_provider"))},{context:"font"})),o.register("glyph_provider",(0,w.Mod)((0,w.ObjectNode)({type:t({enum:"glyph_provider_type"}),[w.Switch]:[{push:"type"}],[w.Case]:{bitmap:{file:t({validator:"resource",params:{pool:"$texture",suffix:".png"}}),height:(0,w.Opt)((0,w.NumberNode)({integer:!0})),ascent:(0,w.NumberNode)({integer:!0}),chars:(0,w.ListNode)(t(),{minLength:1})},reference:{id:t({validator:"resource",params:{pool:"$font"}})},ttf:{file:t({validator:"resource",params:{pool:"$texture",suffix:".png"}}),size:(0,w.Opt)((0,w.NumberNode)()),oversample:(0,w.Opt)((0,w.NumberNode)()),shift:(0,w.Opt)((0,w.ListNode)((0,w.NumberNode)(),{minLength:2,maxLength:2})),skip:(0,w.Opt)((0,w.StringOrList)(t()))},space:{advances:(0,w.MapNode)(t(),(0,w.NumberNode)())},unihex:{hex_file:t(),size_overrides:(0,w.ListNode)((0,w.ObjectNode)({from:t(),to:t(),left:(0,w.NumberNode)({integer:!0}),right:(0,w.NumberNode)({integer:!0})}))}}},{context:"glyph_provider"}),{default:()=>({type:"bitmap"})}))}ge.initFontSchemas=it;var fe={};Object.defineProperty(fe,"__esModule",{value:!0});fe.initAtlasSchemas=void 0;const P=v();function nt(o,e){const r=P.Reference.bind(void 0,o),t=P.StringNode.bind(void 0,e);o.register("atlas",(0,P.ObjectNode)({sources:(0,P.ListNode)(r("sprite_source"))},{context:"atlas"})),o.register("sprite_source",(0,P.Mod)((0,P.ObjectNode)({type:t({enum:"sprite_source_type"}),[P.Switch]:[{push:"type"}],[P.Case]:{single:{resource:t({validator:"resource",params:{pool:"$texture"}}),sprite:(0,P.Opt)(t({validator:"resource",params:{pool:"$texture"}}))},directory:{source:t(),prefix:t()},filter:{pattern:r("resource_location_pattern")},unstitch:{resource:t({validator:"resource",params:{pool:"$texture"}}),divisor_x:(0,P.Opt)((0,P.NumberNode)()),divisor_y:(0,P.Opt)((0,P.NumberNode)()),regions:(0,P.ListNode)((0,P.ObjectNode)({sprite:t({validator:"resource",params:{pool:"$texture"}}),x:(0,P.NumberNode)(),y:(0,P.NumberNode)(),width:(0,P.NumberNode)(),height:(0,P.NumberNode)()}))},paletted_permutations:{textures:(0,P.ListNode)(t({validator:"resource",params:{pool:"$texture"}})),palette_key:t({validator:"resource",params:{pool:"$texture"}}),permutations:(0,P.MapNode)(t(),t({validator:"resource",params:{pool:"$texture"}}))}}},{context:"sprite_source"}),{default:()=>({type:"directory",source:"block",prefix:"block/"})}))}fe.initAtlasSchemas=nt;Object.defineProperty(_e,"__esModule",{value:!0});_e.initAssetsSchemas=void 0;const at=ue,ct=pe,dt=ge,st=fe;function lt(o,e){(0,st.initAtlasSchemas)(o,e),(0,ct.initBlockDefinitionSchemas)(o,e),(0,dt.initFontSchemas)(o,e),(0,at.initModelSchemas)(o,e)}_e.initAssetsSchemas=lt;var be={};Object.defineProperty(be,"__esModule",{value:!0});be.initChatTypeSchemas=void 0;const Y=v();function mt(o,e){const r=Y.Reference.bind(void 0,o),t=Y.StringNode.bind(void 0,e);o.register("chat_type",(0,Y.Mod)((0,Y.ObjectNode)({chat:r("text_decoration"),narration:r("text_decoration")},{context:"chat_type"}),{default:()=>({chat:{translation_key:"chat.type.text",parameters:["sender","content"]},narration:{translation_key:"chat.type.text.narrate",parameters:["sender","content"]}})})),o.register("text_decoration",(0,Y.Mod)((0,Y.ObjectNode)({translation_key:t(),parameters:(0,Y.ListNode)(t({enum:["sender","target","content"]})),style:(0,Y.Opt)(r("text_style"))},{context:"text_decoration"}),{default:()=>({translation_key:"chat.type.text",parameters:["sender","content"],style:{}})}))}be.initChatTypeSchemas=mt;var T={};(function(o){Object.defineProperty(o,"__esModule",{value:!0}),o.initCommonSchemas=o.Tag=o.InclusiveRange=o.IntProvider=o.FloatProvider=o.NoiseSettingsPresets=o.DefaultNoiseSettings=o.FunctionCases=o.ConditionCases=void 0;const e=v();o.DefaultNoiseSettings={sea_level:63,ore_veins_enabled:!0,disable_mob_generation:!1,aquifers_enabled:!0,legacy_random_source:!1,default_block:{Name:"minecraft:stone"},default_fluid:{Properties:{level:"0"},Name:"minecraft:water"},noise:{min_y:-64,height:384,size_horizontal:1,size_vertical:2,top_slide:{target:-.078125,size:2,offset:8},bottom_slide:{target:.1171875,size:3,offset:0},sampling:{xz_scale:.9999999814507745,y_scale:.9999999814507745,xz_factor:80,y_factor:160},terrain_shaper:{offset:0,factor:0,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}};function r(t,a){const n=e.StringNode.bind(void 0,a),c=e.Reference.bind(void 0,t);t.register("block_state",(0,e.Mod)((0,e.ObjectNode)({Name:n({validator:"resource",params:{pool:"block"}}),Properties:(0,e.Opt)((0,e.MapNode)(n(),n(),{validation:{validator:"block_state_map",params:{id:["pop",{push:"Name"}]}}}))},{context:"block_state"}),{default:()=>({Name:"minecraft:stone"})})),t.register("fluid_state",(0,e.Mod)((0,e.ObjectNode)({Name:n({validator:"resource",params:{pool:"fluid"}}),Properties:(0,e.Opt)((0,e.MapNode)(n(),n()))},{context:"fluid_state"}),{default:()=>({Name:"minecraft:water",Properties:{level:"0"}})})),t.register("block_pos",(0,e.Mod)((0,e.ListNode)((0,e.NumberNode)({integer:!0}),{minLength:3,maxLength:3}),{default:()=>[0,0,0]}));const l=u=>(0,e.Opt)((0,e.ChoiceNode)([{type:"number",node:(0,e.NumberNode)({integer:u}),change:b=>{var k,h;return b===void 0?0:(h=(k=b.min)!==null&&k!==void 0?k:b.max)!==null&&h!==void 0?h:0}},{type:"object",node:(0,e.ObjectNode)({min:(0,e.Opt)((0,e.NumberNode)({integer:u})),max:(0,e.Opt)((0,e.NumberNode)({integer:u}))},{context:"range"}),change:b=>({min:b!=null?b:0,max:b!=null?b:0})}]));t.register("int_bounds",l(!0)),t.register("float_bounds",l()),t.register("int_range",(0,e.ChoiceNode)([{type:"object",node:(0,e.ObjectNode)({min:(0,e.Opt)(c("number_provider")),max:(0,e.Opt)(c("number_provider"))})},{type:"number",node:(0,e.NumberNode)({integer:!0})}],{context:"range"})),t.register("resource_location_pattern",(0,e.ObjectNode)({namespace:(0,e.Opt)(n({validator:"regex_pattern"})),path:(0,e.Opt)(n({validator:"regex_pattern"}))},{context:"resource_location_pattern"}));const j=(u,b,k,h,R,F,U)=>{let ce={};R&&Object.keys(U[R]).forEach(A=>{ce[A]=(0,e.Mod)(U[R][A],{enabled:W=>W.push("type").get()===void 0})});const Q=(0,e.ObjectNode)({type:(0,e.Mod)((0,e.Opt)(n({validator:"resource",params:{pool:u}})),{hidden:()=>!0}),[e.Switch]:[{push:"type"}],[e.Case]:U,...ce},{context:F,disableSwitchContext:!0}),ee=[{type:b,node:U[h][k]}];return R&&ee.push({type:"object",priority:-1,node:Q}),Object.keys(U).forEach(A=>{ee.push({type:A,match:W=>{var te;if("minecraft:"+((te=W==null?void 0:W.type)===null||te===void 0?void 0:te.replace(/^minecraft:/,""))===A)return!0;const V=W?Object.keys(W):[];return typeof W=="object"&&((V==null?void 0:V.length)===0||(V==null?void 0:V.length)===1&&(V==null?void 0:V[0])==="type")},node:Q,change:W=>({type:A})})}),(0,e.ChoiceNode)(ee,{context:F,choiceContext:`${F}.type`})};t.register("number_provider",j("loot_number_provider_type","number","value","minecraft:constant","minecraft:uniform","number_provider",{"minecraft:constant":{value:(0,e.NumberNode)()},"minecraft:uniform":{min:c("number_provider"),max:c("number_provider")},"minecraft:binomial":{n:c("number_provider"),p:c("number_provider")},"minecraft:score":{target:c("scoreboard_name_provider"),score:n({validator:"objective"}),scale:(0,e.Opt)((0,e.NumberNode)())}})),t.register("scoreboard_name_provider",j("loot_score_provider_type","string","target","minecraft:context",null,"score_provider",{"minecraft:fixed":{name:n({validator:"entity",params:{amount:"multiple",type:"entities",isScoreHolder:!0}})},"minecraft:context":{target:(0,e.Mod)(n({enum:"entity_source"}),{default:()=>"this"})}})),t.register("nbt_provider",j("loot_nbt_provider_type","string","target","minecraft:context",null,"nbt_provider",{"minecraft:storage":{source:n({validator:"resource",params:{pool:"$storage"}})},"minecraft:context":{target:(0,e.Mod)(n({enum:"copy_source"}),{default:()=>"this"})}})),o.FloatProvider=u=>j("float_provider_type","number","value","minecraft:constant",null,"float_provider",{"minecraft:constant":{value:(0,e.NumberNode)(u)},"minecraft:uniform":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)(u),max_exclusive:(0,e.NumberNode)(u)})},"minecraft:clamped_normal":{value:(0,e.ObjectNode)({min:(0,e.NumberNode)(),max:(0,e.NumberNode)(),mean:(0,e.NumberNode)(),deviation:(0,e.NumberNode)()})},"minecraft:trapezoid":{value:(0,e.ObjectNode)({min:(0,e.NumberNode)(),max:(0,e.NumberNode)(),plateau:(0,e.NumberNode)()})}}),t.register("float_provider",(0,o.FloatProvider)()),o.IntProvider=u=>j("int_provider_type","number","value","minecraft:constant",null,"int_provider",{"minecraft:constant":{value:(0,e.NumberNode)({integer:!0,...u})},"minecraft:uniform":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)({integer:!0,...u}),max_inclusive:(0,e.NumberNode)({integer:!0,...u})})},"minecraft:biased_to_bottom":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)({integer:!0,...u}),max_inclusive:(0,e.NumberNode)({integer:!0,...u})})},"minecraft:clamped":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)({integer:!0,...u}),max_inclusive:(0,e.NumberNode)({integer:!0,...u}),source:c("int_provider")})},"minecraft:clamped_normal":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)({integer:!0,...u}),max_inclusive:(0,e.NumberNode)({integer:!0,...u}),mean:(0,e.NumberNode)(),deviation:(0,e.NumberNode)()})},"minecraft:weighted_list":{distribution:(0,e.ListNode)((0,e.ObjectNode)({weight:(0,e.NumberNode)({integer:!0}),data:c("int_provider")}))}}),t.register("int_provider",(0,o.IntProvider)()),t.register("vertical_anchor",(0,e.ChoiceNode)(["absolute","above_bottom","below_top"].map(u=>({type:u,match:b=>(b==null?void 0:b[u])!==void 0,change:b=>{var k,h,R;return{[u]:(R=(h=(k=b.absolute)!==null&&k!==void 0?k:b.above_bottom)!==null&&h!==void 0?h:b.below_top)!==null&&R!==void 0?R:0}},node:(0,e.ObjectNode)({[u]:(0,e.NumberNode)({integer:!0,min:-2048,max:2047})})})),{context:"vertical_anchor"})),t.register("height_provider",j("height_provider_type","number","value","minecraft:constant",null,"height_provider",{"minecraft:constant":{value:c("vertical_anchor")},"minecraft:uniform":{min_inclusive:c("vertical_anchor"),max_inclusive:c("vertical_anchor")},"minecraft:biased_to_bottom":{min_inclusive:c("vertical_anchor"),max_inclusive:c("vertical_anchor"),inner:(0,e.Opt)((0,e.NumberNode)({integer:!0,min:1}))},"minecraft:very_biased_to_bottom":{min_inclusive:c("vertical_anchor"),max_inclusive:c("vertical_anchor"),inner:(0,e.Opt)((0,e.NumberNode)({integer:!0,min:1}))},"minecraft:trapezoid":{min_inclusive:c("vertical_anchor"),max_inclusive:c("vertical_anchor"),plateau:(0,e.Opt)((0,e.NumberNode)({integer:!0}))},"minecraft:weighted_list":{distribution:(0,e.ListNode)((0,e.ObjectNode)({weight:(0,e.NumberNode)({integer:!0}),data:c("height_provider")}))}})),o.InclusiveRange=u=>(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)(u),max_inclusive:(0,e.NumberNode)(u)},{context:"range"}),t.register("noise_parameters",(0,e.Mod)((0,e.ObjectNode)({firstOctave:(0,e.NumberNode)({integer:!0}),amplitudes:(0,e.ListNode)((0,e.NumberNode)())},{context:"noise_parameters"}),{default:()=>({firstOctave:-7,amplitudes:[1,1]})})),o.Tag=u=>(0,e.ChoiceNode)([{type:"string",node:n({validator:"resource",params:{pool:u.resource,allowTag:!0}}),change:b=>{if(Array.isArray(b)&&typeof b[0]=="string"&&!b[0].startsWith("#"))return b[0]}},{type:"list",node:(0,e.ListNode)(u.inlineSchema?(0,e.ChoiceNode)([{type:"string",node:n({validator:"resource",params:{pool:u.resource}})},{type:"object",node:c(u.inlineSchema)}],{choiceContext:"tag.list"}):n({validator:"resource",params:{pool:u.resource}})),change:b=>typeof b=="string"&&!b.startsWith("#")?[b]:[]}],{choiceContext:"tag"}),o.ConditionCases=(u=n({enum:"entity_source"}))=>({"minecraft:all_of":{terms:(0,e.ListNode)(c("condition"))},"minecraft:any_of":{terms:(0,e.ListNode)(c("condition"))},"minecraft:block_state_property":{block:n({validator:"resource",params:{pool:"block"}}),properties:(0,e.MapNode)(n(),n(),{validation:{validator:"block_state_map",params:{id:["pop",{push:"block"}]}}})},"minecraft:damage_source_properties":{predicate:c("damage_source_predicate")},"minecraft:entity_properties":{entity:u,predicate:c("entity_predicate")},"minecraft:entity_scores":{entity:u,scores:(0,e.MapNode)(n({validator:"objective"}),c("int_range"))},"minecraft:inverted":{term:c("condition")},"minecraft:killed_by_player":{inverse:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:location_check":{offsetX:(0,e.Opt)((0,e.NumberNode)({integer:!0})),offsetY:(0,e.Opt)((0,e.NumberNode)({integer:!0})),offsetZ:(0,e.Opt)((0,e.NumberNode)({integer:!0})),predicate:c("location_predicate")},"minecraft:match_tool":{predicate:c("item_predicate")},"minecraft:random_chance":{chance:(0,e.NumberNode)({min:0,max:1})},"minecraft:random_chance_with_looting":{chance:(0,e.NumberNode)({min:0,max:1}),looting_multiplier:(0,e.NumberNode)()},"minecraft:reference":{name:n({validator:"resource",params:{pool:"$predicate"}})},"minecraft:table_bonus":{enchantment:n({validator:"resource",params:{pool:"enchantment"}}),chances:(0,e.ListNode)((0,e.NumberNode)({min:0,max:1}))},"minecraft:time_check":{value:c("int_range"),period:(0,e.Opt)((0,e.NumberNode)({integer:!0}))},"minecraft:value_check":{value:c("number_provider"),range:c("int_range")},"minecraft:weather_check":{raining:(0,e.Opt)((0,e.BooleanNode)()),thundering:(0,e.Opt)((0,e.BooleanNode)())}}),o.FunctionCases=(u,b=n({enum:"copy_source"}),k=n({enum:"entity_source"}))=>{const h={"minecraft:apply_bonus":{enchantment:n({validator:"resource",params:{pool:"enchantment"}}),formula:n({validator:"resource",params:{pool:a.get("loot_table_apply_bonus_formula")}}),parameters:(0,e.Mod)((0,e.ObjectNode)({bonusMultiplier:(0,e.Mod)((0,e.NumberNode)(),{enabled:F=>F.pop().push("formula").get()==="minecraft:uniform_bonus_count"}),extra:(0,e.Mod)((0,e.NumberNode)(),{enabled:F=>F.pop().push("formula").get()==="minecraft:binomial_with_bonus_count"}),probability:(0,e.Mod)((0,e.NumberNode)(),{enabled:F=>F.pop().push("formula").get()==="minecraft:binomial_with_bonus_count"})}),{enabled:F=>F.push("formula").get()!=="minecraft:ore_drops"})},"minecraft:copy_name":{source:b},"minecraft:copy_nbt":{source:c("nbt_provider"),ops:(0,e.ListNode)((0,e.ObjectNode)({source:n({validator:"nbt_path",params:{category:{getter:"copy_source",path:["pop","pop","pop",{push:"source"}]}}}),target:n({validator:"nbt_path",params:{category:"minecraft:item"}}),op:n({enum:["replace","append","merge"]})},{context:"nbt_operation"}))},"minecraft:copy_state":{block:n({validator:"resource",params:{pool:"block"}}),properties:(0,e.ListNode)(n({validator:"block_state_key",params:{id:["pop","pop",{push:"block"}]}}))},"minecraft:enchant_randomly":{enchantments:(0,e.Opt)((0,e.ListNode)(n({validator:"resource",params:{pool:"enchantment"}})))},"minecraft:enchant_with_levels":{levels:c("number_provider"),treasure:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:exploration_map":{destination:(0,e.Opt)(n({validator:"resource",params:{pool:"$tag/worldgen/structure"}})),decoration:(0,e.Opt)(n({enum:"map_decoration"})),zoom:(0,e.Opt)((0,e.NumberNode)({integer:!0})),search_radius:(0,e.Opt)((0,e.NumberNode)({integer:!0})),skip_existing_chunks:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:fill_player_head":{entity:k},"minecraft:limit_count":{limit:c("int_range")},"minecraft:looting_enchant":{count:c("number_provider"),limit:(0,e.Opt)((0,e.NumberNode)({integer:!0}))},"minecraft:reference":{name:n({validator:"resource",params:{pool:"$item_modifier"}})},"minecraft:sequence":{functions:(0,e.ListNode)(c("item_modifier"))},"minecraft:set_attributes":{modifiers:(0,e.ListNode)(c("attribute_modifier"))},"minecraft:set_banner_pattern":{patterns:(0,e.ListNode)((0,e.ObjectNode)({pattern:n({enum:"banner_pattern"}),color:n({enum:"dye_color"})})),append:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_contents":{type:n({validator:"resource",params:{pool:"block_entity_type"}}),entries:(0,e.ListNode)(c("loot_entry"))},"minecraft:set_count":{count:c("number_provider"),add:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_damage":{damage:c("number_provider"),add:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_enchantments":{enchantments:(0,e.MapNode)(n({validator:"resource",params:{pool:"enchantment"}}),c("number_provider")),add:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_instrument":{options:n({validator:"resource",params:{pool:"instrument",requireTag:!0}})},"minecraft:set_loot_table":{type:n({validator:"resource",params:{pool:"block_entity_type"}}),name:n({validator:"resource",params:{pool:"$loot_table"}}),seed:(0,e.Opt)((0,e.NumberNode)({integer:!0}))},"minecraft:set_lore":{entity:(0,e.Opt)(k),lore:(0,e.ListNode)(c("text_component")),replace:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_name":{entity:(0,e.Opt)(k),name:(0,e.Opt)(c("text_component"))},"minecraft:set_nbt":{tag:n({validator:"nbt",params:{registry:{category:"minecraft:item"}}})},"minecraft:set_potion":{id:n({validator:"resource",params:{pool:"potion"}})},"minecraft:set_stew_effect":{effects:(0,e.Opt)((0,e.ListNode)((0,e.ObjectNode)({type:n({validator:"resource",params:{pool:"mob_effect"}}),duration:c("number_provider")})))}},R={};return a.get("loot_function_type").forEach(F=>{R[F]={...h[F],...u}}),R},o.NoiseSettingsPresets=u=>(0,e.ObjectOrPreset)(n({validator:"resource",params:{pool:"$worldgen/noise_settings"}}),u,{"minecraft:overworld":o.DefaultNoiseSettings,"minecraft:nether":{sea_level:32,ore_veins_enabled:!1,disable_mob_generation:!1,aquifers_enabled:!1,legacy_random_source:!0,default_block:{Name:"minecraft:netherrack"},default_fluid:{Properties:{level:"0"},Name:"minecraft:lava"},noise:{min_y:0,height:128,size_horizontal:1,size_vertical:2,top_slide:{target:.9375,size:3,offset:0},bottom_slide:{target:2.5,size:4,offset:-1},sampling:{xz_scale:1,y_scale:3,xz_factor:80,y_factor:60},terrain_shaper:{offset:0,factor:0,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}},"minecraft:end":{sea_level:0,ore_veins_enabled:!1,disable_mob_generation:!1,aquifers_enabled:!1,legacy_random_source:!0,default_block:{Name:"minecraft:end_stone"},default_fluid:{Name:"minecraft:air"},noise:{min_y:0,height:128,size_horizontal:2,size_vertical:1,top_slide:{target:-23.4375,size:64,offset:-46},bottom_slide:{target:-.234375,size:7,offset:1},sampling:{xz_scale:2,y_scale:1,xz_factor:80,y_factor:160},terrain_shaper:{offset:0,factor:1,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}},"minecraft:amplified":{sea_level:63,ore_veins_enabled:!0,disable_mob_generation:!1,aquifers_enabled:!0,legacy_random_source:!1,default_block:{Name:"minecraft:stone"},default_fluid:{Properties:{level:"0"},Name:"minecraft:water"},noise:{min_y:-64,height:384,size_horizontal:1,size_vertical:2,top_slide:{target:-.078125,size:2,offset:8},bottom_slide:{target:.1171875,size:3,offset:0},sampling:{xz_scale:.9999999814507745,y_scale:.9999999814507745,xz_factor:80,y_factor:160},terrain_shaper:{offset:0,factor:0,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}},"minecraft:caves":{sea_level:32,ore_veins_enabled:!1,disable_mob_generation:!1,aquifers_enabled:!1,legacy_random_source:!0,default_block:{Name:"minecraft:stone"},default_fluid:{Properties:{level:"0"},Name:"minecraft:water"},noise:{min_y:0,height:128,size_horizontal:1,size_vertical:2,top_slide:{target:.9375,size:3,offset:0},bottom_slide:{target:2.5,size:4,offset:-1},sampling:{xz_scale:1,y_scale:3,xz_factor:80,y_factor:60},terrain_shaper:{offset:0,factor:0,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}},"minecraft:floating_islands":{sea_level:0,ore_veins_enabled:!1,disable_mob_generation:!1,aquifers_enabled:!1,legacy_random_source:!0,default_block:{Name:"minecraft:stone"},default_fluid:{Properties:{level:"0"},Name:"minecraft:water"},noise:{min_y:0,height:128,size_horizontal:2,size_vertical:1,top_slide:{target:-23.4375,size:64,offset:-46},bottom_slide:{target:-.234375,size:7,offset:1},sampling:{xz_scale:2,y_scale:1,xz_factor:80,y_factor:160},terrain_shaper:{offset:0,factor:1,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}}})}o.initCommonSchemas=r})(T);var Ne={};Object.defineProperty(Ne,"__esModule",{value:!0});Ne.initConditionSchemas=void 0;const re=v(),_t=T;function ut(o,e){const r=re.Reference.bind(void 0,o),t=re.StringNode.bind(void 0,e);o.register("predicate",(0,re.ObjectOrList)(r("condition"),{choiceContext:"condition"})),o.register("condition",(0,re.Mod)((0,re.ObjectNode)({condition:t({validator:"resource",params:{pool:"loot_condition_type"}}),[re.Switch]:[{push:"condition"}],[re.Case]:(0,_t.ConditionCases)()},{category:"predicate",context:"condition"}),{default:()=>({condition:"minecraft:entity_properties",entity:"this"})}))}Ne.initConditionSchemas=ut;var ye={};Object.defineProperty(ye,"__esModule",{value:!0});ye.initDamageTypeSchemas=void 0;const ie=v();function pt(o,e){const r=ie.StringNode.bind(void 0,e);o.register("damage_type",(0,ie.Mod)((0,ie.ObjectNode)({message_id:r(),exhaustion:(0,ie.NumberNode)(),scaling:r({enum:"damage_scaling"}),effects:(0,ie.Opt)(r({enum:"damage_effects"})),death_message_type:(0,ie.Opt)(r({enum:"death_message_type"}))},{context:"damage_type"}),{default:()=>({message_id:"generic",exhaustion:0,scaling:"when_caused_by_living_non_player"})}))}ye.initDamageTypeSchemas=pt;var he={};Object.defineProperty(he,"__esModule",{value:!0});he.initDimensionSchemas=void 0;const O=v(),Ae=T;function gt(o,e){const r=O.Reference.bind(void 0,o),t=O.StringNode.bind(void 0,e);o.register("dimension",(0,O.Mod)((0,O.ObjectNode)({type:t({validator:"resource",params:{pool:"$dimension_type"}}),generator:(0,O.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/chunk_generator"}}),[O.Switch]:[{push:"type"}],[O.Case]:{"minecraft:noise":{settings:(0,Ae.NoiseSettingsPresets)(r("noise_settings")),biome_source:(0,O.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/biome_source"}}),[O.Switch]:[{push:"type"}],[O.Case]:{"minecraft:fixed":{biome:t({validator:"resource",params:{pool:"$worldgen/biome"}})},"minecraft:multi_noise":{preset:(0,O.Opt)(t({validator:"resource",params:{pool:["minecraft:overworld","minecraft:nether"]}})),biomes:(0,O.Mod)((0,O.ListNode)(r("generator_biome")),{enabled:n=>n.push("preset").get()===void 0,default:()=>[{biome:"minecraft:plains"}]})},"minecraft:checkerboard":{scale:(0,O.Opt)((0,O.NumberNode)({integer:!0,min:0,max:62})),biomes:(0,Ae.Tag)({resource:"$worldgen/biome"})}}},{category:"predicate",disableSwitchContext:!0})},"minecraft:flat":{settings:r("flat_generator_settings")}}},{disableSwitchContext:!0})},{category:"pool",context:"dimension"}),{default:()=>({type:"minecraft:overworld",generator:{type:"minecraft:noise",biome_source:{type:"minecraft:fixed",biome:"minecraft:plains"},settings:"minecraft:overworld"}})})),o.register("flat_generator_settings",(0,O.ObjectNode)({biome:(0,O.Opt)(t({validator:"resource",params:{pool:"$worldgen/biome"}})),lakes:(0,O.Opt)((0,O.BooleanNode)()),features:(0,O.Opt)((0,O.BooleanNode)()),layers:(0,O.ListNode)(r("generator_layer")),structure_overrides:(0,Ae.Tag)({resource:"$worldgen/structure_set"})}));const a=(0,O.ChoiceNode)([{type:"number",node:(0,O.NumberNode)({min:-2,max:2}),change:n=>{var c;return(c=n[0])!==null&&c!==void 0?c:0}},{type:"list",node:(0,O.ListNode)((0,O.NumberNode)({min:-2,max:2}),{minLength:2,maxLength:2}),change:n=>[n!=null?n:0,n!=null?n:0]}]);o.register("parameter_point",(0,O.ObjectNode)({temperature:a,humidity:a,continentalness:a,erosion:a,weirdness:a,depth:a,offset:(0,O.NumberNode)({min:0,max:1})})),o.register("generator_biome",(0,O.Mod)((0,O.ObjectNode)({biome:t({validator:"resource",params:{pool:"$worldgen/biome"}}),parameters:r("parameter_point")},{context:"generator_biome"}),{default:()=>({biome:"minecraft:plains",parameters:{temperature:0,humidity:0,continentalness:0,erosion:0,weirdness:0,depth:0,offset:0}})}))}he.initDimensionSchemas=gt;var ve={};Object.defineProperty(ve,"__esModule",{value:!0});ve.initDimensionTypeSchemas=void 0;const $=v(),ft=T;function bt(o,e){const r=$.StringNode.bind(void 0,e);o.register("dimension_type",(0,$.Mod)((0,$.ObjectNode)({ultrawarm:(0,$.BooleanNode)(),natural:(0,$.BooleanNode)(),piglin_safe:(0,$.BooleanNode)(),respawn_anchor_works:(0,$.BooleanNode)(),bed_works:(0,$.BooleanNode)(),has_raids:(0,$.BooleanNode)(),has_skylight:(0,$.BooleanNode)(),has_ceiling:(0,$.BooleanNode)(),coordinate_scale:(0,$.NumberNode)({min:1e-5,max:3e7}),ambient_light:(0,$.NumberNode)(),fixed_time:(0,$.Opt)((0,$.NumberNode)({integer:!0})),logical_height:(0,$.NumberNode)({integer:!0,min:0,max:4064}),effects:(0,$.Opt)(r({validator:"resource",params:{pool:["minecraft:overworld","minecraft:the_nether","minecraft:the_end"]}})),infiniburn:r({validator:"resource",params:{pool:"block",requireTag:!0}}),min_y:(0,$.NumberNode)({integer:!0,min:-2032,max:2031}),height:(0,$.NumberNode)({integer:!0,min:16,max:4064}),monster_spawn_light_level:(0,ft.IntProvider)({min:0,max:15}),monster_spawn_block_light_limit:(0,$.NumberNode)({integer:!0,min:0,max:15})},{context:"dimension_type"}),t=>({default:()=>({ultrawarm:!1,natural:!0,piglin_safe:!1,respawn_anchor_works:!1,bed_works:!0,has_raids:!0,has_skylight:!0,has_ceiling:!1,coordinate_scale:1,ambient_light:0,logical_height:384,effects:"minecraft:overworld",infiniburn:"#minecraft:infiniburn_overworld",min_y:-64,height:384,monster_spawn_block_light_limit:0,monster_spawn_light_level:{type:"minecraft:uniform",value:{min_inclusive:0,max_inclusive:7}}}),validate:(a,n,c,l)=>(n=t.validate(a,n,c,l),(n==null?void 0:n.min_y)+(n==null?void 0:n.height)>2032&&c.add(a.push("height"),"error.min_y_plus_height",2032),(n==null?void 0:n.logical_height)>(n==null?void 0:n.height)&&c.add(a.push("logical_height"),"error.logical_height"),(n==null?void 0:n.height)%16!==0&&c.add(a.push("height"),"error.height_multiple",16),(n==null?void 0:n.min_y)%16!==0&&c.add(a.push("min_y"),"error.min_y_multiple",16),n)})))}ve.initDimensionTypeSchemas=bt;var Oe={};Object.defineProperty(Oe,"__esModule",{value:!0});Oe.initItemModifierSchemas=void 0;const G=v(),Nt=T;function yt(o,e){const r=G.Reference.bind(void 0,o),t=G.StringNode.bind(void 0,e);o.register("item_modifier",(0,G.ObjectOrList)(r("function"),{choiceContext:"function"}));const a={conditions:(0,G.Opt)((0,G.ListNode)(r("condition")))};o.register("function",(0,G.Mod)((0,G.ObjectNode)({function:t({validator:"resource",params:{pool:"loot_function_type"}}),[G.Switch]:[{push:"function"}],[G.Case]:(0,Nt.FunctionCases)(a)},{category:"function",context:"function"}),{default:()=>[{function:"minecraft:set_count",count:1}]}))}Oe.initItemModifierSchemas=yt;var xe={},I={};Object.defineProperty(I,"__esModule",{value:!0});I.LootFunctions=I.LootConditions=I.LootCopySources=I.LootEntitySources=I.LootTableTypes=void 0;I.LootTableTypes=new Map([["minecraft:advancement_entity",{requires:[7,8],allows:[]}],["minecraft:advancement_location",{requires:[7,8,9,1],allows:[]}],["minecraft:advancement_reward",{requires:[7,8],allows:[]}],["minecraft:archaeology",{requires:[7],allows:[8]}],["minecraft:barter",{requires:[8],allows:[]}],["minecraft:block",{requires:[1,7,9],allows:[0,4,8]}],["minecraft:chest",{requires:[7],allows:[8]}],["minecraft:command",{requires:[7],allows:[8]}],["minecraft:empty",{requires:[],allows:[]}],["minecraft:entity",{requires:[2,7,8],allows:[3,5,6]}],["minecraft:fishing",{requires:[7,9],allows:[8]}],["minecraft:generic",{requires:[2,0,1,3,4,5,6,7,8,9],allows:[]}],["minecraft:gift",{requires:[7,8],allows:[]}],["minecraft:selector",{requires:[7],allows:[8]}]]);I.LootEntitySources=new Map([["direct_killer",[3]],["killer",[5]],["killer_player",[5]],["this",[8]]]);I.LootCopySources=new Map([["block_entity",[0]],["killer",[5]],["killer_player",[5]],["this",[8]]]);I.LootConditions=new Map([["minecraft:alternative",[]],["minecraft:block_state_property",[1]],["minecraft:damage_source_properties",[2]],["minecraft:entity_properties",[7]],["minecraft:entity_scores",[]],["minecraft:inverted",[]],["minecraft:killed_by_player",[6]],["minecraft:location_check",[]],["minecraft:match_tool",[9]],["minecraft:random_chance",[]],["minecraft:random_chance_with_looting",[5]],["minecraft:reference",[]],["minecraft:survives_explosion",[4]],["minecraft:table_bonus",[9]],["minecraft:time_check",[]],["minecraft:weather_check",[]]]);I.LootFunctions=new Map([["minecraft:apply_bonus",[9]],["minecraft:copy_name",[]],["minecraft:copy_nbt",[]],["minecraft:copy_state",[1]],["minecraft:enchant_randomly",[]],["minecraft:enchant_with_levels",[]],["minecraft:exploration_map",[7]],["minecraft:explosion_decay",[]],["minecraft:fill_player_head",[]],["minecraft:furnace_smelt",[]],["minecraft:limit_count",[]],["minecraft:looting_enchant",[5]],["minecraft:set_attributes",[]],["minecraft:set_banner_pattern",[]],["minecraft:set_contents",[]],["minecraft:set_count",[]],["minecraft:set_damage",[]],["minecraft:set_loot_table",[]],["minecraft:set_lore",[]],["minecraft:set_name",[]],["minecraft:set_nbt",[]],["minecraft:set_stew_effect",[]]]);Object.defineProperty(xe,"__esModule",{value:!0});xe.initLootTableSchemas=void 0;const g=v(),ae=I,Ve=T;function ht(o,e){const r=g.Reference.bind(void 0,o),t=g.StringNode.bind(void 0,e),a={conditions:(0,g.Opt)((0,g.ListNode)(r("loot_condition")))},n={functions:(0,g.Opt)((0,g.ListNode)(r("loot_function"))),...a};function c(h,R,F){const U=[],ce=Q=>e.get(R).filter(ee=>{var A;return((A=h.get(ee))!==null&&A!==void 0?A:[]).every(te=>Q.includes(te))});for(const[Q,{allows:ee,requires:A}]of ae.LootTableTypes){const W=[...ee,...A];U.push({match:te=>te.getModel().get(new g.Path(["type"]))===Q,node:F(ce(W))})}return U.push({match:Q=>!0,node:F(R)}),(0,g.SwitchNode)(U)}const l=c(ae.LootConditions,"loot_condition_type",h=>t({validator:"resource",params:{pool:h instanceof Array?h:"loot_condition_type"}})),j=c(ae.LootFunctions,"loot_function_type",h=>t({validator:"resource",params:{pool:h instanceof Array?h:"loot_function_type"}})),u=c(ae.LootEntitySources,"entity_source",h=>t({enum:h})),b=c(ae.LootCopySources,"copy_source",h=>t({enum:h}));o.register("loot_table",(0,g.Mod)((0,g.ObjectNode)({type:(0,g.Opt)(t({validator:"resource",params:{pool:e.get("loot_context_type")}})),pools:(0,g.Opt)((0,g.ListNode)((0,g.Mod)((0,g.ObjectNode)({rolls:r("number_provider"),bonus_rolls:(0,g.Opt)(r("number_provider")),entries:(0,g.ListNode)(r("loot_entry")),...n},{category:"pool",context:"loot_pool"}),{default:()=>({rolls:1,entries:[{type:"minecraft:item",name:"minecraft:stone"}]})}))),functions:(0,g.Opt)((0,g.ListNode)(r("loot_function"))),random_sequence:(0,g.Opt)(t({validator:"resource",params:{pool:[],allowUnknown:!0}}))},{context:"loot_table"}),{default:()=>({pools:[{rolls:1,entries:[{type:"minecraft:item",name:"minecraft:stone"}]}]})}));const k={weight:(0,g.Opt)((0,g.NumberNode)({integer:!0})),quality:(0,g.Opt)((0,g.NumberNode)({integer:!0})),...n};o.register("loot_entry",(0,g.Mod)((0,g.ObjectNode)({type:t({validator:"resource",params:{pool:"loot_pool_entry_type"}}),[g.Switch]:[{push:"type"}],[g.Case]:{"minecraft:alternatives":{children:(0,g.ListNode)(r("loot_entry")),...a},"minecraft:dynamic":{name:t(),...k},"minecraft:empty":{...k},"minecraft:group":{children:(0,g.ListNode)(r("loot_entry")),...a},"minecraft:item":{name:t({validator:"resource",params:{pool:"item"}}),...k},"minecraft:loot_table":{name:t({validator:"resource",params:{pool:"$loot_table"}}),...k},"minecraft:sequence":{children:(0,g.ListNode)(r("loot_entry")),...a},"minecraft:tag":{name:t({validator:"resource",params:{pool:"$tag/item"}}),expand:(0,g.BooleanNode)(),...k}}},{context:"loot_entry"}),{default:()=>({type:"minecraft:item",name:"minecraft:stone"})})),o.register("loot_function",(0,g.Mod)((0,g.ObjectNode)({function:j,[g.Switch]:[{push:"function"}],[g.Case]:(0,Ve.FunctionCases)(a,b,u)},{category:"function",context:"function"}),{default:()=>({function:"minecraft:set_count",count:1})})),o.register("loot_condition",(0,g.Mod)((0,g.ObjectNode)({condition:l,[g.Switch]:[{push:"condition"}],[g.Case]:(0,Ve.ConditionCases)(u)},{category:"predicate",context:"condition"}),{default:()=>({condition:"minecraft:random_chance",chance:.5})})),o.register("attribute_modifier",(0,g.Mod)((0,g.ObjectNode)({attribute:t({validator:"resource",params:{pool:"attribute"}}),name:t(),amount:r("number_provider"),operation:t({enum:["addition","multiply_base","multiply_total"]}),id:(0,g.Opt)(t({validator:"uuid"})),slot:(0,g.StringOrList)(t({enum:"slot"}))},{context:"attribute_modifier"}),{default:()=>({attribute:"minecraft:generic.max_health",name:"",amount:1,operation:"addition",slot:"mainhand"})}))}xe.initLootTableSchemas=ht;var ke={};Object.defineProperty(ke,"__esModule",{value:!0});ke.initPackMcmetaSchemas=void 0;const M=v(),vt=T,We=26;function Ot(o,e){const r=M.Reference.bind(void 0,o),t=M.StringNode.bind(void 0,e);o.register("pack_mcmeta",(0,M.Mod)((0,M.ObjectNode)({pack:(0,M.Mod)((0,M.ObjectNode)({pack_format:(0,M.Mod)((0,M.NumberNode)({integer:!0}),{default:()=>We}),supported_formats:(0,M.Opt)(r("pack_format_range")),description:r("text_component")}),{default:()=>({pack_format:We,description:""})}),features:(0,M.Opt)((0,M.ObjectNode)({enabled:(0,M.ListNode)(t({enum:"feature_flags"}))})),filter:(0,M.Opt)((0,M.ObjectNode)({block:(0,M.ListNode)(r("resource_location_pattern"))})),overlays:(0,M.Opt)((0,M.ObjectNode)({entries:(0,M.ListNode)(r("pack_overlay"))}))},{context:"pack",category:"pack"}),{default:()=>({pack:{pack_format:We,description:""}})})),o.register("pack_format_range",(0,M.ChoiceNode)([{type:"number",node:(0,M.NumberNode)({integer:!0}),change:a=>{var n,c;return Array.isArray(a)?(n=a[0])!==null&&n!==void 0?n:0:(c=a==null?void 0:a.min_inclusive)!==null&&c!==void 0?c:0}},{type:"list",node:(0,M.ListNode)((0,M.NumberNode)({integer:!0}),{minLength:2,maxLength:2}),change:a=>{var n,c;return typeof a=="number"?[a,a]:[(n=a==null?void 0:a.min_inclusive)!==null&&n!==void 0?n:0,(c=a==null?void 0:a.max_inclusive)!==null&&c!==void 0?c:0]}},{type:"object",node:(0,vt.InclusiveRange)({integer:!0}),change:a=>{var n,c;return Array.isArray(a)?{min_inclusive:(n=a[0])!==null&&n!==void 0?n:0,max_inclusive:(c=a[1])!==null&&c!==void 0?c:0}:{min_inclusive:a!=null?a:0,max_inclusive:a!=null?a:0}}}])),o.register("pack_overlay",(0,M.ObjectNode)({formats:r("pack_format_range"),directory:t()},{context:"pack_overlay"}))}ke.initPackMcmetaSchemas=Ot;var we={};Object.defineProperty(we,"__esModule",{value:!0});we.initPredicatesSchemas=void 0;const d=v();function xt(o,e){const r=d.Reference.bind(void 0,o),t=d.StringNode.bind(void 0,e);o.register("item_predicate",(0,d.ObjectNode)({items:(0,d.Opt)((0,d.ListNode)(t({validator:"resource",params:{pool:"item"}}))),tag:(0,d.Opt)(t({validator:"resource",params:{pool:"$tag/item"}})),count:r("int_bounds"),durability:r("int_bounds"),potion:(0,d.Opt)(t({validator:"resource",params:{pool:"potion"}})),nbt:(0,d.Opt)(t({validator:"nbt",params:{registry:{category:"minecraft:item",id:["pop",{push:"item"}]}}})),enchantments:(0,d.Opt)((0,d.ListNode)(r("enchantment_predicate")))},{context:"item"})),o.register("enchantment_predicate",(0,d.ObjectNode)({enchantment:(0,d.Opt)(t({validator:"resource",params:{pool:"enchantment"}})),levels:r("int_bounds")},{context:"enchantment"})),o.register("block_predicate",(0,d.ObjectNode)({blocks:(0,d.Opt)((0,d.ListNode)(t({validator:"resource",params:{pool:"block"}}))),tag:(0,d.Opt)(t({validator:"resource",params:{pool:"$tag/block"}})),nbt:(0,d.Opt)(t({validator:"nbt",params:{registry:{category:"minecraft:block",id:["pop",{push:"block"}]}}})),state:(0,d.Opt)((0,d.MapNode)(t(),t(),{validation:{validator:"block_state_map",params:{id:["pop",{push:"block"}]}}}))},{context:"block"})),o.register("fluid_predicate",(0,d.ObjectNode)({fluid:(0,d.Opt)(t({validator:"resource",params:{pool:"fluid"}})),tag:(0,d.Opt)(t({validator:"resource",params:{pool:"$tag/fluid"}})),state:(0,d.Opt)((0,d.MapNode)(t(),t()))},{context:"fluid"})),o.register("location_predicate",(0,d.ObjectNode)({position:(0,d.Opt)((0,d.ObjectNode)({x:r("float_bounds"),y:r("float_bounds"),z:r("float_bounds")})),biome:(0,d.Opt)(t({validator:"resource",params:{pool:"$worldgen/biome"}})),structure:(0,d.Opt)(t({validator:"resource",params:{pool:"$worldgen/structure"}})),dimension:(0,d.Opt)(t({validator:"resource",params:{pool:"$dimension"}})),light:(0,d.Opt)((0,d.ObjectNode)({light:r("int_bounds")})),smokey:(0,d.Opt)((0,d.BooleanNode)()),block:(0,d.Opt)(r("block_predicate")),fluid:(0,d.Opt)(r("fluid_predicate"))},{context:"location"})),o.register("statistic_predicate",(0,d.ObjectNode)({type:t({validator:"resource",params:{pool:"stat_type"}}),stat:t(),value:r("int_bounds"),[d.Switch]:[{push:"type"}],[d.Case]:{"minecraft:mined":{stat:t({validator:"resource",params:{pool:"block"}})},"minecraft:crafted":{stat:t({validator:"resource",params:{pool:"item"}})},"minecraft:used":{stat:t({validator:"resource",params:{pool:"item"}})},"minecraft:broken":{stat:t({validator:"resource",params:{pool:"item"}})},"minecraft:picked_up":{stat:t({validator:"resource",params:{pool:"item"}})},"minecraft:dropped":{stat:t({validator:"resource",params:{pool:"item"}})},"minecraft:killed":{stat:t({validator:"resource",params:{pool:"entity_type"}})},"minecraft:killed_by":{stat:t({validator:"resource",params:{pool:"entity_type"}})},"minecraft:custom":{stat:t({validator:"resource",params:{pool:"custom_stat"}})}}})),o.register("status_effect_predicate",(0,d.ObjectNode)({amplifier:r("int_bounds"),duration:r("int_bounds"),ambient:(0,d.Opt)((0,d.BooleanNode)()),visible:(0,d.Opt)((0,d.BooleanNode)())},{context:"status_effect"})),o.register("distance_predicate",(0,d.ObjectNode)({x:r("float_bounds"),y:r("float_bounds"),z:r("float_bounds"),absolute:r("float_bounds"),horizontal:r("float_bounds")},{context:"distance"})),o.register("entity_predicate",(0,d.ObjectNode)({type:(0,d.Opt)(t({validator:"resource",params:{pool:"entity_type",allowTag:!0}})),type_specific:(0,d.Opt)((0,d.ObjectNode)({type:t({enum:"type_specific_type"}),[d.Switch]:[{push:"type"}],[d.Case]:{axolotl:{variant:(0,d.Opt)(t({enum:"axolotl_variant"}))},boat:{variant:(0,d.Opt)(t({enum:"boat_variant"}))},cat:{variant:(0,d.Opt)(t({validator:"resource",params:{pool:"cat_variant"}}))},fishing_hook:{in_open_water:(0,d.Opt)((0,d.BooleanNode)())},fox:{variant:(0,d.Opt)(t({enum:"fox_variant"}))},frog:{variant:(0,d.Opt)(t({validator:"resource",params:{pool:"frog_variant"}}))},horse:{variant:(0,d.Opt)(t({enum:"horse_variant"}))},lightning:{blocks_set_on_fire:(0,d.Opt)(r("int_bounds")),entity_struck:(0,d.Opt)(r("entity_predicate"))},llama:{variant:(0,d.Opt)(t({enum:"llama_variant"}))},mooshroom:{variant:(0,d.Opt)(t({enum:"mooshroom_variant"}))},painting:{variant:(0,d.Opt)(t({validator:"resource",params:{pool:"painting_variant"}}))},parrot:{variant:(0,d.Opt)(t({enum:"parrot_variant"}))},player:{gamemode:(0,d.Opt)(t({enum:"gamemode"})),level:r("int_bounds"),advancements:(0,d.Opt)((0,d.MapNode)(t({validator:"resource",params:{pool:"$advancement"}}),(0,d.ChoiceNode)([{type:"boolean",node:(0,d.BooleanNode)(),change:()=>!0},{type:"object",node:(0,d.MapNode)(t(),(0,d.BooleanNode)())}]))),recipes:(0,d.Opt)((0,d.MapNode)(t({validator:"resource",params:{pool:"$recipe"}}),(0,d.BooleanNode)())),stats:(0,d.Opt)((0,d.ListNode)(r("statistic_predicate"))),looking_at:(0,d.Opt)(r("entity_predicate"))},rabbit:{variant:(0,d.Opt)(t({enum:"rabbit_variant"}))},slime:{size:r("int_bounds")},tropical_fish:{variant:(0,d.Opt)(t({enum:"tropical_fish_variant"}))},villager:{variant:(0,d.Opt)(t({validator:"resource",params:{pool:"villager_type"}}))}}})),nbt:(0,d.Opt)(t({validator:"nbt",params:{registry:{category:"minecraft:entity",id:["pop",{push:"type"}]}}})),team:(0,d.Opt)(t({validator:"team"})),location:(0,d.Opt)(r("location_predicate")),stepping_on:(0,d.Opt)(r("location_predicate")),distance:(0,d.Opt)(r("distance_predicate")),flags:(0,d.Opt)((0,d.ObjectNode)({is_on_fire:(0,d.Opt)((0,d.BooleanNode)()),is_sneaking:(0,d.Opt)((0,d.BooleanNode)()),is_sprinting:(0,d.Opt)((0,d.BooleanNode)()),is_swimming:(0,d.Opt)((0,d.BooleanNode)()),is_baby:(0,d.Opt)((0,d.BooleanNode)())})),equipment:(0,d.Opt)((0,d.MapNode)(t({enum:"slot"}),r("item_predicate"))),vehicle:(0,d.Opt)(r("entity_predicate")),passenger:(0,d.Opt)(r("entity_predicate")),targeted_entity:(0,d.Opt)(r("entity_predicate")),effects:(0,d.Opt)((0,d.MapNode)(t({validator:"resource",params:{pool:"mob_effect"}}),r("status_effect_predicate")))},{context:"entity"})),o.register("damage_source_predicate",(0,d.ObjectNode)({tags:(0,d.Opt)((0,d.ListNode)((0,d.ObjectNode)({id:t({validator:"resource",params:{pool:"$tag/damage_type"}}),expected:(0,d.BooleanNode)()},{context:"tag_predicate"}))),source_entity:(0,d.Opt)(r("entity_predicate")),direct_entity:(0,d.Opt)(r("entity_predicate"))},{context:"damage_source"})),o.register("damage_predicate",(0,d.ObjectNode)({dealt:r("float_bounds"),taken:r("float_bounds"),blocked:(0,d.Opt)((0,d.BooleanNode)()),source_entity:(0,d.Opt)(r("entity_predicate")),type:(0,d.Opt)(r("damage_source_predicate"))},{context:"damage"}))}we.initPredicatesSchemas=xt;var Se={};Object.defineProperty(Se,"__esModule",{value:!0});Se.initRecipeSchemas=void 0;const _=v();function kt(o,e){const r=_.Reference.bind(void 0,o),t=_.StringNode.bind(void 0,e);o.register("recipe",(0,_.Mod)((0,_.ObjectNode)({type:t({validator:"resource",params:{pool:"recipe_serializer"}}),category:(0,_.Opt)(t({enum:"recipe_category"})),[_.Switch]:[{push:"type"}],[_.Case]:{"minecraft:crafting_shaped":{group:(0,_.Opt)(t({enum:"recipe_group",additional:!0})),pattern:(0,_.ListNode)(t()),key:(0,_.MapNode)(t(),r("recipe_ingredient")),result:r("recipe_result"),show_notification:(0,_.Opt)((0,_.BooleanNode)())},"minecraft:crafting_shapeless":{group:(0,_.Opt)(t()),ingredients:(0,_.ListNode)(r("recipe_ingredient")),result:r("recipe_result")},"minecraft:smelting":{group:(0,_.Opt)(t()),ingredient:r("recipe_ingredient"),result:t({validator:"resource",params:{pool:"item"}}),experience:(0,_.Opt)((0,_.NumberNode)()),cookingtime:(0,_.Opt)((0,_.Mod)((0,_.NumberNode)({integer:!0}),{default:()=>200}))},"minecraft:blasting":{group:(0,_.Opt)(t()),ingredient:r("recipe_ingredient"),result:t({validator:"resource",params:{pool:"item"}}),experience:(0,_.Opt)((0,_.NumberNode)()),cookingtime:(0,_.Opt)((0,_.Mod)((0,_.NumberNode)({integer:!0}),{default:()=>100}))},"minecraft:smoking":{group:(0,_.Opt)(t()),ingredient:r("recipe_ingredient"),result:t({validator:"resource",params:{pool:"item"}}),experience:(0,_.Opt)((0,_.NumberNode)()),cookingtime:(0,_.Opt)((0,_.Mod)((0,_.NumberNode)({integer:!0}),{default:()=>100}))},"minecraft:campfire_cooking":{group:(0,_.Opt)(t()),ingredient:r("recipe_ingredient"),result:t({validator:"resource",params:{pool:"item"}}),experience:(0,_.Opt)((0,_.NumberNode)()),cookingtime:(0,_.Opt)((0,_.Mod)((0,_.NumberNode)({integer:!0}),{default:()=>100}))},"minecraft:stonecutting":{group:(0,_.Opt)(t()),ingredient:r("recipe_ingredient"),result:t({validator:"resource",params:{pool:"item"}}),count:(0,_.NumberNode)({integer:!0})},"minecraft:smithing":{group:(0,_.Opt)(t()),base:r("recipe_ingredient_object"),addition:r("recipe_ingredient_object"),result:r("recipe_result")},"minecraft:smithing_transform":{template:r("recipe_ingredient_object"),base:r("recipe_ingredient_object"),addition:r("recipe_ingredient_object"),result:r("recipe_result")},"minecraft:smithing_trim":{template:r("recipe_ingredient_object"),base:r("recipe_ingredient_object"),addition:r("recipe_ingredient_object")}}},{context:"recipe",disableSwitchContext:!0}),{default:()=>({type:"minecraft:crafting_shaped"})})),o.register("recipe_ingredient",(0,_.Mod)((0,_.ChoiceNode)([{type:"object",node:r("recipe_ingredient_object"),change:a=>a[0]},{type:"list",node:(0,_.ListNode)(r("recipe_ingredient_object")),change:a=>[a]}]),{default:()=>({item:"minecraft:stone"})})),o.register("recipe_ingredient_object",(0,_.Mod)((0,_.ObjectNode)({item:(0,_.Opt)(t({validator:"resource",params:{pool:"item"}})),tag:(0,_.Opt)(t({validator:"resource",params:{pool:"$tag/item"}}))},{context:"recipe_ingredient"}),{default:()=>({item:"minecraft:stone"})})),o.register("recipe_result",(0,_.Mod)((0,_.ObjectNode)({item:t({validator:"resource",params:{pool:"item"}}),count:(0,_.Opt)((0,_.Mod)((0,_.NumberNode)({integer:!0}),{default:()=>1}))}),{default:()=>({item:"minecraft:stone"})}))}Se.initRecipeSchemas=kt;var je={};Object.defineProperty(je,"__esModule",{value:!0});je.initTagsSchemas=void 0;const H=v();function wt(o,e){const r=H.StringNode.bind(void 0,e),t=a=>(0,H.Mod)((0,H.ObjectNode)({replace:(0,H.Opt)((0,H.BooleanNode)()),values:(0,H.ListNode)((0,H.ChoiceNode)([{type:"string",node:r({validator:"resource",params:{pool:a,allowTag:!0}}),change:n=>n.id},{type:"object",node:(0,H.ObjectNode)({id:r({validator:"resource",params:{pool:a,allowTag:!0,allowUnknown:!0}}),required:(0,H.BooleanNode)()}),change:n=>({id:n})}]))},{context:"tag"}),{default:()=>({values:[]})});o.register("block_tag",t("block")),o.register("entity_type_tag",t("entity_type")),o.register("fluid_tag",t("fluid")),o.register("function_tag",t("$function")),o.register("game_event_tag",t("game_event")),o.register("item_tag",t("item")),o.register("advancement_tag",t("$advancement")),o.register("chat_type_tag",t("$chat_type")),o.register("damage_type_tag",t("$damage_type")),o.register("dimension_tag",t("$dimension")),o.register("dimension_type_tag",t("$dimension_type")),o.register("function_tag",t("$function")),o.register("item_modifier_tag",t("$item_modifier")),o.register("loot_table_tag",t("$loot_table")),o.register("predicate_tag",t("$predicate")),o.register("recipe_tag",t("$recipe")),o.register("structure_tag",t("$structure")),o.register("trim_material_tag",t("$trim_material")),o.register("trim_pattern_tag",t("$trim_pattern")),o.register("biome_tag",t("$worldgen/biome")),o.register("configured_carver_tag",t("$worldgen/configured_carver")),o.register("configured_feature_tag",t("$worldgen/configured_feature")),o.register("structure_tag",t("$worldgen/structure")),o.register("density_function_tag",t("$worldgen/density_function")),o.register("flat_level_generator_preset_tag",t("$worldgen/flat_level_generator_preset")),o.register("multi_noise_biome_source_parameter_list_tag",t("$worldgen/multi_noise_biome_source_parameter_list")),o.register("noise_tag",t("$worldgen/noise")),o.register("noise_settings_tag",t("$worldgen/noise_settings")),o.register("placed_feature_tag",t("$worldgen/placed_feature")),o.register("processor_list_tag",t("$worldgen/processor_list")),o.register("structure_set_tag",t("$worldgen/structure_set")),o.register("template_pool_tag",t("$worldgen/template_pool")),o.register("world_preset_tag",t("$worldgen/world_preset")),o.register("banner_pattern_tag",t("banner_pattern")),o.register("cat_variant_tag",t("cat_variant")),o.register("instrument_tag",t("instrument")),o.register("painting_variant_tag",t("painting_variant")),o.register("point_of_interest_type_tag",t("point_of_interest_type"))}je.initTagsSchemas=wt;var Me={};Object.defineProperty(Me,"__esModule",{value:!0});Me.initTextComponentSchemas=void 0;const m=v();function St(o,e){const r=m.Reference.bind(void 0,o),t=m.StringNode.bind(void 0,e),a=l=>{var j;return l instanceof Array?a(l[0]):(j=l==null?void 0:l.text)!==null&&j!==void 0?j:typeof l=="object"?"":l==null?void 0:l.toString()};o.register("text_component",(0,m.Mod)((0,m.ChoiceNode)([{type:"object",node:r("text_component_object"),change:l=>l instanceof Array?typeof l[0]=="object"?l[0]:{text:a(l[0])}:typeof l=="object"?l:{text:a(l)}},{type:"list",node:r("text_component_list"),change:l=>[l]},{type:"string",priority:1,node:t(),change:a}],{context:"text_component"}),{default:()=>({text:""})}));const n={color:(0,m.Opt)(t()),font:(0,m.Opt)(t({validator:"resource",params:{pool:"font"}})),bold:(0,m.Opt)((0,m.BooleanNode)()),italic:(0,m.Opt)((0,m.BooleanNode)()),underlined:(0,m.Opt)((0,m.BooleanNode)()),strikethrough:(0,m.Opt)((0,m.BooleanNode)()),obfuscated:(0,m.Opt)((0,m.BooleanNode)()),insertion:(0,m.Opt)(t()),clickEvent:(0,m.Opt)((0,m.ObjectNode)({action:t({enum:["open_url","open_file","run_command","suggest_command","change_page","copy_to_clipboard"]}),[m.Switch]:[{push:"action"}],[m.Case]:{change_page:{value:t()},copy_to_clipboard:{value:t()},open_file:{value:t()},open_url:{value:t()},run_command:{value:t({validator:"command",params:{leadingSlash:!0,allowPartial:!0}})},suggest_command:{value:t({validator:"command",params:{leadingSlash:!0,allowPartial:!0}})}}})),hoverEvent:(0,m.Opt)((0,m.ObjectNode)({action:t({enum:["show_text","show_item","show_entity"]}),[m.Switch]:[{push:"action"}],[m.Case]:{show_text:{value:(0,m.Opt)(r("text_component")),contents:(0,m.Opt)(r("text_component"))},show_item:{value:(0,m.Opt)(t({validator:"nbt",params:{module:"util::InventoryItem"}})),contents:(0,m.Opt)((0,m.ObjectNode)({id:t({validator:"resource",params:{pool:"item"}}),count:(0,m.Opt)((0,m.NumberNode)({integer:!0})),tag:(0,m.Opt)(t({validator:"nbt",params:{registry:{category:"minecraft:item",id:["pop",{push:"id"}]}}}))}))},show_entity:{value:(0,m.Opt)(t()),contents:(0,m.Opt)((0,m.Mod)((0,m.ObjectNode)({name:(0,m.Opt)(r("text_component")),type:t({validator:"resource",params:{pool:"entity_type"}}),id:t({validator:"uuid"})}),{default:()=>({type:"minecraft:pig",id:"00000001-0001-0001-0001-000000000001"})}))}}}))};o.register("text_style",(0,m.ObjectNode)({...n},{context:"text_component_object"}));const c={...n,extra:(0,m.Opt)(r("text_component_list"))};o.register("text_component_object",(0,m.Mod)((0,m.ChoiceNode)([{type:"text",match:l=>typeof l=="object",change:l=>({text:""}),priority:-1,node:(0,m.ObjectNode)({text:t(),...c})},{type:"translation",match:l=>(l==null?void 0:l.translate)!==void 0,change:l=>({translate:""}),node:(0,m.ObjectNode)({translate:t(),fallback:(0,m.Opt)(t()),with:(0,m.Opt)(r("text_component_list")),...c})},{type:"score",match:l=>(l==null?void 0:l.score)!==void 0,change:l=>({score:{}}),node:(0,m.ObjectNode)({score:(0,m.ObjectNode)({name:t({validator:"entity",params:{amount:"single",type:"entities",isScoreHolder:!0}}),objective:t({validator:"objective"}),value:(0,m.Opt)(t())}),...c})},{type:"selector",match:l=>(l==null?void 0:l.selector)!==void 0,change:l=>({selector:""}),node:(0,m.ObjectNode)({selector:t({validator:"entity",params:{amount:"multiple",type:"entities"}}),separator:(0,m.Opt)(r("text_component")),...c})},{type:"keybind",match:l=>(l==null?void 0:l.keybind)!==void 0,change:l=>({keybind:""}),node:(0,m.ObjectNode)({keybind:t({enum:"keybind",additional:!0}),...c})},{type:"nbt",match:l=>(l==null?void 0:l.nbt)!==void 0,change:l=>({nbt:""}),node:(0,m.ObjectNode)({nbt:t({validator:"nbt_path"}),block:(0,m.Opt)(t({validator:"vector",params:{dimension:3,isInteger:!0}})),entity:(0,m.Opt)(t({validator:"entity",params:{amount:"multiple",type:"entities"}})),storage:(0,m.Opt)(t({validator:"resource",params:{pool:"$storage"}})),interpret:(0,m.Opt)((0,m.BooleanNode)()),separator:(0,m.Opt)(r("text_component")),...c})}],{context:"text_component_object",choiceContext:"text_component.object"}),{default:()=>({text:""})})),o.register("text_component_list",(0,m.Mod)((0,m.ListNode)(r("text_component")),{default:()=>[{text:""}]}))}Me.initTextComponentSchemas=St;var Ce={};Object.defineProperty(Ce,"__esModule",{value:!0});Ce.initTrimsSchemas=void 0;const E=v();function jt(o,e){const r=E.Reference.bind(void 0,o),t=E.StringNode.bind(void 0,e);o.register("trim_material",(0,E.Mod)((0,E.ObjectNode)({asset_name:t(),description:r("text_component"),ingredient:t({validator:"resource",params:{pool:"item"}}),item_model_index:(0,E.NumberNode)(),override_armor_materials:(0,E.Opt)((0,E.MapNode)(t({enum:"armor_material"}),t()))},{context:"trim_material"}),{default:()=>({asset_name:"copper",description:{translate:"trim_material.minecraft.copper",color:"#B4684D"},ingredient:"minecraft:copper_ingot",item_model_index:.5})})),o.register("trim_pattern",(0,E.Mod)((0,E.ObjectNode)({asset_id:t({validator:"resource",params:{pool:[],allowUnknown:!0}}),description:r("text_component"),template_item:t({validator:"resource",params:{pool:"item"}}),decal:(0,E.Opt)((0,E.BooleanNode)())},{context:"trim_pattern"}),{default:()=>({asset_id:"minecraft:coast",description:{translate:"trim_pattern.minecraft.coast"},template_item:"minecraft:coast_armor_trim_smithing_template"})}))}Ce.initTrimsSchemas=jt;var Le={},Ee={};(function(o){Object.defineProperty(o,"__esModule",{value:!0}),o.initBiomeSchemas=o.MobCategorySpawnSettings=void 0;const e=v(),r=T;function t(a,n){const c=e.StringNode.bind(void 0,n);o.MobCategorySpawnSettings=(0,e.Mod)((0,e.ListNode)((0,e.ObjectNode)({type:c({validator:"resource",params:{pool:"entity_type"}}),weight:(0,e.NumberNode)({integer:!0}),minCount:(0,e.NumberNode)({integer:!0}),maxCount:(0,e.NumberNode)({integer:!0})})),{category:()=>"pool",default:()=>[{type:"minecraft:bat",weight:1}]}),a.register("biome",(0,e.Mod)((0,e.ObjectNode)({temperature:(0,e.NumberNode)(),downfall:(0,e.NumberNode)(),has_precipitation:(0,e.BooleanNode)(),temperature_modifier:(0,e.Opt)(c({enum:["none","frozen"]})),creature_spawn_probability:(0,e.Opt)((0,e.NumberNode)({min:0,max:1})),effects:(0,e.ObjectNode)({sky_color:(0,e.NumberNode)({color:!0}),fog_color:(0,e.NumberNode)({color:!0}),water_color:(0,e.NumberNode)({color:!0}),water_fog_color:(0,e.NumberNode)({color:!0}),grass_color:(0,e.Opt)((0,e.NumberNode)({color:!0})),foliage_color:(0,e.Opt)((0,e.NumberNode)({color:!0})),grass_color_modifier:(0,e.Opt)(c({enum:["none","dark_forest","swamp"]})),ambient_sound:(0,e.Opt)(c()),mood_sound:(0,e.Opt)((0,e.ObjectNode)({sound:c(),tick_delay:(0,e.NumberNode)({integer:!0}),block_search_extent:(0,e.NumberNode)({integer:!0}),offset:(0,e.NumberNode)()})),additions_sound:(0,e.Opt)((0,e.ObjectNode)({sound:c(),tick_chance:(0,e.NumberNode)({min:0,max:1})})),music:(0,e.Opt)((0,e.ObjectNode)({sound:c(),min_delay:(0,e.NumberNode)({integer:!0,min:0}),max_delay:(0,e.NumberNode)({integer:!0,min:0}),replace_current_music:(0,e.BooleanNode)()})),particle:(0,e.Opt)((0,e.ObjectNode)({options:(0,e.ObjectNode)({type:c()}),probability:(0,e.NumberNode)({min:0,max:1})}))}),spawners:(0,e.MapNode)(c({enum:"mob_category"}),o.MobCategorySpawnSettings),spawn_costs:(0,e.MapNode)(c({validator:"resource",params:{pool:"entity_type"}}),(0,e.Mod)((0,e.ObjectNode)({energy_budget:(0,e.NumberNode)(),charge:(0,e.NumberNode)()},{category:"function"}),{default:()=>({energy_budget:.12,charge:1})})),carvers:(0,e.MapNode)(c({enum:["air","liquid"]}),(0,e.Mod)((0,r.Tag)({resource:"$worldgen/configured_carver",inlineSchema:"configured_carver"}),{default:()=>["minecraft:cave"]})),features:(0,e.ListNode)((0,e.Mod)((0,r.Tag)({resource:"$worldgen/placed_feature",inlineSchema:"placed_feature"}),{category:()=>"predicate"}),{maxLength:11})},{context:"biome"}),{default:()=>({temperature:.8,downfall:.4,precipitation:"rain",category:"plains",effects:{sky_color:7907327,fog_color:12638463,water_color:4159204,water_fog_color:329011}})}))}o.initBiomeSchemas=t})(Ee);var Pe={};Object.defineProperty(Pe,"__esModule",{value:!0});Pe.initCarverSchemas=void 0;const B=v(),K=T;function Mt(o,e){const r=B.Reference.bind(void 0,o),t=B.StringNode.bind(void 0,e),a={vertical_rotation:(0,K.FloatProvider)(),shape:(0,B.ObjectNode)({distance_factor:(0,K.FloatProvider)(),thickness:(0,K.FloatProvider)(),width_smoothness:(0,B.NumberNode)({integer:!0,min:0}),horizontal_radius_factor:(0,K.FloatProvider)(),vertical_radius_default_factor:(0,B.NumberNode)(),vertical_radius_center_factor:(0,B.NumberNode)()})},n={horizontal_radius_multiplier:(0,K.FloatProvider)(),vertical_radius_multiplier:(0,K.FloatProvider)(),floor_level:(0,K.FloatProvider)({min:-1,max:1})};o.register("configured_carver",(0,B.Mod)((0,B.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/carver"}}),config:(0,B.ObjectNode)({probability:(0,B.NumberNode)({min:0,max:1}),y:r("height_provider"),yScale:(0,K.FloatProvider)(),lava_level:r("vertical_anchor"),replaceable:(0,K.Tag)({resource:"block"}),debug_settings:(0,B.Opt)((0,B.ObjectNode)({debug_mode:(0,B.Opt)((0,B.BooleanNode)()),air_state:(0,B.Opt)(r("block_state")),water_state:(0,B.Opt)(r("block_state")),lava_state:(0,B.Opt)(r("block_state")),barrier_state:(0,B.Opt)(r("block_state"))})),[B.Switch]:["pop",{push:"type"}],[B.Case]:{"minecraft:canyon":a,"minecraft:cave":n,"minecraft:nether_cave":n}})},{context:"carver"}),{default:()=>({type:"minecraft:cave",config:{probability:.1}})}))}Pe.initCarverSchemas=Mt;var $e={};Object.defineProperty($e,"__esModule",{value:!0});$e.initDecoratorSchemas=void 0;const z=v(),de=T;function Ct(o,e){const r=z.Reference.bind(void 0,o),t=z.StringNode.bind(void 0,e);o.register("decorator",(0,z.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/placement_modifier_type"}}),[z.Switch]:[{push:"type"}],[z.Case]:{"minecraft:block_predicate_filter":{predicate:r("block_predicate_worldgen")},"minecraft:carving_mask":{step:t({enum:"generation_step"})},"minecraft:rarity_filter":{chance:(0,z.NumberNode)({integer:!0,min:0})},"minecraft:count":{count:(0,de.IntProvider)({min:0,max:256})},"minecraft:count_on_every_layer":{count:(0,de.IntProvider)({min:0,max:256})},"minecraft:noise_threshold_count":{noise_level:(0,z.NumberNode)(),below_noise:(0,z.NumberNode)({integer:!0}),above_noise:(0,z.NumberNode)({integer:!0})},"minecraft:noise_based_count":{noise_to_count_ratio:(0,z.NumberNode)({integer:!0}),noise_factor:(0,z.NumberNode)(),noise_offset:(0,z.Opt)((0,z.NumberNode)())},"minecraft:environment_scan":{direction_of_search:t({enum:["up","down"]}),max_steps:(0,z.NumberNode)({integer:!0,min:1,max:32}),target_condition:r("block_predicate_worldgen"),allowed_search_condition:(0,z.Opt)(r("block_predicate_worldgen"))},"minecraft:heightmap":{heightmap:t({enum:"heightmap_type"})},"minecraft:height_range":{height:r("height_provider")},"minecraft:random_offset":{xz_spread:(0,de.IntProvider)({min:-16,max:16}),y_spread:(0,de.IntProvider)({min:-16,max:16})},"minecraft:surface_relative_threshold_filter":{heightmap:t({enum:"heightmap_type"}),min_inclusive:(0,z.Opt)((0,z.NumberNode)({integer:!0})),max_inclusive:(0,z.Opt)((0,z.NumberNode)({integer:!0}))},"minecraft:surface_water_depth_filter":{max_water_depth:(0,z.NumberNode)({integer:!0})}}},{context:"decorator",category:"predicate"}))}$e.initDecoratorSchemas=Ct;var Ue={};(function(o){Object.defineProperty(o,"__esModule",{value:!0}),o.initDensityFunctionSchemas=o.DensityFunction=void 0;const e=v();function r(t,a){const n=e.StringNode.bind(void 0,a),c=e.Reference.bind(void 0,t);o.DensityFunction=(0,e.Mod)((0,e.ChoiceNode)([{type:"number",node:(0,e.NumberNode)(),change:()=>0},{type:"string",priority:1,node:n({validator:"resource",params:{pool:"$worldgen/density_function"}}),change:()=>{}},{type:"object",node:c("density_function"),change:()=>({})}],{choiceContext:"density_function"}),{default:()=>0});const l=(0,e.NumberNode)({min:-1e6,max:1e6}),j=(0,e.NumberNode)({integer:!0,min:-2032*2,max:2031*2});t.register("density_function",(0,e.Mod)((0,e.ObjectNode)({type:n({validator:"resource",params:{pool:"worldgen/density_function_type"}}),[e.Switch]:[{push:"type"}],[e.Case]:{"minecraft:abs":{argument:o.DensityFunction},"minecraft:add":{argument1:o.DensityFunction,argument2:o.DensityFunction},"minecraft:blend_density":{argument:o.DensityFunction},"minecraft:cache_2d":{argument:o.DensityFunction},"minecraft:cache_all_in_cell":{argument:o.DensityFunction},"minecraft:cache_once":{argument:o.DensityFunction},"minecraft:clamp":{input:c("density_function"),min:l,max:l},"minecraft:constant":{argument:(0,e.NumberNode)()},"minecraft:cube":{argument:o.DensityFunction},"minecraft:flat_cache":{argument:o.DensityFunction},"minecraft:half_negative":{argument:o.DensityFunction},"minecraft:interpolated":{argument:o.DensityFunction},"minecraft:max":{argument1:o.DensityFunction,argument2:o.DensityFunction},"minecraft:min":{argument1:o.DensityFunction,argument2:o.DensityFunction},"minecraft:mul":{argument1:o.DensityFunction,argument2:o.DensityFunction},"minecraft:noise":{noise:n({validator:"resource",params:{pool:"$worldgen/noise"}}),xz_scale:(0,e.NumberNode)(),y_scale:(0,e.NumberNode)()},"minecraft:old_blended_noise":{xz_scale:(0,e.NumberNode)(),y_scale:(0,e.NumberNode)(),xz_factor:(0,e.NumberNode)(),y_factor:(0,e.NumberNode)(),smear_scale_multiplier:(0,e.NumberNode)({min:1,max:8})},"minecraft:quarter_negative":{argument:o.DensityFunction},"minecraft:range_choice":{input:o.DensityFunction,min_inclusive:l,max_exclusive:l,when_in_range:o.DensityFunction,when_out_of_range:o.DensityFunction},"minecraft:shift":{argument:n({validator:"resource",params:{pool:"$worldgen/noise"}})},"minecraft:shift_a":{argument:n({validator:"resource",params:{pool:"$worldgen/noise"}})},"minecraft:shift_b":{argument:n({validator:"resource",params:{pool:"$worldgen/noise"}})},"minecraft:shifted_noise":{noise:n({validator:"resource",params:{pool:"$worldgen/noise"}}),xz_scale:(0,e.NumberNode)(),y_scale:(0,e.NumberNode)(),shift_x:o.DensityFunction,shift_y:o.DensityFunction,shift_z:o.DensityFunction},"minecraft:slide":{argument:o.DensityFunction},"minecraft:spline":{spline:c("cubic_spline")},"minecraft:square":{argument:o.DensityFunction},"minecraft:squeeze":{argument:o.DensityFunction},"minecraft:weird_scaled_sampler":{rarity_value_mapper:n({enum:["type_1","type_2"]}),noise:n({validator:"resource",params:{pool:"$worldgen/noise"}}),input:o.DensityFunction},"minecraft:y_clamped_gradient":{from_y:j,to_y:j,from_value:l,to_value:l}}},{context:"density_function",disableSwitchContext:!0}),{default:()=>({type:"minecraft:noise",noise:"minecraft:cave_entrance",xz_scale:.75,y_scale:.5})})),t.register("cubic_spline",(0,e.Mod)((0,e.ChoiceNode)([{type:"number",node:(0,e.NumberNode)()},{type:"object",node:(0,e.ObjectNode)({coordinate:o.DensityFunction,points:(0,e.ListNode)((0,e.ObjectNode)({location:(0,e.NumberNode)(),derivative:(0,e.NumberNode)(),value:c("cubic_spline")}))},{category:"function"})}],{context:"terrain_spline",choiceContext:"terrain_spline"}),{default:()=>0}))}o.initDensityFunctionSchemas=r})(Ue);var Be={},J={};Object.defineProperty(J,"__esModule",{value:!0});J.initProcessorListSchemas=J.Processors=void 0;const f=v(),Ge=T;function Lt(o,e){const r=f.Reference.bind(void 0,o),t=f.StringNode.bind(void 0,e);J.Processors=(0,f.ChoiceNode)([{type:"string",node:t({validator:"resource",params:{pool:"$worldgen/processor_list"}}),change:n=>{}},{type:"list",node:(0,f.ListNode)(r("processor")),change:n=>typeof n=="object"&&n!==null&&Array.isArray(n.processors)?n.processors:[{processor_type:"minecraft:nop"}]},{type:"object",node:r("processor_list"),change:n=>({processors:Array.isArray(n)?n:[{processor_type:"minecraft:nop"}]})}]),o.register("processor_list",(0,f.Mod)((0,f.ObjectNode)({processors:(0,f.ListNode)(r("processor"))},{context:"processor_list"}),{default:()=>({processors:[{processor_type:"minecraft:rule",rules:[{location_predicate:{predicate_type:"minecraft:always_true"},input_predicate:{predicate_type:"minecraft:always_true"}}]}]})})),o.register("processor",(0,f.Mod)((0,f.ObjectNode)({processor_type:t({validator:"resource",params:{pool:"worldgen/structure_processor"}}),[f.Switch]:[{push:"processor_type"}],[f.Case]:{"minecraft:block_age":{mossiness:(0,f.NumberNode)()},"minecraft:block_ignore":{blocks:(0,f.ListNode)(r("block_state"))},"minecraft:block_rot":{integrity:(0,f.NumberNode)({min:0,max:1}),rottable_blocks:(0,f.Opt)((0,Ge.Tag)({resource:"block"}))},"minecraft:capped":{limit:(0,Ge.IntProvider)({min:1}),delegate:r("processor")},"minecraft:gravity":{heightmap:t({enum:"heightmap_type"}),offset:(0,f.NumberNode)({integer:!0})},"minecraft:protected_blocks":{value:t({validator:"resource",params:{pool:"block",requireTag:!0}})},"minecraft:rule":{rules:(0,f.ListNode)(r("processor_rule"))}}},{category:"function",context:"processor"}),{default:()=>({processor_type:"minecraft:rule",rules:[{location_predicate:{predicate_type:"minecraft:always_true"},input_predicate:{predicate_type:"minecraft:always_true"}}]})})),o.register("processor_rule",(0,f.Mod)((0,f.ObjectNode)({position_predicate:(0,f.Opt)(r("pos_rule_test")),location_predicate:r("rule_test"),input_predicate:r("rule_test"),output_state:r("block_state"),block_entity_modifier:(0,f.Opt)(r("rule_block_entity_modifier"))},{category:"predicate",context:"processor_rule"}),{default:()=>({location_predicate:{predicate_type:"minecraft:always_true"},input_predicate:{predicate_type:"minecraft:always_true"}})})),o.register("rule_block_entity_modifier",(0,f.Mod)((0,f.ObjectNode)({type:t({validator:"resource",params:{pool:"rule_block_entity_modifier"}}),[f.Switch]:[{push:"type"}],[f.Case]:{"minecraft:append_loot":{loot_table:t({validator:"resource",params:{pool:"$loot_table"}})},"minecraft:append_static":{data:(0,f.ObjectNode)({})}}},{context:"rule_block_entity_modifier"}),{default:()=>({type:"minecraft:passthrough"})}));const a={min_dist:(0,f.Opt)((0,f.NumberNode)({min:0,max:255,integer:!0})),max_dist:(0,f.Opt)((0,f.NumberNode)({min:0,max:255,integer:!0})),min_chance:(0,f.Opt)((0,f.NumberNode)({min:0,max:1})),max_chance:(0,f.Opt)((0,f.NumberNode)({min:0,max:1}))};o.register("pos_rule_test",(0,f.ObjectNode)({predicate_type:t({validator:"resource",params:{pool:"pos_rule_test"}}),[f.Switch]:[{push:"predicate_type"}],[f.Case]:{"minecraft:axis_aligned_linear_pos":{axis:t({enum:["x","y","z"]}),...a},"minecraft:linear_pos":a}},{context:"pos_rule_test",disableSwitchContext:!0})),o.register("rule_test",(0,f.ObjectNode)({predicate_type:t({validator:"resource",params:{pool:"rule_test"}}),[f.Switch]:[{push:"predicate_type"}],[f.Case]:{"minecraft:block_match":{block:t({validator:"resource",params:{pool:"block"}})},"minecraft:blockstate_match":{block_state:r("block_state")},"minecraft:random_block_match":{block:t({validator:"resource",params:{pool:"block"}}),probability:(0,f.NumberNode)({min:0,max:1})},"minecraft:random_blockstate_match":{block_state:r("block_state"),probability:(0,f.NumberNode)({min:0,max:1})},"minecraft:tag_match":{tag:t({validator:"resource",params:{pool:"$tag/block"}})}}},{context:"rule_test",disableSwitchContext:!0}))}J.initProcessorListSchemas=Lt;Object.defineProperty(Be,"__esModule",{value:!0});Be.initFeatureSchemas=void 0;const i=v(),p=T,He=J;function Pt(o,e){const r=i.Reference.bind(void 0,o),t=i.StringNode.bind(void 0,e),a=(0,i.ChoiceNode)([{type:"string",node:t({validator:"resource",params:{pool:"$worldgen/configured_feature"}})},{type:"object",node:r("configured_feature")}],{choiceContext:"feature"}),n=(0,i.ChoiceNode)([{type:"string",node:t({validator:"resource",params:{pool:"$worldgen/placed_feature"}})},{type:"object",node:r("placed_feature")}],{choiceContext:"placed_feature"}),c={tries:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:1})),xz_spread:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0})),y_spread:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0})),feature:n},l={cap_provider:r("block_state_provider"),stem_provider:r("block_state_provider"),foliage_radius:(0,i.Opt)((0,i.NumberNode)({integer:!0}))},j=(0,i.ObjectNode)({target:r("rule_test"),state:r("block_state")}),u={size:(0,i.NumberNode)({integer:!0,min:0,max:64}),discard_chance_on_air_exposure:(0,i.NumberNode)({min:0,max:1}),targets:(0,i.ListNode)(j)},b={surface:t({enum:"cave_surface"}),depth:(0,p.IntProvider)({min:1,max:128}),vertical_range:(0,i.NumberNode)({integer:!0,min:1,max:256}),extra_bottom_block_chance:(0,i.NumberNode)({min:0,max:1}),extra_edge_column_chance:(0,i.NumberNode)({min:0,max:1}),vegetation_chance:(0,i.NumberNode)({min:0,max:1}),xz_radius:(0,p.IntProvider)(),replaceable:t({validator:"resource",params:{pool:"block",requireTag:!0}}),ground_state:r("block_state_provider"),vegetation_feature:n};o.register("configured_feature",(0,i.Mod)((0,i.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/feature"}}),config:(0,i.ObjectNode)({[i.Switch]:["pop",{push:"type"}],[i.Case]:{"minecraft:bamboo":{probability:(0,i.NumberNode)({min:0,max:1})},"minecraft:basalt_columns":{reach:(0,p.IntProvider)({min:0,max:3}),height:(0,p.IntProvider)({min:1,max:10})},"minecraft:block_column":{direction:t({enum:["up","down","north","east","south","west"]}),allowed_placement:r("block_predicate_worldgen"),prioritize_tip:(0,i.BooleanNode)(),layers:(0,i.ListNode)((0,i.ObjectNode)({height:(0,p.IntProvider)({min:0}),provider:r("block_state_provider")}))},"minecraft:block_pile":{state_provider:r("block_state_provider")},"minecraft:delta_feature":{contents:r("block_state"),rim:r("block_state"),size:(0,p.IntProvider)({min:0,max:16}),rim_size:(0,p.IntProvider)({min:0,max:16})},"minecraft:disk":{state_provider:r("rule_based_block_state_provider"),target:r("block_predicate_worldgen"),radius:(0,p.IntProvider)({min:0,max:8}),half_height:(0,i.NumberNode)({integer:!0,min:0,max:4})},"minecraft:dripstone_cluster":{floor_to_ceiling_search_range:(0,i.NumberNode)({integer:!0,min:1,max:512}),height:(0,p.IntProvider)({min:0,max:128}),radius:(0,p.IntProvider)({min:0,max:128}),max_stalagmite_stalactite_height_diff:(0,i.NumberNode)({integer:!0,min:0,max:64}),height_deviation:(0,i.NumberNode)({integer:!0,min:1,max:64}),dripstone_block_layer_thickness:(0,p.IntProvider)({min:0,max:128}),density:(0,p.FloatProvider)({min:0,max:2}),wetness:(0,p.FloatProvider)({min:0,max:2}),chance_of_dripstone_column_at_max_distance_from_center:(0,i.NumberNode)({min:0,max:1}),max_distance_from_edge_affecting_chance_of_dripstone_column:(0,i.NumberNode)({integer:!0,min:1,max:64}),max_distance_from_center_affecting_height_bias:(0,i.NumberNode)({integer:!0,min:1,max:64})},"minecraft:end_gateway":{exact:(0,i.BooleanNode)(),exit:(0,i.Opt)(r("block_pos"))},"minecraft:end_spike":{crystal_invulnerable:(0,i.Opt)((0,i.BooleanNode)()),crystal_beam_target:(0,i.Opt)(r("block_pos")),spikes:(0,i.ListNode)((0,i.ObjectNode)({centerX:(0,i.Opt)((0,i.NumberNode)({integer:!0})),centerZ:(0,i.Opt)((0,i.NumberNode)({integer:!0})),radius:(0,i.Opt)((0,i.NumberNode)({integer:!0})),height:(0,i.Opt)((0,i.NumberNode)({integer:!0})),guarded:(0,i.Opt)((0,i.BooleanNode)())}))},"minecraft:fill_layer":{state:r("block_state"),height:(0,i.NumberNode)({integer:!0,min:0,max:255})},"minecraft:flower":c,"minecraft:forest_rock":{state:r("block_state")},"minecraft:fossil":{max_empty_corners_allowed:(0,i.NumberNode)({integer:!0,min:0,max:7}),fossil_structures:(0,i.ListNode)(t({validator:"resource",params:{pool:"$structure"}})),overlay_structures:(0,i.ListNode)(t({validator:"resource",params:{pool:"$structure"}})),fossil_processors:He.Processors,overlay_processors:He.Processors},"minecraft:geode":{blocks:(0,i.ObjectNode)({filling_provider:r("block_state_provider"),inner_layer_provider:r("block_state_provider"),alternate_inner_layer_provider:r("block_state_provider"),middle_layer_provider:r("block_state_provider"),outer_layer_provider:r("block_state_provider"),inner_placements:(0,i.ListNode)(r("block_state")),cannot_replace:t({validator:"resource",params:{pool:"block",requireTag:!0}}),invalid_blocks:t({validator:"resource",params:{pool:"block",requireTag:!0}})}),layers:(0,i.ObjectNode)({filling:(0,i.Opt)((0,i.NumberNode)({min:.01,max:50})),inner_layer:(0,i.Opt)((0,i.NumberNode)({min:.01,max:50})),middle_layer:(0,i.Opt)((0,i.NumberNode)({min:.01,max:50})),outer_layer:(0,i.Opt)((0,i.NumberNode)({min:.01,max:50}))}),crack:(0,i.ObjectNode)({generate_crack_chance:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),base_crack_size:(0,i.Opt)((0,i.NumberNode)({min:0,max:5})),crack_point_offset:(0,i.Opt)((0,i.NumberNode)({min:0,max:10}))}),noise_multiplier:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),use_potential_placements_chance:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),use_alternate_layer0_chance:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),placements_require_layer0_alternate:(0,i.Opt)((0,i.BooleanNode)()),outer_wall_distance:(0,i.Opt)((0,p.IntProvider)({min:1,max:20})),distribution_points:(0,i.Opt)((0,p.IntProvider)({min:1,max:20})),point_offset:(0,i.Opt)((0,p.IntProvider)({min:0,max:10})),min_gen_offset:(0,i.Opt)((0,i.NumberNode)({integer:!0})),max_gen_offset:(0,i.Opt)((0,i.NumberNode)({integer:!0})),invalid_blocks_threshold:(0,i.NumberNode)({integer:!0})},"minecraft:multiface_growth":{block:(0,i.Opt)(t({validator:"resource",params:{pool:["minecraft:glow_lichen","minecraft:sculk_vein"]}})),search_range:(0,i.Opt)((0,i.NumberNode)({min:1,max:64,integer:!0})),chance_of_spreading:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),can_place_on_floor:(0,i.Opt)((0,i.BooleanNode)()),can_place_on_ceiling:(0,i.Opt)((0,i.BooleanNode)()),can_place_on_wall:(0,i.Opt)((0,i.BooleanNode)()),can_be_placed_on:(0,p.Tag)({resource:"block"})},"minecraft:huge_brown_mushroom":l,"minecraft:huge_fungus":{hat_state:r("block_state"),decor_state:r("block_state"),stem_state:r("block_state"),valid_base_block:r("block_state"),replaceable_blocks:r("block_predicate_worldgen"),planted:(0,i.Opt)((0,i.BooleanNode)())},"minecraft:huge_red_mushroom":l,"minecraft:iceberg":{state:r("block_state")},"minecraft:lake":{fluid:r("block_state_provider"),barrier:r("block_state_provider")},"minecraft:large_dripstone":{floor_to_ceiling_search_range:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:1,max:512})),column_radius:(0,p.IntProvider)({min:0,max:60}),height_scale:(0,p.FloatProvider)({min:0,max:20}),max_column_radius_to_cave_height_ratio:(0,i.NumberNode)({min:0,max:1}),stalactite_bluntness:(0,p.FloatProvider)({min:.1,max:10}),stalagmite_bluntness:(0,p.FloatProvider)({min:.1,max:10}),wind_speed:(0,p.FloatProvider)({min:0,max:2}),min_radius_for_wind:(0,i.NumberNode)({integer:!0,min:0,max:100}),min_bluntness_for_wind:(0,i.NumberNode)({min:0,max:5})},"minecraft:nether_forest_vegetation":{state_provider:r("block_state_provider"),spread_width:(0,i.NumberNode)({integer:!0,min:1}),spread_height:(0,i.NumberNode)({integer:!0,min:1})},"minecraft:netherrack_replace_blobs":{state:r("block_state"),target:r("block_state"),radius:(0,p.IntProvider)({min:0,max:12})},"minecraft:no_bonemeal_flower":c,"minecraft:ore":u,"minecraft:pointed_dripstone":{chance_of_taller_dripstone:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),chance_of_directional_spread:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),chance_of_spread_radius2:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),chance_of_spread_radius3:(0,i.Opt)((0,i.NumberNode)({min:0,max:1}))},"minecraft:random_patch":c,"minecraft:random_boolean_selector":{feature_false:n,feature_true:n},"minecraft:random_selector":{features:(0,i.ListNode)((0,i.ObjectNode)({chance:(0,i.NumberNode)({min:0,max:1}),feature:n})),default:n},"minecraft:replace_single_block":{targets:(0,i.ListNode)(j)},"minecraft:root_system":{required_vertical_space_for_tree:(0,i.NumberNode)({integer:!0,min:1,max:64}),root_radius:(0,i.NumberNode)({integer:!0,min:1,max:64}),root_placement_attempts:(0,i.NumberNode)({integer:!0,min:1,max:256}),root_column_max_height:(0,i.NumberNode)({integer:!0,min:1,max:4096}),hanging_root_radius:(0,i.NumberNode)({integer:!0,min:1,max:64}),hanging_roots_vertical_span:(0,i.NumberNode)({integer:!0,min:0,max:16}),hanging_root_placement_attempts:(0,i.NumberNode)({integer:!0,min:0,max:256}),allowed_vertical_water_for_tree:(0,i.NumberNode)({integer:!0,min:1,max:64}),root_replaceable:t({validator:"resource",params:{pool:"block",requireTag:!0}}),root_state_provider:r("block_state_provider"),hanging_root_state_provider:r("block_state_provider"),allowed_tree_position:r("block_predicate_worldgen"),feature:n},"minecraft:scattered_ore":u,"minecraft:sculk_patch":{charge_count:(0,i.NumberNode)({integer:!0,min:1,max:32}),amount_per_charge:(0,i.NumberNode)({integer:!0,min:1,max:500}),spread_attempts:(0,i.NumberNode)({integer:!0,min:1,max:64}),growth_rounds:(0,i.NumberNode)({integer:!0,min:0,max:8}),spread_rounds:(0,i.NumberNode)({integer:!0,min:0,max:8}),extra_rare_growths:(0,p.IntProvider)(),catalyst_chance:(0,i.NumberNode)({min:0,max:1})},"minecraft:sea_pickle":{count:(0,p.IntProvider)({min:0,max:256})},"minecraft:seagrass":{probability:(0,i.NumberNode)({min:0,max:1})},"minecraft:simple_block":{to_place:r("block_state_provider")},"minecraft:simple_random_selector":{features:(0,p.Tag)({resource:"$worldgen/placed_feature",inlineSchema:"placed_feature"})},"minecraft:spring_feature":{state:r("fluid_state"),rock_count:(0,i.NumberNode)({integer:!0}),hole_count:(0,i.NumberNode)({integer:!0}),requires_block_below:(0,i.BooleanNode)(),valid_blocks:(0,p.Tag)({resource:"block"})},"minecraft:tree":{ignore_vines:(0,i.Opt)((0,i.BooleanNode)()),force_dirt:(0,i.Opt)((0,i.BooleanNode)()),minimum_size:r("feature_size"),dirt_provider:r("block_state_provider"),trunk_provider:r("block_state_provider"),foliage_provider:r("block_state_provider"),root_placer:(0,i.Opt)((0,i.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/root_placer_type"}}),root_provider:r("block_state_provider"),trunk_offset_y:(0,p.IntProvider)(),above_root_placement:(0,i.Opt)((0,i.ObjectNode)({above_root_provider:r("block_state_provider"),above_root_placement_chance:(0,i.NumberNode)({min:0,max:1})})),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:mangrove_root_placer":{mangrove_root_placement:(0,i.ObjectNode)({max_root_width:(0,i.NumberNode)({integer:!0,min:1,max:12}),max_root_length:(0,i.NumberNode)({integer:!0,min:1,max:64}),random_skew_chance:(0,i.NumberNode)({min:0,max:1}),can_grow_through:(0,p.Tag)({resource:"block"}),muddy_roots_in:(0,p.Tag)({resource:"block"}),muddy_roots_provider:r("block_state_provider")})}}},{context:"root_placer"})),trunk_placer:(0,i.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/trunk_placer_type"}}),base_height:(0,i.NumberNode)({integer:!0,min:0,max:32}),height_rand_a:(0,i.NumberNode)({integer:!0,min:0,max:24}),height_rand_b:(0,i.NumberNode)({integer:!0,min:0,max:24}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:bending_trunk_placer":{bend_length:(0,p.IntProvider)({min:1,max:64}),min_height_for_leaves:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:1}))},"minecraft:cherry_trunk_placer":{branch_count:(0,p.IntProvider)({min:1,max:3}),branch_horizontal_length:(0,p.IntProvider)({min:2,max:16}),branch_start_offset_from_top:(0,i.ObjectNode)({min_inclusive:(0,i.NumberNode)({integer:!0,min:-16,max:0}),max_inclusive:(0,i.NumberNode)({integer:!0,min:-16,max:0})},{context:"int_provider.value"}),branch_end_offset_from_top:(0,p.IntProvider)({min:-16,max:16})},"minecraft:upwards_branching_trunk_placer":{extra_branch_steps:(0,p.IntProvider)({min:1}),extra_branch_length:(0,p.IntProvider)({min:0}),place_branch_per_log_probability:(0,i.NumberNode)({min:0,max:1}),can_grow_through:(0,p.Tag)({resource:"block"})}}},{context:"trunk_placer"}),foliage_placer:(0,i.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/foliage_placer_type"}}),radius:(0,p.IntProvider)({min:0,max:16}),offset:(0,p.IntProvider)({min:0,max:16}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:blob_foliage_placer":{height:(0,i.NumberNode)({integer:!0,min:0,max:16})},"minecraft:bush_foliage_placer":{height:(0,i.NumberNode)({integer:!0,min:0,max:16})},"minecraft:cherry_foliage_placer":{height:(0,p.IntProvider)({min:4,max:16}),wide_bottom_layer_hole_chance:(0,i.NumberNode)({min:0,max:1}),corner_hole_chance:(0,i.NumberNode)({min:0,max:1}),hanging_leaves_chance:(0,i.NumberNode)({min:0,max:1}),hanging_leaves_extension_chance:(0,i.NumberNode)({min:0,max:1})},"minecraft:fancy_foliage_placer":{height:(0,i.NumberNode)({integer:!0,min:0,max:16})},"minecraft:jungle_foliage_placer":{height:(0,i.NumberNode)({integer:!0,min:0,max:16})},"minecraft:mega_pine_foliage_placer":{crown_height:(0,p.IntProvider)({min:0,max:24})},"minecraft:pine_foliage_placer":{height:(0,p.IntProvider)({min:0,max:24})},"minecraft:random_spread_foliage_placer":{foliage_height:(0,p.IntProvider)({min:1,max:512}),leaf_placement_attempts:(0,i.NumberNode)({integer:!0,min:0,max:256})},"minecraft:spruce_foliage_placer":{trunk_height:(0,p.IntProvider)({min:0,max:24})}}},{context:"foliage_placer",disableSwitchContext:!0}),decorators:(0,i.ListNode)((0,i.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/tree_decorator_type"}}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:alter_ground":{provider:r("block_state_provider")},"minecraft:attached_to_leaves":{probability:(0,i.NumberNode)({min:0,max:1}),exclusion_radius_xz:(0,i.NumberNode)({integer:!0,min:0,max:16}),exclusion_radius_y:(0,i.NumberNode)({integer:!0,min:0,max:16}),required_empty_blocks:(0,i.NumberNode)({integer:!0,min:1,max:16}),block_provider:r("block_state_provider"),directions:(0,i.ListNode)(t({enum:"direction"}))},"minecraft:beehive":{probability:(0,i.NumberNode)({min:0,max:1})},"minecraft:cocoa":{probability:(0,i.NumberNode)({min:0,max:1})},"minecraft:leave_vine":{probability:(0,i.NumberNode)({min:0,max:1})}}},{context:"tree_decorator"}))},"minecraft:twisting_vines":{spread_width:(0,i.NumberNode)({integer:!0,min:1}),spread_height:(0,i.NumberNode)({integer:!0,min:1}),max_height:(0,i.NumberNode)({integer:!0,min:1})},"minecraft:underwater_magma":{floor_search_range:(0,i.NumberNode)({integer:!0,min:0,max:512}),placement_radius_around_floor:(0,i.NumberNode)({integer:!0,min:0,max:64}),placement_probability_per_valid_position:(0,i.NumberNode)({min:0,max:1})},"minecraft:vegetation_patch":b,"minecraft:waterlogged_vegetation_patch":b}},{context:"feature"})},{context:"feature"}),{default:()=>({type:"minecraft:tree",config:{minimum_size:{type:"minecraft:two_layers_feature_size"},trunk_placer:{type:"minecraft:straight_trunk_placer",base_height:5,height_rand_a:2,height_rand_b:0},foliage_placer:{type:"minecraft:blob_foliage_placer",radius:2,offset:0,height:3}}})})),o.register("placed_feature",(0,i.Mod)((0,i.ObjectNode)({feature:a,placement:(0,i.ListNode)(r("decorator"))},{context:"placed_feature"}),{default:()=>({feature:"minecraft:oak",placement:[{type:"minecraft:count",count:4},{type:"minecraft:in_square"},{type:"minecraft:heightmap",heightmap:"OCEAN_FLOOR"}]})})),o.register("feature_size",(0,i.Mod)((0,i.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/feature_size_type"}}),min_clipped_height:(0,i.Opt)((0,i.NumberNode)({min:0,max:80})),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:two_layers_feature_size":{limit:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:81})),lower_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16})),upper_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16}))},"minecraft:three_layers_feature_size":{limit:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:80})),upper_limit:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:80})),lower_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16})),middle_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16})),upper_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16}))}}},{disableSwitchContext:!0}),{default:()=>({type:"minecraft:two_layers_feature_size"})}));const k={seed:(0,i.NumberNode)({integer:!0}),noise:r("noise_parameters"),scale:(0,i.Mod)((0,i.NumberNode)({min:Number.MIN_VALUE}),{default:()=>1})};o.register("block_state_provider",(0,i.Mod)((0,i.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/block_state_provider_type"}}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:dual_noise_provider":{...k,variety:(0,p.InclusiveRange)({integer:!0,min:1,max:64}),slow_noise:r("noise_parameters"),slow_scale:(0,i.Mod)((0,i.NumberNode)({min:Number.MIN_VALUE}),{default:()=>1}),states:(0,i.ListNode)(r("block_state"))},"minecraft:noise_threshold_provider":{...k,threshold:(0,i.NumberNode)({min:-1,max:1}),high_chance:(0,i.NumberNode)({min:0,max:1}),default_state:r("block_state"),low_states:(0,i.ListNode)(r("block_state")),high_states:(0,i.ListNode)(r("block_state"))},"minecraft:noise_provider":{...k,states:(0,i.ListNode)(r("block_state"))},"minecraft:randomized_int_state_provider":{property:t(),values:(0,p.IntProvider)(),source:r("block_state_provider")},"minecraft:rotated_block_provider":{state:r("block_state")},"minecraft:simple_state_provider":{state:r("block_state")},"minecraft:weighted_state_provider":{entries:(0,i.ListNode)((0,i.Mod)((0,i.ObjectNode)({weight:(0,i.NumberNode)({integer:!0,min:1}),data:r("block_state")}),{default:()=>({data:{}})}))}}},{context:"block_state_provider"}),{default:()=>({type:"minecraft:simple_state_provider"})})),o.register("rule_based_block_state_provider",(0,i.Mod)((0,i.ObjectNode)({fallback:r("block_state_provider"),rules:(0,i.ListNode)((0,i.ObjectNode)({if_true:r("block_predicate_worldgen"),then:r("block_state_provider")}))},{context:"block_state_provider"}),{default:()=>({fallback:{type:"minecraft:simple_state_provider"}})}));const h={offset:(0,i.Opt)((0,i.ListNode)((0,i.NumberNode)({integer:!0,min:-16,max:16}),{minLength:3,maxLength:3}))};o.register("block_predicate_worldgen",(0,i.Mod)((0,i.ObjectNode)({type:t({validator:"resource",params:{pool:"block_predicate_type"}}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:all_of":{predicates:(0,i.ListNode)(r("block_predicate_worldgen"))},"minecraft:any_of":{predicates:(0,i.ListNode)(r("block_predicate_worldgen"))},"minecraft:has_sturdy_face":{...h,direction:t({enum:"direction"})},"minecraft:inside_world_bounds":{...h},"minecraft:matching_block_tag":{...h,tag:t({validator:"resource",params:{pool:"$tag/block"}})},"minecraft:matching_blocks":{...h,blocks:(0,p.Tag)({resource:"block"})},"minecraft:matching_fluids":{...h,fluids:(0,p.Tag)({resource:"fluid"})},"minecraft:not":{predicate:r("block_predicate_worldgen")},"minecraft:would_survive":{...h,state:r("block_state")}}},{context:"block_predicate"}),{default:()=>({type:"minecraft:true"})}))}Be.initFeatureSchemas=Pt;var ze={};Object.defineProperty(ze,"__esModule",{value:!0});ze.initNoiseSettingsSchemas=void 0;const C=v(),$t=T,D=Ue;function Bt(o,e){const r=C.Reference.bind(void 0,o),t=C.StringNode.bind(void 0,e);o.register("noise_settings",(0,C.Mod)((0,C.ObjectNode)({sea_level:(0,C.NumberNode)({integer:!0}),disable_mob_generation:(0,C.BooleanNode)(),aquifers_enabled:(0,C.BooleanNode)(),ore_veins_enabled:(0,C.BooleanNode)(),legacy_random_source:(0,C.BooleanNode)(),default_block:r("block_state"),default_fluid:r("block_state"),noise:(0,C.ObjectNode)({min_y:(0,C.NumberNode)({integer:!0,min:-2048,max:2047}),height:(0,C.NumberNode)({integer:!0,min:0,max:4096}),size_horizontal:(0,C.NumberNode)({integer:!0}),size_vertical:(0,C.NumberNode)({integer:!0})}),noise_router:(0,C.ObjectNode)({barrier:D.DensityFunction,fluid_level_floodedness:D.DensityFunction,fluid_level_spread:D.DensityFunction,lava:D.DensityFunction,temperature:D.DensityFunction,vegetation:D.DensityFunction,continents:D.DensityFunction,erosion:D.DensityFunction,depth:D.DensityFunction,ridges:D.DensityFunction,initial_density_without_jaggedness:D.DensityFunction,final_density:D.DensityFunction,vein_toggle:D.DensityFunction,vein_ridged:D.DensityFunction,vein_gap:D.DensityFunction}),spawn_target:(0,C.ListNode)(r("parameter_point")),surface_rule:r("material_rule")},{context:"noise_settings"}),a=>({default:()=>$t.DefaultNoiseSettings,validate:(n,c,l,j)=>{var u,b,k,h;return c=a.validate(n,c,l,j),((u=c==null?void 0:c.noise)===null||u===void 0?void 0:u.min_y)+((b=c==null?void 0:c.noise)===null||b===void 0?void 0:b.height)>2047&&l.add(n.push("noise").push("height"),"error.min_y_plus_height",2047),((k=c==null?void 0:c.noise)===null||k===void 0?void 0:k.height)%16!==0&&l.add(n.push("noise").push("height"),"error.height_multiple",16),((h=c==null?void 0:c.noise)===null||h===void 0?void 0:h.min_y)%16!==0&&l.add(n.push("noise").push("min_y"),"error.min_y_multiple",16),c}}))),o.register("noise_slider",(0,C.ObjectNode)({target:(0,C.NumberNode)(),size:(0,C.NumberNode)({integer:!0,min:0}),offset:(0,C.NumberNode)({integer:!0})})),o.register("generator_layer",(0,C.Mod)((0,C.ObjectNode)({block:t({validator:"resource",params:{pool:"block"}}),height:(0,C.NumberNode)({integer:!0,min:1})}),{default:()=>({block:"minecraft:stone",height:1})}))}ze.initNoiseSettingsSchemas=Bt;var Fe={};Object.defineProperty(Fe,"__esModule",{value:!0});Fe.initStructureSchemas=void 0;const y=v(),zt=T,Ft=Ee;function Tt(o,e){const r=y.StringNode.bind(void 0,e),t=y.Reference.bind(void 0,o);o.register("structure",(0,y.Mod)((0,y.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/structure_type"}}),biomes:(0,zt.Tag)({resource:"$worldgen/biome"}),step:r({enum:"decoration_step"}),spawn_overrides:(0,y.MapNode)(r({enum:"mob_category"}),(0,y.ObjectNode)({bounding_box:r({enum:["piece","full"]}),spawns:Ft.MobCategorySpawnSettings})),terrain_adaptation:(0,y.Opt)(r({enum:["none","beard_thin","beard_box","bury"]})),[y.Switch]:[{push:"type"}],[y.Case]:{"minecraft:jigsaw":{start_pool:r({validator:"resource",params:{pool:"$worldgen/template_pool"}}),size:(0,y.NumberNode)({integer:!0,min:0,max:20}),start_height:t("height_provider"),start_jigsaw_name:(0,y.Opt)(r()),project_start_to_heightmap:(0,y.Opt)(r({enum:"heightmap_type"})),max_distance_from_center:(0,y.Mod)((0,y.NumberNode)({integer:!0,min:1,max:128}),{default:()=>80}),use_expansion_hack:(0,y.BooleanNode)(),pool_aliases:(0,y.Opt)((0,y.ListNode)(t("pool_alias_binding")))},"minecraft:mineshaft":{mineshaft_type:r({enum:["normal","mesa"]})},"minecraft:nether_fossil":{height:t("height_provider")},"minecraft:ocean_ruin":{biome_temp:r({enum:["cold","warm"]}),large_probability:(0,y.NumberNode)({min:0,max:1}),cluster_probability:(0,y.NumberNode)({min:0,max:1})},"minecraft:ruined_portal":{setups:(0,y.ListNode)((0,y.ObjectNode)({placement:r({enum:["on_land_surface","partly_buried","on_ocean_floor","in_mountain","underground","in_nether"]}),air_pocket_probability:(0,y.NumberNode)({min:0,max:1}),mossiness:(0,y.NumberNode)({min:0,max:1}),overgrown:(0,y.BooleanNode)(),vines:(0,y.BooleanNode)(),can_be_cold:(0,y.BooleanNode)(),replace_with_blackstone:(0,y.BooleanNode)(),weight:(0,y.NumberNode)({min:0})}))},"minecraft:shipwreck":{is_beached:(0,y.Opt)((0,y.BooleanNode)())}}},{context:"structure_feature"}),{default:()=>({type:"minecraft:jigsaw",step:"surface_structures",size:6,max_distance_from_center:80})})),o.register("pool_alias_binding",(0,y.Mod)((0,y.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/pool_alias_binding"}}),[y.Switch]:[{push:"type"}],[y.Case]:{"minecraft:direct":{alias:r({validator:"resource",params:{pool:"$worldgen/template_pool"}}),target:r({validator:"resource",params:{pool:"$worldgen/template_pool"}})},"minecraft:random":{alias:r({validator:"resource",params:{pool:"$worldgen/template_pool"}}),targets:(0,y.ListNode)((0,y.Mod)((0,y.ObjectNode)({weight:(0,y.NumberNode)({integer:!0,min:1}),data:r({validator:"resource",params:{pool:"$worldgen/template_pool"}})}),{default:()=>({data:{}})}))},"minecraft:random_group":{groups:(0,y.ListNode)(t("pool_alias_binding"))}}},{context:"pool_alias_binding"}),{default:()=>({type:"minecraft:direct",alias:"minecraft:empty",target:"minecraft:empty"})}))}Fe.initStructureSchemas=Tt;var Te={};Object.defineProperty(Te,"__esModule",{value:!0});Te.initStructureSetSchemas=void 0;const x=v(),Dt=T;function Rt(o,e){const r=x.StringNode.bind(void 0,e),t=x.Reference.bind(void 0,o),a=(0,x.ChoiceNode)([{type:"string",node:r({validator:"resource",params:{pool:"$worldgen/structure_set"}})},{type:"object",node:t("structure_set")}],{choiceContext:"structure_set"});o.register("structure_set",(0,x.ObjectNode)({structures:(0,x.ListNode)((0,x.ObjectNode)({structure:r({validator:"resource",params:{pool:"$worldgen/configured_structure_feature"}}),weight:(0,x.NumberNode)({integer:!0,min:1})})),placement:t("structure_placement")},{context:"structure_set"})),o.register("structure_placement",(0,x.Mod)((0,x.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/structure_placement"}}),salt:(0,x.NumberNode)({integer:!0,min:0}),frequency_reduction_method:(0,x.Opt)(r({enum:["default","legacy_type_1","legacy_type_2","legacy_type_3"]})),frequency:(0,x.Opt)((0,x.NumberNode)({min:0,max:1})),exclusion_zone:(0,x.Opt)((0,x.ObjectNode)({other_set:a,chunk_count:(0,x.NumberNode)({integer:!0,min:1,max:16})})),locate_offset:(0,x.Opt)((0,x.ListNode)((0,x.NumberNode)({integer:!0,min:-16,max:16}),{minLength:3,maxLength:3})),[x.Switch]:[{push:"type"}],[x.Case]:{"minecraft:concentric_rings":{distance:(0,x.NumberNode)({integer:!0,min:0,max:1023}),spread:(0,x.NumberNode)({integer:!0,min:0,max:1023}),count:(0,x.NumberNode)({integer:!0,min:1,max:4095}),preferred_biomes:(0,Dt.Tag)({resource:"$worldgen/biome"})},"minecraft:random_spread":{spread_type:(0,x.Opt)(r({enum:["linear","triangular"]})),spacing:(0,x.NumberNode)({integer:!0,min:0,max:4096}),separation:(0,x.Mod)((0,x.NumberNode)({integer:!0,min:0,max:4096}),n=>({validate:(c,l,j,u)=>(c.pop().push("spacing").get()<=l&&j.add(c,"error.separation_smaller_spacing"),n.validate(c,l,j,u))}))}}},{context:"structure_placement"}),{default:()=>({type:"minecraft:random_spread",spacing:10,separation:5,salt:Math.floor(Math.random()*2147483647)})}))}Te.initStructureSetSchemas=Rt;var De={};Object.defineProperty(De,"__esModule",{value:!0});De.initSurfaceRuleSchemas=void 0;const L=v();function qt(o,e){const r=L.StringNode.bind(void 0,e),t=L.Reference.bind(void 0,o);o.register("material_rule",(0,L.Mod)((0,L.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/material_rule"}}),[L.Switch]:[{push:"type"}],[L.Case]:{"minecraft:block":{result_state:t("block_state")},"minecraft:condition":{if_true:t("material_condition"),then_run:t("material_rule")},"minecraft:sequence":{sequence:(0,L.ListNode)(t("material_rule"))}}},{context:"material_rule",category:"pool"}),{default:()=>({type:"minecraft:block",result_state:{Name:"minecraft:stone"}})})),o.register("material_condition",(0,L.Mod)((0,L.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/material_condition"}}),[L.Switch]:[{push:"type"}],[L.Case]:{"minecraft:biome":{biome_is:(0,L.ListNode)(r({validator:"resource",params:{pool:"$worldgen/biome"}}))},"minecraft:noise_threshold":{noise:r({validator:"resource",params:{pool:"$worldgen/noise"}}),min_threshold:(0,L.NumberNode)(),max_threshold:(0,L.NumberNode)()},"minecraft:not":{invert:t("material_condition")},"minecraft:stone_depth":{offset:(0,L.NumberNode)({integer:!0}),surface_type:r({enum:"cave_surface"}),add_surface_depth:(0,L.BooleanNode)(),secondary_depth_range:(0,L.NumberNode)({integer:!0})},"minecraft:vertical_gradient":{random_name:r(),true_at_and_below:t("vertical_anchor"),false_at_and_above:t("vertical_anchor")},"minecraft:water":{offset:(0,L.NumberNode)({integer:!0}),surface_depth_multiplier:(0,L.NumberNode)({integer:!0,min:-20,max:20}),add_stone_depth:(0,L.BooleanNode)()},"minecraft:y_above":{anchor:t("vertical_anchor"),surface_depth_multiplier:(0,L.NumberNode)({integer:!0,min:-20,max:20}),add_stone_depth:(0,L.BooleanNode)()}}},{context:"material_condition"}),{default:()=>({type:"minecraft:biome",is_biome:"minecraft:plains"})}))}De.initSurfaceRuleSchemas=qt;var Re={};Object.defineProperty(Re,"__esModule",{value:!0});Re.initTemplatePoolSchemas=void 0;const q=v(),Ke=J;function It(o,e){const r=q.Reference.bind(void 0,o),t=q.StringNode.bind(void 0,e);o.register("template_pool",(0,q.Mod)((0,q.ObjectNode)({fallback:t(),elements:(0,q.ListNode)(r("template_weighted_element"))},{context:"template_pool"}),{default:()=>({fallback:"minecraft:empty",elements:[{weight:1,element:{element_type:"minecraft:single_pool_element",projection:"rigid",processors:"minecraft:empty"}}]})})),o.register("template_weighted_element",(0,q.Mod)((0,q.ObjectNode)({weight:(0,q.NumberNode)({integer:!0,min:1,max:150}),element:r("template_element")},{category:"pool"}),{default:()=>({weight:1,element:{element_type:"minecraft:single_pool_element",projection:"rigid",processors:"minecraft:empty"}})})),o.register("template_element",(0,q.Mod)((0,q.ObjectNode)({element_type:t({validator:"resource",params:{pool:"worldgen/structure_pool_element"}}),[q.Switch]:[{push:"element_type"}],[q.Case]:{"minecraft:feature_pool_element":{projection:t({enum:["rigid","terrain_matching"]}),feature:t({validator:"resource",params:{pool:"$worldgen/placed_feature"}})},"minecraft:legacy_single_pool_element":{projection:t({enum:["rigid","terrain_matching"]}),location:t({validator:"resource",params:{pool:"$structure"}}),processors:Ke.Processors},"minecraft:list_pool_element":{projection:t({enum:["rigid","terrain_matching"]}),elements:(0,q.ListNode)(r("template_element"))},"minecraft:single_pool_element":{projection:t({enum:["rigid","terrain_matching"]}),location:t({validator:"resource",params:{pool:"$structure"}}),processors:Ke.Processors}}},{context:"template_element",disableSwitchContext:!0}),{default:()=>({element_type:"minecraft:single_pool_element",projection:"rigid",processors:"minecraft:empty"})}))}Re.initTemplatePoolSchemas=It;var qe={};Object.defineProperty(qe,"__esModule",{value:!0});qe.initWorldPresetSchemas=void 0;const oe=v();function At(o,e){const r=oe.StringNode.bind(void 0,e),t=oe.Reference.bind(void 0,o);o.register("world_preset",(0,oe.Mod)((0,oe.ObjectNode)({dimensions:(0,oe.MapNode)(r({validator:"resource",params:{pool:"$dimension",isDefinition:!0}}),t("dimension"))},{context:"world_preset"}),{default:()=>({dimensions:{"minecraft:overworld":{type:"minecraft:overworld",generator:{type:"minecraft:noise",biome_source:{type:"minecraft:multi_noise",preset:"minecraft:overworld"},settings:"minecraft:overworld"}},"minecraft:the_nether":{type:"minecraft:the_nether",generator:{type:"minecraft:noise",biome_source:{type:"minecraft:multi_noise",preset:"minecraft:nether"},settings:"minecraft:nether"}},"minecraft:the_end":{type:"minecraft:the_end",generator:{type:"minecraft:noise",biome_source:{type:"minecraft:the_end"},settings:"minecraft:end"}}}})})),o.register("flat_level_generator_preset",(0,oe.Mod)((0,oe.ObjectNode)({display:r({validator:"resource",params:{pool:"item"}}),settings:t("flat_generator_settings")}),{default:()=>({display:"minecraft:grass_block",settings:{lakes:!1,features:!1,biome:"minecraft:plains",structure_overrides:[],layers:[{height:3,block:"minecraft:dirt"},{height:1,block:"minecraft:grass_block"}]}})}))}qe.initWorldPresetSchemas=At;Object.defineProperty(Le,"__esModule",{value:!0});Le.initWorldgenSchemas=void 0;const Wt=Ee,Et=Pe,Ut=$e,Vt=Ue,Gt=Be,Ht=ze,Kt=J,Xt=Fe,Yt=Te,Zt=De,Jt=Re,Qt=qe;function er(o,e){(0,Kt.initProcessorListSchemas)(o,e),(0,Vt.initDensityFunctionSchemas)(o,e),(0,Wt.initBiomeSchemas)(o,e),(0,Et.initCarverSchemas)(o,e),(0,Ut.initDecoratorSchemas)(o,e),(0,Gt.initFeatureSchemas)(o,e),(0,Ht.initNoiseSettingsSchemas)(o,e),(0,Xt.initStructureSchemas)(o,e),(0,Yt.initStructureSetSchemas)(o,e),(0,Zt.initSurfaceRuleSchemas)(o,e),(0,Jt.initTemplatePoolSchemas)(o,e),(0,Qt.initWorldPresetSchemas)(o,e)}Le.initWorldgenSchemas=er;var Ie={};Object.defineProperty(Ie,"__esModule",{value:!0});Ie.initWorldSettingsSchemas=void 0;const Z=v();function tr(o,e){const r=Z.Reference.bind(void 0,o),t=Z.StringNode.bind(void 0,e);o.register("world_settings",(0,Z.Mod)((0,Z.ObjectNode)({generate_features:(0,Z.BooleanNode)(),bonus_chest:(0,Z.BooleanNode)(),seed:(0,Z.NumberNode)({integer:!0}),dimensions:(0,Z.MapNode)(t({validator:"resource",params:{pool:"$dimension"}}),r("dimension"))},{context:"world_settings"}),{default:()=>{const a=Math.floor(Math.random()*4294967296)-2147483648;return{generate_features:!0,bonus_chest:!1,seed:a,dimensions:{"minecraft:overworld":{type:"minecraft:overworld",generator:{type:"minecraft:noise",seed:a,biome_source:{type:"minecraft:multi_noise",preset:"minecraft:overworld"},settings:"minecraft:overworld"}},"minecraft:the_nether":{type:"minecraft:the_nether",generator:{type:"minecraft:noise",seed:a,biome_source:{type:"minecraft:multi_noise",preset:"minecraft:nether"},settings:"minecraft:nether"}},"minecraft:the_end":{type:"minecraft:the_end",generator:{type:"minecraft:noise",seed:a,biome_source:{type:"minecraft:the_end",seed:a},settings:"minecraft:end"}}}}}}))}Ie.initWorldSettingsSchemas=tr;Object.defineProperty(le,"__esModule",{value:!0});le.initSchemas=void 0;const rr=me,or=_e,ir=be,nr=T,ar=Ne,cr=ye,dr=he,sr=ve,lr=Oe,mr=xe,_r=ke,ur=we,pr=Se,gr=je,fr=Me,br=Ce,Nr=Le,yr=Ie;function hr(o,e){(0,nr.initCommonSchemas)(o,e),(0,ir.initChatTypeSchemas)(o,e),(0,rr.initAdvancementSchemas)(o,e),(0,or.initAssetsSchemas)(o,e),(0,ar.initConditionSchemas)(o,e),(0,cr.initDamageTypeSchemas)(o,e),(0,sr.initDimensionTypeSchemas)(o,e),(0,dr.initDimensionSchemas)(o,e),(0,lr.initItemModifierSchemas)(o,e),(0,mr.initLootTableSchemas)(o,e),(0,_r.initPackMcmetaSchemas)(o,e),(0,ur.initPredicatesSchemas)(o,e),(0,pr.initRecipeSchemas)(o,e),(0,gr.initTagsSchemas)(o,e),(0,fr.initTextComponentSchemas)(o,e),(0,br.initTrimsSchemas)(o,e),(0,Nr.initWorldgenSchemas)(o,e),(0,yr.initWorldSettingsSchemas)(o,e)}le.initSchemas=hr;var vr=ne&&ne.__createBinding||(Object.create?function(o,e,r,t){t===void 0&&(t=r);var a=Object.getOwnPropertyDescriptor(e,r);(!a||("get"in a?!e.__esModule:a.writable||a.configurable))&&(a={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(o,t,a)}:function(o,e,r,t){t===void 0&&(t=r),o[t]=e[r]}),Or=ne&&ne.__setModuleDefault||(Object.create?function(o,e){Object.defineProperty(o,"default",{enumerable:!0,value:e})}:function(o,e){o.default=e}),xr=ne&&ne.__importStar||function(o){if(o&&o.__esModule)return o;var e={};if(o!=null)for(var r in o)r!=="default"&&Object.prototype.hasOwnProperty.call(o,r)&&vr(e,o,r);return Or(e,o),e};Object.defineProperty(X,"__esModule",{value:!0});var Xe=X.getSchemas=Je=X.getCollections=Ze=X.lootContext=void 0;const Ye=v(),kr=se,wr=le;var Ze=X.lootContext=xr(I);function Sr(){const o=new Ye.CollectionRegistry;return(0,kr.initCollections)(o),o}var Je=X.getCollections=Sr;function jr(o){const e=new Ye.SchemaRegistry;return(0,wr.initSchemas)(e,o),e}Xe=X.getSchemas=jr;const Lr=Qe({__proto__:null,get getSchemas(){return Xe},get getCollections(){return Je},get lootContext(){return Ze},default:X},[X]);export{Lr as i};
//# sourceMappingURL=index.2f9adbea.js.map
