{"version":3,"file":"index.01c93713.js","sources":["../../node_modules/@mcschema/java-1.19/lib/Collections.js","../../node_modules/@mcschema/java-1.19/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.19/lib/schemas/assets/Model.js","../../node_modules/@mcschema/java-1.19/lib/schemas/assets/BlockDefinition.js","../../node_modules/@mcschema/java-1.19/lib/schemas/assets/Font.js","../../node_modules/@mcschema/java-1.19/lib/schemas/assets/index.js","../../node_modules/@mcschema/java-1.19/lib/schemas/ChatType.js","../../node_modules/@mcschema/java-1.19/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.19/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.19/lib/schemas/Dimension.js","../../node_modules/@mcschema/java-1.19/lib/schemas/DimensionType.js","../../node_modules/@mcschema/java-1.19/lib/schemas/ItemModifier.js","../../node_modules/@mcschema/java-1.19/lib/LootContext.js","../../node_modules/@mcschema/java-1.19/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.19/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.19/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.19/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.19/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.19/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/Biome.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/Carver.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/Decorator.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/DensityFunction.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/ProcessorList.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/Feature.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/NoiseSettings.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/Structure.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/StructureSet.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/SurfaceRule.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/TemplatePool.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/WorldPreset.js","../../node_modules/@mcschema/java-1.19/lib/schemas/worldgen/index.js","../../node_modules/@mcschema/java-1.19/lib/schemas/WorldSettings.js","../../node_modules/@mcschema/java-1.19/lib/schemas/index.js","../../node_modules/@mcschema/java-1.19/lib/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:allay_drop_item_on_block',\r\n        'minecraft:avoid_vibration',\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:fall_from_height',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:kill_mob_near_sculk_catalyst',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:lightning_strike',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:ride_entity_in_lava',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:started_riding',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:thrown_item_picked_up_by_player',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:using_item',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'killer',\r\n        'direct_killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('map_feature', [\r\n        'bastion_remnant',\r\n        'buried_treasure',\r\n        'desert_pyramid',\r\n        'endcity',\r\n        'fortress',\r\n        'igloo',\r\n        'jungle_pyramid',\r\n        'mansion',\r\n        'mineshaft',\r\n        'monument',\r\n        'nether_fossil',\r\n        'ocean_ruin',\r\n        'pillager_outpost',\r\n        'ruined_portal',\r\n        'shipwreck',\r\n        'stronghold',\r\n        'swamp_hut',\r\n        'village'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mountain',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end',\r\n        'underground'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('decoration_step', [\r\n        'raw_generation',\r\n        'lakes',\r\n        'local_modifications',\r\n        'underground_structures',\r\n        'surface_structures',\r\n        'strongholds',\r\n        'underground_ores',\r\n        'underground_decoration',\r\n        'fluid_springs',\r\n        'vegetal_decoration',\r\n        'top_layer_modification'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n    collections.register('banner_pattern', [\r\n        'base',\r\n        'square_bottom_left',\r\n        'square_bottom_right',\r\n        'square_top_left',\r\n        'square_top_right',\r\n        'stripe_bottom',\r\n        'stripe_top',\r\n        'stripe_left',\r\n        'stripe_right',\r\n        'stripe_center',\r\n        'stripe_middle',\r\n        'stripe_downright',\r\n        'stripe_downleft',\r\n        'small_stripes',\r\n        'cross',\r\n        'straight_cross',\r\n        'triangle_bottom',\r\n        'triangle_top',\r\n        'triangles_bottom',\r\n        'triangles_top',\r\n        'diagonal_left',\r\n        'diagonal_up_right',\r\n        'diagonal_up_left',\r\n        'diagonal_right',\r\n        'circle',\r\n        'rhombus',\r\n        'half_vertical',\r\n        'half_horizontal',\r\n        'half_vertical_right',\r\n        'half_horizontal_bottom',\r\n        'border',\r\n        'curly_border',\r\n        'gradient',\r\n        'gradient_up',\r\n        'bricks',\r\n        'globe',\r\n        'creeper',\r\n        'skull',\r\n        'flower',\r\n        'mojang',\r\n        'piglin'\r\n    ]);\r\n    collections.register('dye_color', [\r\n        'white',\r\n        'orange',\r\n        'magenta',\r\n        'light_blue',\r\n        'yellow',\r\n        'lime',\r\n        'pink',\r\n        'gray',\r\n        'light_gray',\r\n        'cyan',\r\n        'purple',\r\n        'blue',\r\n        'brown',\r\n        'green',\r\n        'red',\r\n        'black'\r\n    ]);\r\n    collections.register('cave_surface', [\r\n        'floor',\r\n        'ceiling'\r\n    ]);\r\n    collections.register('direction', [\r\n        'down',\r\n        'up',\r\n        'north',\r\n        'east',\r\n        'south',\r\n        'west'\r\n    ]);\r\n    collections.register('axis', [\r\n        'x',\r\n        'y',\r\n        'z'\r\n    ]);\r\n    collections.register('display_position', [\r\n        'firstperson_righthand',\r\n        'firstperson_lefthand',\r\n        'thirdperson_righthand',\r\n        'thirdperson_lefthand',\r\n        'gui',\r\n        'head',\r\n        'ground',\r\n        'fixed'\r\n    ]);\r\n    collections.register('gui_light', [\r\n        'front',\r\n        'side'\r\n    ]);\r\n    collections.register('item_model_predicates', [\r\n        'angle',\r\n        'blocking',\r\n        'broken',\r\n        'cast',\r\n        'charged',\r\n        'cooldown',\r\n        'custom_model_data',\r\n        'damage',\r\n        'damaged',\r\n        'firework',\r\n        'lefthanded',\r\n        'pull',\r\n        'pulling',\r\n        'throwing',\r\n        'time'\r\n    ]);\r\n    collections.register('glyph_provider_type', [\r\n        'bitmap',\r\n        'ttf',\r\n        'space',\r\n        'legacy_unicode',\r\n    ]);\r\n    collections.register('mob_category', [\r\n        'monster',\r\n        'creature',\r\n        'ambient',\r\n        'axolotls',\r\n        'underground_water_creature',\r\n        'water_creature',\r\n        'water_ambient',\r\n        'misc',\r\n    ]);\r\n    collections.register('type_specific_type', [\r\n        'any',\r\n        'cat',\r\n        'fishing_hook',\r\n        'frog',\r\n        'lightning',\r\n        'player',\r\n        'slime',\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.Opt)(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { context: 'conditions' });\r\n    schemas.register('advancement', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        display: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            icon: (0, core_1.ObjectNode)({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: (0, core_1.Opt)(StringNode()),\r\n            frame: (0, core_1.Opt)(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            announce_to_chat: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            hidden: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: (0, core_1.MapNode)(StringNode(), Reference('advancement_criteria')),\r\n        requirements: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ListNode)(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            function: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', (0, core_1.ObjectNode)({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            player: (0, core_1.Mod)(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\r\n            [core_1.Case]: {\r\n                'minecraft:allay_drop_item_on_block': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                },\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: (0, core_1.Opt)(Reference('int_bounds')),\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: (0, core_1.Opt)((0, core_1.ListNode)(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: Reference('int_bounds')\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate'))),\r\n                    source: (0, core_1.Opt)(EntityPredicate)\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: Reference('int_bounds'),\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: (0, core_1.Opt)(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: (0, core_1.Opt)(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:fall_from_height': {\r\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\r\n                    distance: (0, core_1.Opt)(Reference('distance_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    rod: (0, core_1.Opt)(Reference('item_predicate')),\r\n                    entity: EntityPredicate,\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                        empty: Reference('int_bounds'),\r\n                        occupied: Reference('int_bounds'),\r\n                        full: Reference('int_bounds')\r\n                    })),\r\n                    items: (0, core_1.Opt)((0, core_1.ListNode)(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: Reference('int_bounds'),\r\n                    durability: Reference('int_bounds'),\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                },\r\n                'minecraft:kill_mob_near_sculk_catalyst': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: (0, core_1.Opt)(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: Reference('int_bounds'),\r\n                    victims: (0, core_1.Opt)((0, core_1.ListNode)(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: (0, core_1.Opt)(Reference('distance_predicate')),\r\n                    duration: Reference('int_bounds')\r\n                },\r\n                'minecraft:lightning_strike': {\r\n                    lightning: EntityPredicate,\r\n                    bystander: EntityPredicate,\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\r\n                    distance: (0, core_1.Opt)(Reference('distance_predicate')),\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\r\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: (0, core_1.Opt)(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: (0, core_1.Opt)(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:ride_entity_in_lava': {\r\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\r\n                    distance: (0, core_1.Opt)(Reference('distance_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: Reference('int_bounds')\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: EntityPredicate,\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_player': {\r\n                    entity: EntityPredicate,\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: (0, core_1.Opt)(Reference('float_bounds'))\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:using_item': {\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: EntityPredicate,\r\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\r\n                },\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initModelSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initModelSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Vec = (length, min, max) => (0, core_1.ListNode)((0, core_1.NumberNode)({ min, max }), { minLength: length, maxLength: length });\r\n    const Texture = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'alias',\r\n            match: (v) => typeof v === 'string' && v.startsWith('#'),\r\n            node: StringNode(),\r\n            change: (v) => typeof v === 'string' ? `#${v}` : \"#0\"\r\n        },\r\n        {\r\n            type: 'reference',\r\n            match: (v) => typeof v === 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$texture' } }),\r\n            change: (v) => typeof v === 'string' ? v.replace(/^#/, '') : \"\"\r\n        }\r\n    ], { choiceContext: 'texture' });\r\n    schemas.register('model', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        parent: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$model' } })),\r\n        ambientocclusion: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        gui_light: (0, core_1.Opt)(StringNode({ enum: 'gui_light' })),\r\n        textures: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), Texture)),\r\n        elements: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n            from: Vec(3, -16, 32),\r\n            to: Vec(3, -16, 32),\r\n            rotation: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                origin: Vec(3),\r\n                axis: StringNode({ enum: 'axis' }),\r\n                angle: (0, core_1.NumberEnum)({ values: [-45, -22.5, 0, 22.5, 45] }),\r\n                rescale: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            })),\r\n            shade: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            faces: (0, core_1.MapNode)(StringNode({ enum: 'direction' }), (0, core_1.ObjectNode)({\r\n                texture: Texture,\r\n                uv: (0, core_1.Opt)(Vec(4)),\r\n                cullface: (0, core_1.Opt)(StringNode({ enum: 'direction' })),\r\n                rotation: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                tintindex: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            }))\r\n        }, { context: 'model_element' }))),\r\n        display: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ enum: 'display_position' }), (0, core_1.ObjectNode)({\r\n            rotation: Vec(3),\r\n            translation: Vec(3, -80, 80),\r\n            scale: Vec(3, -4, 4)\r\n        }, { context: 'item_transform' }))),\r\n        overrides: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n            predicate: (0, core_1.MapNode)(StringNode({ enum: 'item_model_predicates' }), (0, core_1.NumberNode)()),\r\n            model: StringNode({ validator: 'resource', params: { pool: '$model' } })\r\n        }, { context: 'model_override' })))\r\n    }, { context: 'model' }), {\r\n        default: () => ({\r\n            parent: 'minecraft:item/generated',\r\n            textures: {\r\n                layer0: 'minecraft:item/diamond'\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initModelSchemas = initModelSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBlockDefinitionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBlockDefinitionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('block_definition', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'variants',\r\n            match: (v) => v.variants !== undefined,\r\n            node: (0, core_1.ObjectNode)({\r\n                variants: (0, core_1.MapNode)(StringNode(), Reference('model_variant'))\r\n            }),\r\n            change: (v) => ({ variants: { \"\": {} } })\r\n        },\r\n        {\r\n            type: 'multipart',\r\n            match: (v) => v.multipart !== undefined,\r\n            node: (0, core_1.ObjectNode)({\r\n                multipart: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    when: (0, core_1.Opt)(Reference('multipart_condition')),\r\n                    apply: Reference('model_variant'),\r\n                }))\r\n            }),\r\n            change: (v) => ({ multipart: { when: {}, apply: {} } })\r\n        }\r\n    ], { context: 'block_definition' }), {\r\n        default: () => ({\r\n            variants: {\r\n                \"\": {\r\n                    model: 'minecraft:block/stone'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    const VariantChildren = {\r\n        model: StringNode({ validator: 'resource', params: { pool: '$model' } }),\r\n        x: (0, core_1.Opt)((0, core_1.NumberEnum)({ integer: true, values: [0, 90, 180, 270] })),\r\n        y: (0, core_1.Opt)((0, core_1.NumberEnum)({ integer: true, values: [0, 90, 180, 270] })),\r\n        uvlock: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n    };\r\n    schemas.register('model_variant', (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)(VariantChildren),\r\n            change: (v) => Array.isArray(v) && v.length > 0 ? v[0] : ({})\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                ...VariantChildren,\r\n                weight: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\r\n            }, { context: 'model_variant' })),\r\n            change: (v) => [{ weight: 1, ...v }]\r\n        }\r\n    ], { context: 'model_variant' }));\r\n    schemas.register('multipart_condition', (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            priority: -1,\r\n            match: () => true,\r\n            node: (0, core_1.MapNode)(StringNode(), StringNode()),\r\n            change: (v) => typeof v === 'object' && Array.isArray(v === null || v === void 0 ? void 0 : v.OR) && v.OR.length > 0 ? v.OR[0] : ({})\r\n        },\r\n        {\r\n            type: 'or',\r\n            match: (v) => typeof v === 'object' && (v === null || v === void 0 ? void 0 : v.OR) !== undefined,\r\n            node: (0, core_1.ObjectNode)({\r\n                OR: (0, core_1.ListNode)(Reference('multipart_condition'))\r\n            }),\r\n            change: (v) => ({ OR: [v !== null && v !== void 0 ? v : {}] })\r\n        }\r\n    ], { context: 'multipart_condition' }));\r\n}\r\nexports.initBlockDefinitionSchemas = initBlockDefinitionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFontSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initFontSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('font', (0, core_1.ObjectNode)({\r\n        providers: (0, core_1.ListNode)(Reference('glyph_provider'))\r\n    }, { context: 'font' }));\r\n    schemas.register('glyph_provider', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ enum: 'glyph_provider_type' }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'bitmap': {\r\n                file: StringNode({ validator: 'resource', params: { pool: '$texture', suffix: '.png' } }),\r\n                height: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                ascent: (0, core_1.NumberNode)({ integer: true }),\r\n                chars: (0, core_1.ListNode)(StringNode(), { minLength: 1 })\r\n            },\r\n            'ttf': {\r\n                file: StringNode({ validator: 'resource', params: { pool: '$texture', suffix: '.png' } }),\r\n                size: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                oversample: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                shift: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.NumberNode)(), { minLength: 2, maxLength: 2 })),\r\n                skip: (0, core_1.Opt)((0, core_1.StringOrList)(StringNode()))\r\n            },\r\n            'space': {\r\n                advances: (0, core_1.MapNode)(StringNode(), (0, core_1.NumberNode)())\r\n            },\r\n            'legacy_unicode': {\r\n                sizes: StringNode(),\r\n                template: StringNode()\r\n            }\r\n        }\r\n    }, { context: 'glyph_provider' }), {\r\n        default: () => ({\r\n            type: 'bitmap',\r\n        }),\r\n    }));\r\n}\r\nexports.initFontSchemas = initFontSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAssetsSchemas = void 0;\r\nconst Model_1 = require(\"./Model\");\r\nconst BlockDefinition_1 = require(\"./BlockDefinition\");\r\nconst Font_1 = require(\"./Font\");\r\nfunction initAssetsSchemas(schemas, collections) {\r\n    (0, BlockDefinition_1.initBlockDefinitionSchemas)(schemas, collections);\r\n    (0, Font_1.initFontSchemas)(schemas, collections);\r\n    (0, Model_1.initModelSchemas)(schemas, collections);\r\n}\r\nexports.initAssetsSchemas = initAssetsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initChatTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initChatTypeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('chat_type', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        chat: Reference('text_decoration'),\r\n        narration: Reference('text_decoration'),\r\n    }, { context: 'chat_type' }), {\r\n        default: () => ({\r\n            chat: {\r\n                translation_key: 'chat.type.text',\r\n                parameters: ['sender', 'content'],\r\n            },\r\n            narration: {\r\n                translation_key: 'chat.type.text.narrate',\r\n                parameters: ['sender', 'content'],\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('text_decoration', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        translation_key: StringNode(),\r\n        parameters: (0, core_1.ListNode)(StringNode({ enum: ['sender', 'target', 'content'] })),\r\n        style: (0, core_1.Opt)(Reference('text_style'))\r\n    }, { context: 'text_decoration' }), {\r\n        default: () => ({\r\n            translation_key: 'chat.type.text',\r\n            parameters: ['sender', 'content'],\r\n            style: {},\r\n        })\r\n    }));\r\n}\r\nexports.initChatTypeSchemas = initChatTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.Tag = exports.InclusiveRange = exports.IntProvider = exports.FloatProvider = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.FunctionCases = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultNoiseSettings = {\r\n    sea_level: 63,\r\n    ore_veins_enabled: true,\r\n    disable_mob_generation: false,\r\n    aquifers_enabled: true,\r\n    legacy_random_source: false,\r\n    default_block: {\r\n        Name: 'minecraft:stone'\r\n    },\r\n    default_fluid: {\r\n        Properties: {\r\n            level: '0'\r\n        },\r\n        Name: 'minecraft:water'\r\n    },\r\n    noise: {\r\n        min_y: -64,\r\n        height: 384,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        top_slide: {\r\n            target: -0.078125,\r\n            size: 2,\r\n            offset: 8\r\n        },\r\n        bottom_slide: {\r\n            target: 0.1171875,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        sampling: {\r\n            xz_scale: 0.9999999814507745,\r\n            y_scale: 0.9999999814507745,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        },\r\n        terrain_shaper: {\r\n            offset: 0,\r\n            factor: 0,\r\n            jaggedness: 0\r\n        }\r\n    },\r\n    noise_router: {\r\n        barrier: 0,\r\n        fluid_level_floodedness: 0,\r\n        fluid_level_spread: 0,\r\n        lava: 0,\r\n        temperature: 0,\r\n        vegetation: 0,\r\n        continents: 0,\r\n        erosion: 0,\r\n        depth: 0,\r\n        ridges: 0,\r\n        initial_density_without_jaggedness: 0,\r\n        final_density: {\r\n            type: 'minecraft:interpolated',\r\n            argument: 'minecraft:overworld/base_3d_noise'\r\n        },\r\n        vein_toggle: 0,\r\n        vein_ridged: 0,\r\n        vein_gap: 0,\r\n    },\r\n    surface_rule: {\r\n        type: 'minecraft:sequence',\r\n        sequence: []\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', (0, core_1.Mod)((0, core_1.ListNode)((0, core_1.NumberNode)({ integer: true }), { minLength: 3, maxLength: 3 }), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    const Bounds = (integer) => (0, core_1.Opt)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)({ integer }),\r\n            change: (v) => { var _a, _b; return v === undefined ? 0 : (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 0; }\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.Opt)((0, core_1.NumberNode)({ integer })),\r\n                max: (0, core_1.Opt)((0, core_1.NumberNode)({ integer }))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: v !== null && v !== void 0 ? v : 0,\r\n                max: v !== null && v !== void 0 ? v : 0\r\n            })\r\n        }\r\n    ]));\r\n    schemas.register('int_bounds', Bounds(true));\r\n    schemas.register('float_bounds', Bounds());\r\n    schemas.register('int_range', (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.Opt)(Reference('number_provider')),\r\n                max: (0, core_1.Opt)(Reference('number_provider'))\r\n            })\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)({ integer: true })\r\n        }\r\n    ], { context: 'range' }));\r\n    const ObjectWithType = (pool, directType, directPath, directDefault, objectDefault, context, cases) => {\r\n        let defaultCase = {};\r\n        if (objectDefault) {\r\n            Object.keys(cases[objectDefault]).forEach(k => {\r\n                defaultCase[k] = (0, core_1.Mod)(cases[objectDefault][k], {\r\n                    enabled: path => path.push('type').get() === undefined\r\n                });\r\n            });\r\n        }\r\n        const provider = (0, core_1.ObjectNode)({\r\n            type: (0, core_1.Mod)((0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool } })), {\r\n                hidden: () => true\r\n            }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: cases,\r\n            ...defaultCase\r\n        }, { context, disableSwitchContext: true });\r\n        const choices = [{\r\n                type: directType,\r\n                node: cases[directDefault][directPath]\r\n            }];\r\n        if (objectDefault) {\r\n            choices.push({\r\n                type: 'object',\r\n                priority: -1,\r\n                node: provider\r\n            });\r\n        }\r\n        Object.keys(cases).forEach(k => {\r\n            choices.push({\r\n                type: k,\r\n                match: (v) => {\r\n                    var _a;\r\n                    const type = 'minecraft:' + ((_a = v === null || v === void 0 ? void 0 : v.type) === null || _a === void 0 ? void 0 : _a.replace(/^minecraft:/, ''));\r\n                    if (type === k)\r\n                        return true;\r\n                    const keys = v ? Object.keys(v) : [];\r\n                    return typeof v === 'object' && ((keys === null || keys === void 0 ? void 0 : keys.length) === 0 || ((keys === null || keys === void 0 ? void 0 : keys.length) === 1 && (keys === null || keys === void 0 ? void 0 : keys[0]) === 'type'));\r\n                },\r\n                node: provider,\r\n                change: (v) => ({ type: k })\r\n            });\r\n        });\r\n        return (0, core_1.ChoiceNode)(choices, { context, choiceContext: `${context}.type` });\r\n    };\r\n    schemas.register('number_provider', ObjectWithType('loot_number_provider_type', 'number', 'value', 'minecraft:constant', 'minecraft:uniform', 'number_provider', {\r\n        'minecraft:constant': {\r\n            value: (0, core_1.NumberNode)()\r\n        },\r\n        'minecraft:uniform': {\r\n            min: Reference('number_provider'),\r\n            max: Reference('number_provider')\r\n        },\r\n        'minecraft:binomial': {\r\n            n: Reference('number_provider'),\r\n            p: Reference('number_provider')\r\n        },\r\n        'minecraft:score': {\r\n            target: Reference('scoreboard_name_provider'),\r\n            score: StringNode({ validator: 'objective' }),\r\n            scale: (0, core_1.Opt)((0, core_1.NumberNode)())\r\n        }\r\n    }));\r\n    schemas.register('scoreboard_name_provider', ObjectWithType('loot_score_provider_type', 'string', 'target', 'minecraft:context', null, 'score_provider', {\r\n        'minecraft:fixed': {\r\n            name: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities', isScoreHolder: true } }) // FIXME: doesn't support selectors\r\n        },\r\n        'minecraft:context': {\r\n            target: (0, core_1.Mod)(StringNode({ enum: 'entity_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    schemas.register('nbt_provider', ObjectWithType('loot_nbt_provider_type', 'string', 'target', 'minecraft:context', null, 'nbt_provider', {\r\n        'minecraft:storage': {\r\n            source: StringNode({ validator: 'resource', params: { pool: '$storage' } })\r\n        },\r\n        'minecraft:context': {\r\n            target: (0, core_1.Mod)(StringNode({ enum: 'copy_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    exports.FloatProvider = (config) => ObjectWithType('float_provider_type', 'number', 'value', 'minecraft:constant', null, 'float_provider', {\r\n        'minecraft:constant': {\r\n            value: (0, core_1.NumberNode)(config)\r\n        },\r\n        'minecraft:uniform': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)(config),\r\n                max_exclusive: (0, core_1.NumberNode)(config)\r\n            })\r\n        },\r\n        'minecraft:clamped_normal': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.NumberNode)(),\r\n                max: (0, core_1.NumberNode)(),\r\n                mean: (0, core_1.NumberNode)(),\r\n                deviation: (0, core_1.NumberNode)()\r\n            })\r\n        },\r\n        'minecraft:trapezoid': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.NumberNode)(),\r\n                max: (0, core_1.NumberNode)(),\r\n                plateau: (0, core_1.NumberNode)()\r\n            })\r\n        }\r\n    });\r\n    schemas.register('float_provider', (0, exports.FloatProvider)());\r\n    exports.IntProvider = (config) => ObjectWithType('int_provider_type', 'number', 'value', 'minecraft:constant', null, 'int_provider', {\r\n        'minecraft:constant': {\r\n            value: (0, core_1.NumberNode)({ integer: true, ...config })\r\n        },\r\n        'minecraft:uniform': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config })\r\n            })\r\n        },\r\n        'minecraft:clamped': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                source: Reference('int_provider')\r\n            })\r\n        },\r\n        'minecraft:clamped_normal': {\r\n            value: (0, core_1.ObjectNode)({\r\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\r\n                mean: (0, core_1.NumberNode)(),\r\n                deviation: (0, core_1.NumberNode)()\r\n            })\r\n        },\r\n        'minecraft:weighted_list': {\r\n            distribution: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                weight: (0, core_1.NumberNode)({ integer: true }),\r\n                data: Reference('int_provider'),\r\n            }))\r\n        }\r\n    });\r\n    schemas.register('int_provider', (0, exports.IntProvider)());\r\n    schemas.register('vertical_anchor', (0, core_1.ChoiceNode)(['absolute', 'above_bottom', 'below_top'].map(t => ({\r\n        type: t,\r\n        match: v => (v === null || v === void 0 ? void 0 : v[t]) !== undefined,\r\n        change: v => { var _a, _b, _c; return ({ [t]: (_c = (_b = (_a = v.absolute) !== null && _a !== void 0 ? _a : v.above_bottom) !== null && _b !== void 0 ? _b : v.below_top) !== null && _c !== void 0 ? _c : 0 }); },\r\n        node: (0, core_1.ObjectNode)({\r\n            [t]: (0, core_1.NumberNode)({ integer: true, min: -2048, max: 2047 })\r\n        })\r\n    })), { context: 'vertical_anchor' }));\r\n    schemas.register('height_provider', ObjectWithType('height_provider_type', 'number', 'value', 'minecraft:constant', null, 'height_provider', {\r\n        'minecraft:constant': {\r\n            value: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:uniform': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor')\r\n        },\r\n        'minecraft:biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:very_biased_to_bottom': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            inner: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\r\n        },\r\n        'minecraft:trapezoid': {\r\n            min_inclusive: Reference('vertical_anchor'),\r\n            max_inclusive: Reference('vertical_anchor'),\r\n            plateau: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n        },\r\n        'minecraft:weighted_list': {\r\n            distribution: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                weight: (0, core_1.NumberNode)({ integer: true }),\r\n                data: Reference('height_provider'),\r\n            }))\r\n        }\r\n    }));\r\n    exports.InclusiveRange = (config) => (0, core_1.ObjectNode)({\r\n        min_inclusive: (0, core_1.NumberNode)(config),\r\n        max_inclusive: (0, core_1.NumberNode)(config)\r\n    }, { context: 'range' });\r\n    schemas.register('noise_parameters', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        firstOctave: (0, core_1.NumberNode)({ integer: true }),\r\n        amplitudes: (0, core_1.ListNode)((0, core_1.NumberNode)())\r\n    }, { context: 'noise_parameters' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n    exports.Tag = (config) => (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: config.resource, allowTag: true } }),\r\n            change: (v) => {\r\n                if (Array.isArray(v) && typeof v[0] === 'string' && !v[0].startsWith('#')) {\r\n                    return v[0];\r\n                }\r\n                return undefined;\r\n            }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)(config.inlineSchema\r\n                ? (0, core_1.ChoiceNode)([\r\n                    {\r\n                        type: 'string',\r\n                        node: StringNode({ validator: 'resource', params: { pool: config.resource } })\r\n                    },\r\n                    {\r\n                        type: 'object',\r\n                        node: Reference(config.inlineSchema)\r\n                    }\r\n                ], { choiceContext: 'tag.list' })\r\n                : StringNode({ validator: 'resource', params: { pool: config.resource } })),\r\n            change: (v) => {\r\n                if (typeof v === 'string' && !v.startsWith('#')) {\r\n                    return [v];\r\n                }\r\n                return [];\r\n            }\r\n        },\r\n    ], { choiceContext: 'tag' });\r\n    exports.ConditionCases = (entitySourceNode = StringNode({ enum: 'entity_source' })) => ({\r\n        'minecraft:alternative': {\r\n            terms: (0, core_1.ListNode)(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: (0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: entitySourceNode,\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: entitySourceNode,\r\n            scores: (0, core_1.MapNode)(StringNode({ validator: 'objective' }), Reference('int_range'))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n            offsetY: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n            offsetZ: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n            looting_multiplier: (0, core_1.NumberNode)()\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: (0, core_1.ListNode)((0, core_1.NumberNode)({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: Reference('int_range'),\r\n            period: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n        },\r\n        'minecraft:value_check': {\r\n            value: Reference('number_provider'),\r\n            range: Reference('int_range')\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            thundering: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        }\r\n    });\r\n    exports.FunctionCases = (conditions, copySourceNode = StringNode({ enum: 'copy_source' }), entitySourceNode = StringNode({ enum: 'entity_source' })) => {\r\n        const cases = {\r\n            'minecraft:apply_bonus': {\r\n                enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                parameters: (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n                    bonusMultiplier: (0, core_1.Mod)((0, core_1.NumberNode)(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                    }),\r\n                    extra: (0, core_1.Mod)((0, core_1.NumberNode)(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    }),\r\n                    probability: (0, core_1.Mod)((0, core_1.NumberNode)(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    })\r\n                }), {\r\n                    enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                })\r\n            },\r\n            'minecraft:copy_name': {\r\n                source: copySourceNode\r\n            },\r\n            'minecraft:copy_nbt': {\r\n                source: Reference('nbt_provider'),\r\n                ops: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                    target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                    op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                }, { context: 'nbt_operation' }))\r\n            },\r\n            'minecraft:copy_state': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                properties: (0, core_1.ListNode)(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\r\n            },\r\n            'minecraft:enchant_randomly': {\r\n                enchantments: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\r\n            },\r\n            'minecraft:enchant_with_levels': {\r\n                levels: Reference('number_provider'),\r\n                treasure: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:exploration_map': {\r\n                destination: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/worldgen/structure' } })),\r\n                decoration: (0, core_1.Opt)(StringNode({ enum: 'map_decoration' })),\r\n                zoom: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                search_radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                skip_existing_chunks: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:fill_player_head': {\r\n                entity: entitySourceNode\r\n            },\r\n            'minecraft:limit_count': {\r\n                limit: Reference('int_range')\r\n            },\r\n            'minecraft:looting_enchant': {\r\n                count: Reference('number_provider'),\r\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            },\r\n            'minecraft:set_attributes': {\r\n                modifiers: (0, core_1.ListNode)(Reference('attribute_modifier'))\r\n            },\r\n            'minecraft:set_banner_pattern': {\r\n                patterns: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    pattern: StringNode({ enum: 'banner_pattern' }),\r\n                    color: StringNode({ enum: 'dye_color' })\r\n                })),\r\n                append: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_contents': {\r\n                type: StringNode({ validator: 'resource', params: { pool: 'block_entity_type' } }),\r\n                entries: (0, core_1.ListNode)(Reference('loot_entry'))\r\n            },\r\n            'minecraft:set_count': {\r\n                count: Reference('number_provider'),\r\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_damage': {\r\n                damage: Reference('number_provider'),\r\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_enchantments': {\r\n                enchantments: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }), Reference('number_provider')),\r\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_instrument': {\r\n                options: StringNode({ validator: 'resource', params: { pool: 'instrument', requireTag: true } })\r\n            },\r\n            'minecraft:set_loot_table': {\r\n                type: StringNode({ validator: 'resource', params: { pool: 'block_entity_type' } }),\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                seed: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            },\r\n            'minecraft:set_lore': {\r\n                entity: (0, core_1.Opt)(entitySourceNode),\r\n                lore: (0, core_1.ListNode)(Reference('text_component')),\r\n                replace: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            },\r\n            'minecraft:set_name': {\r\n                entity: (0, core_1.Opt)(entitySourceNode),\r\n                name: (0, core_1.Opt)(Reference('text_component'))\r\n            },\r\n            'minecraft:set_nbt': {\r\n                tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\r\n            },\r\n            'minecraft:set_potion': {\r\n                id: StringNode({ validator: 'resource', params: { pool: 'potion' } })\r\n            },\r\n            'minecraft:set_stew_effect': {\r\n                effects: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                    duration: Reference('number_provider')\r\n                })))\r\n            }\r\n        };\r\n        const res = {};\r\n        collections.get('loot_function_type').forEach(f => {\r\n            res[f] = { ...cases[f], ...conditions };\r\n        });\r\n        return res;\r\n    };\r\n    exports.NoiseSettingsPresets = (node) => (0, core_1.ObjectOrPreset)(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            sea_level: 32,\r\n            ore_veins_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            legacy_random_source: true,\r\n            default_block: {\r\n                Name: 'minecraft:netherrack'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:lava'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                top_slide: {\r\n                    target: 0.9375,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 2.5,\r\n                    size: 4,\r\n                    offset: -1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 1.0,\r\n                    y_scale: 3.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 60.0\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 0,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            noise_router: {\r\n                barrier: 0,\r\n                fluid_level_floodedness: 0,\r\n                fluid_level_spread: 0,\r\n                lava: 0,\r\n                temperature: 0,\r\n                vegetation: 0,\r\n                continents: 0,\r\n                erosion: 0,\r\n                depth: 0,\r\n                ridges: 0,\r\n                initial_density_without_jaggedness: 0,\r\n                final_density: {\r\n                    type: 'minecraft:interpolated',\r\n                    argument: 'minecraft:overworld/base_3d_noise'\r\n                },\r\n                vein_toggle: 0,\r\n                vein_ridged: 0,\r\n                vein_gap: 0,\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            sea_level: 0,\r\n            ore_veins_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            legacy_random_source: true,\r\n            default_block: {\r\n                Name: 'minecraft:end_stone'\r\n            },\r\n            default_fluid: {\r\n                Name: 'minecraft:air'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                top_slide: {\r\n                    target: -23.4375,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -0.234375,\r\n                    size: 7,\r\n                    offset: 1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 2.0,\r\n                    y_scale: 1.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 160.0\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 1,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            noise_router: {\r\n                barrier: 0,\r\n                fluid_level_floodedness: 0,\r\n                fluid_level_spread: 0,\r\n                lava: 0,\r\n                temperature: 0,\r\n                vegetation: 0,\r\n                continents: 0,\r\n                erosion: 0,\r\n                depth: 0,\r\n                ridges: 0,\r\n                initial_density_without_jaggedness: 0,\r\n                final_density: {\r\n                    type: 'minecraft:interpolated',\r\n                    argument: 'minecraft:overworld/base_3d_noise'\r\n                },\r\n                vein_toggle: 0,\r\n                vein_ridged: 0,\r\n                vein_gap: 0,\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            sea_level: 63,\r\n            ore_veins_enabled: true,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: true,\r\n            legacy_random_source: false,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: -64,\r\n                height: 384,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                top_slide: {\r\n                    target: -0.078125,\r\n                    size: 2,\r\n                    offset: 8\r\n                },\r\n                bottom_slide: {\r\n                    target: 0.1171875,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                sampling: {\r\n                    xz_scale: 0.9999999814507745,\r\n                    y_scale: 0.9999999814507745,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 0,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            noise_router: {\r\n                barrier: 0,\r\n                fluid_level_floodedness: 0,\r\n                fluid_level_spread: 0,\r\n                lava: 0,\r\n                temperature: 0,\r\n                vegetation: 0,\r\n                continents: 0,\r\n                erosion: 0,\r\n                depth: 0,\r\n                ridges: 0,\r\n                initial_density_without_jaggedness: 0,\r\n                final_density: {\r\n                    type: 'minecraft:interpolated',\r\n                    argument: 'minecraft:overworld/base_3d_noise'\r\n                },\r\n                vein_toggle: 0,\r\n                vein_ridged: 0,\r\n                vein_gap: 0,\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            },\r\n        },\r\n        'minecraft:caves': {\r\n            sea_level: 32,\r\n            ore_veins_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            legacy_random_source: true,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                top_slide: {\r\n                    target: 0.9375,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 2.5,\r\n                    size: 4,\r\n                    offset: -1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 1.0,\r\n                    y_scale: 3.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 60.0\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 0,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            noise_router: {\r\n                barrier: 0,\r\n                fluid_level_floodedness: 0,\r\n                fluid_level_spread: 0,\r\n                lava: 0,\r\n                temperature: 0,\r\n                vegetation: 0,\r\n                continents: 0,\r\n                erosion: 0,\r\n                depth: 0,\r\n                ridges: 0,\r\n                initial_density_without_jaggedness: 0,\r\n                final_density: {\r\n                    type: 'minecraft:interpolated',\r\n                    argument: 'minecraft:overworld/base_3d_noise'\r\n                },\r\n                vein_toggle: 0,\r\n                vein_ridged: 0,\r\n                vein_gap: 0,\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            sea_level: 0,\r\n            ore_veins_enabled: false,\r\n            disable_mob_generation: false,\r\n            aquifers_enabled: false,\r\n            legacy_random_source: true,\r\n            default_block: {\r\n                Name: 'minecraft:stone'\r\n            },\r\n            default_fluid: {\r\n                Properties: {\r\n                    level: '0'\r\n                },\r\n                Name: 'minecraft:water'\r\n            },\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                top_slide: {\r\n                    target: -23.4375,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -0.234375,\r\n                    size: 7,\r\n                    offset: 1\r\n                },\r\n                sampling: {\r\n                    xz_scale: 2.0,\r\n                    y_scale: 1.0,\r\n                    xz_factor: 80.0,\r\n                    y_factor: 160.0\r\n                },\r\n                terrain_shaper: {\r\n                    offset: 0,\r\n                    factor: 1,\r\n                    jaggedness: 0\r\n                }\r\n            },\r\n            noise_router: {\r\n                barrier: 0,\r\n                fluid_level_floodedness: 0,\r\n                fluid_level_spread: 0,\r\n                lava: 0,\r\n                temperature: 0,\r\n                vegetation: 0,\r\n                continents: 0,\r\n                erosion: 0,\r\n                depth: 0,\r\n                ridges: 0,\r\n                initial_density_without_jaggedness: 0,\r\n                final_density: {\r\n                    type: 'minecraft:interpolated',\r\n                    argument: 'minecraft:overworld/base_3d_noise'\r\n                },\r\n                vein_toggle: 0,\r\n                vein_ridged: 0,\r\n                vein_gap: 0,\r\n            },\r\n            surface_rule: {\r\n                type: 'minecraft:sequence',\r\n                sequence: []\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', (0, core_1.ObjectOrList)(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: (0, Common_1.ConditionCases)()\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }),\r\n        generator: (0, core_1.ObjectNode)({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    settings: (0, Common_1.NoiseSettingsPresets)(Reference('noise_settings')),\r\n                    biome_source: (0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                preset: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: ['minecraft:overworld', 'minecraft:nether'] } })),\r\n                                biomes: (0, core_1.Mod)((0, core_1.ListNode)(Reference('generator_biome')), {\r\n                                    enabled: path => path.push('preset').get() === undefined,\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                })\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 62 })),\r\n                                biomes: (0, Common_1.Tag)({ resource: '$worldgen/biome' })\r\n                            },\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true })\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: Reference('flat_generator_settings')\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    schemas.register('flat_generator_settings', (0, core_1.ObjectNode)({\r\n        biome: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        lakes: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        features: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        layers: (0, core_1.ListNode)(Reference('generator_layer')),\r\n        structure_overrides: (0, Common_1.Tag)({ resource: '$worldgen/structure_set' })\r\n    }));\r\n    const ClimateParameter = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)({ min: -2, max: 2 }),\r\n            change: (v) => { var _a; return (_a = v[0]) !== null && _a !== void 0 ? _a : 0; }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)((0, core_1.NumberNode)({ min: -2, max: 2 }), { minLength: 2, maxLength: 2 }),\r\n            change: (v) => [v !== null && v !== void 0 ? v : 0, v !== null && v !== void 0 ? v : 0]\r\n        }\r\n    ]);\r\n    schemas.register('parameter_point', (0, core_1.ObjectNode)({\r\n        temperature: ClimateParameter,\r\n        humidity: ClimateParameter,\r\n        continentalness: ClimateParameter,\r\n        erosion: ClimateParameter,\r\n        weirdness: ClimateParameter,\r\n        depth: ClimateParameter,\r\n        offset: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n    }));\r\n    schemas.register('generator_biome', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: Reference('parameter_point'),\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                temperature: 0,\r\n                humidity: 0,\r\n                continentalness: 0,\r\n                erosion: 0,\r\n                weirdness: 0,\r\n                depth: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        ultrawarm: (0, core_1.BooleanNode)(),\r\n        natural: (0, core_1.BooleanNode)(),\r\n        piglin_safe: (0, core_1.BooleanNode)(),\r\n        respawn_anchor_works: (0, core_1.BooleanNode)(),\r\n        bed_works: (0, core_1.BooleanNode)(),\r\n        has_raids: (0, core_1.BooleanNode)(),\r\n        has_skylight: (0, core_1.BooleanNode)(),\r\n        has_ceiling: (0, core_1.BooleanNode)(),\r\n        coordinate_scale: (0, core_1.NumberNode)({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: (0, core_1.NumberNode)(),\r\n        fixed_time: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n        logical_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4064 }),\r\n        effects: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] } })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: 'block', requireTag: true } }),\r\n        min_y: (0, core_1.NumberNode)({ integer: true, min: -2032, max: 2031 }),\r\n        height: (0, core_1.NumberNode)({ integer: true, min: 16, max: 4064 }),\r\n        monster_spawn_light_level: (0, Common_1.IntProvider)({ min: 0, max: 15 }),\r\n        monster_spawn_block_light_limit: (0, core_1.NumberNode)({ integer: true, min: 0, max: 15 }),\r\n    }, { context: 'dimension_type' }), node => ({\r\n        default: () => ({\r\n            ultrawarm: false,\r\n            natural: true,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: true,\r\n            has_raids: true,\r\n            has_skylight: true,\r\n            has_ceiling: false,\r\n            coordinate_scale: 1,\r\n            ambient_light: 0,\r\n            logical_height: 384,\r\n            effects: 'minecraft:overworld',\r\n            infiniburn: '#minecraft:infiniburn_overworld',\r\n            min_y: -64,\r\n            height: 384,\r\n            monster_spawn_block_light_limit: 0,\r\n            monster_spawn_light_level: {\r\n                type: 'minecraft:uniform',\r\n                value: {\r\n                    min_inclusive: 0,\r\n                    max_inclusive: 7,\r\n                },\r\n            },\r\n        }),\r\n        validate: (path, value, errors, options) => {\r\n            value = node.validate(path, value, errors, options);\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) + (value === null || value === void 0 ? void 0 : value.height) > 2032) {\r\n                errors.add(path.push('height'), 'error.min_y_plus_height', 2032);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.logical_height) > (value === null || value === void 0 ? void 0 : value.height)) {\r\n                errors.add(path.push('logical_height'), 'error.logical_height');\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.height) % 16 !== 0) {\r\n                errors.add(path.push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) % 16 !== 0) {\r\n                errors.add(path.push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initItemModifierSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initItemModifierSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('item_modifier', (0, core_1.ObjectOrList)(Reference('function'), { choiceContext: 'function' }));\r\n    const conditions = {\r\n        conditions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('condition')))\r\n    };\r\n    schemas.register('function', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        function: StringNode({ validator: 'resource', params: { pool: 'loot_function_type' } }),\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: (0, Common_1.FunctionCases)(conditions)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => [{\r\n                function: 'minecraft:set_count',\r\n                count: 1\r\n            }]\r\n    }));\r\n}\r\nexports.initItemModifierSchemas = initItemModifierSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_banner_pattern', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return (0, core_1.SwitchNode)(cases);\r\n    }\r\n    const conditionIDSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionIDSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: (0, core_1.Opt)(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            rolls: Reference('number_provider'),\r\n            bonus_rolls: (0, core_1.Opt)(Reference('number_provider')),\r\n            entries: (0, core_1.ListNode)(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const singletonFields = {\r\n        weight: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n        quality: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n        ...functionsAndConditions,\r\n    };\r\n    schemas.register('loot_entry', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\r\n                ...conditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...singletonFields\r\n            },\r\n            'minecraft:empty': {\r\n                ...singletonFields\r\n            },\r\n            'minecraft:group': {\r\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\r\n                ...conditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...singletonFields\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...singletonFields\r\n            },\r\n            'minecraft:sequence': {\r\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\r\n                ...conditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: (0, core_1.BooleanNode)(),\r\n                ...singletonFields\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        function: functionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'function' }],\r\n        [core_1.Case]: (0, Common_1.FunctionCases)(conditions, copySourceSwtichNode, entitySourceSwtichNode)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        condition: conditionIDSwtichNode,\r\n        [core_1.Switch]: [{ push: 'condition' }],\r\n        [core_1.Case]: (0, Common_1.ConditionCases)(entitySourceSwtichNode)\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Reference('number_provider'),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        id: (0, core_1.Opt)(StringNode({ validator: 'uuid' })),\r\n        slot: (0, core_1.StringOrList)(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst CURRENT_PACK_FORMAT = 10;\r\nfunction initPackMcmetaSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('pack_mcmeta', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        pack: (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            pack_format: (0, core_1.Mod)((0, core_1.NumberNode)({ integer: true, min: CURRENT_PACK_FORMAT, max: CURRENT_PACK_FORMAT }), {\r\n                default: () => CURRENT_PACK_FORMAT,\r\n                canUpdate: (_p, v) => v !== CURRENT_PACK_FORMAT,\r\n                update: () => [{ name: 'pack_format', params: [CURRENT_PACK_FORMAT], newValue: CURRENT_PACK_FORMAT }]\r\n            }),\r\n            description: Reference('text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            })\r\n        }),\r\n        filter: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            block: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                namespace: (0, core_1.Opt)(StringNode({ validator: 'regex_pattern' })),\r\n                path: (0, core_1.Opt)(StringNode({ validator: 'regex_pattern' })),\r\n            }))\r\n        }))\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)({\r\n                min: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                max: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: (0, core_1.BooleanNode)(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', (0, core_1.ObjectNode)({\r\n        items: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'item' } }))),\r\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: Reference('int_bounds'),\r\n        durability: Reference('int_bounds'),\r\n        potion: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: (0, core_1.Opt)((0, core_1.ListNode)(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', (0, core_1.ObjectNode)({\r\n        enchantment: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: Reference('int_bounds')\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', (0, core_1.ObjectNode)({\r\n        blocks: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))),\r\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', (0, core_1.ObjectNode)({\r\n        fluid: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', (0, core_1.ObjectNode)({\r\n        position: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            x: Reference('float_bounds'),\r\n            y: Reference('float_bounds'),\r\n            z: Reference('float_bounds')\r\n        })),\r\n        biome: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        structure: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$worldgen/structure' } })),\r\n        dimension: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            light: Reference('int_bounds')\r\n        })),\r\n        smokey: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        block: (0, core_1.Opt)(Reference('block_predicate')),\r\n        fluid: (0, core_1.Opt)(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', (0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Reference('int_bounds'),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('status_effect_predicate', (0, core_1.ObjectNode)({\r\n        amplifier: Reference('int_bounds'),\r\n        duration: Reference('int_bounds'),\r\n        ambient: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        visible: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', (0, core_1.ObjectNode)({\r\n        x: Reference('float_bounds'),\r\n        y: Reference('float_bounds'),\r\n        z: Reference('float_bounds'),\r\n        absolute: Reference('float_bounds'),\r\n        horizontal: Reference('float_bounds')\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', (0, core_1.ObjectNode)({\r\n        type: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        type_specific: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            type: StringNode({ enum: 'type_specific_type' }),\r\n            [core_1.Switch]: [{ push: 'type' }],\r\n            [core_1.Case]: {\r\n                'cat': {\r\n                    variant: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'cat_variant' } }))\r\n                },\r\n                'fishing_hook': {\r\n                    in_open_water: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n                },\r\n                'frog': {\r\n                    variant: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'frog_variant' } }))\r\n                },\r\n                'lightning': {\r\n                    blocks_set_on_fire: (0, core_1.Opt)(Reference('int_bounds')),\r\n                    entity_struck: (0, core_1.Opt)(Reference('entity_predicate'))\r\n                },\r\n                'player': {\r\n                    gamemode: (0, core_1.Opt)(StringNode({ enum: 'gamemode' })),\r\n                    level: Reference('int_bounds'),\r\n                    advancements: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), (0, core_1.ChoiceNode)([\r\n                        {\r\n                            type: 'boolean',\r\n                            node: (0, core_1.BooleanNode)(),\r\n                            change: () => true\r\n                        },\r\n                        {\r\n                            type: 'object',\r\n                            node: (0, core_1.MapNode)(StringNode(), (0, core_1.BooleanNode)())\r\n                        }\r\n                    ]))),\r\n                    recipes: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), (0, core_1.BooleanNode)())),\r\n                    stats: (0, core_1.Opt)((0, core_1.ListNode)(Reference('statistic_predicate'))),\r\n                    looking_at: (0, core_1.Opt)(Reference('entity_predicate'))\r\n                },\r\n                'slime': {\r\n                    size: Reference('int_bounds')\r\n                },\r\n            }\r\n        })),\r\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: (0, core_1.Opt)(StringNode({ validator: 'team' })),\r\n        location: (0, core_1.Opt)(Reference('location_predicate')),\r\n        stepping_on: (0, core_1.Opt)(Reference('location_predicate')),\r\n        distance: (0, core_1.Opt)(Reference('distance_predicate')),\r\n        flags: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            is_on_fire: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            is_sneaking: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            is_sprinting: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            is_swimming: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n            is_baby: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n        })),\r\n        equipment: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        vehicle: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        passenger: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        targeted_entity: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        effects: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', (0, core_1.ObjectNode)({\r\n        is_explosion: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        is_fire: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        is_magic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        is_projectile: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        is_lightning: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        bypasses_armor: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        bypasses_invulnerability: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        bypasses_magic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        source_entity: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        direct_entity: (0, core_1.Opt)(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', (0, core_1.ObjectNode)({\r\n        dealt: Reference('float_bounds'),\r\n        taken: Reference('float_bounds'),\r\n        blocked: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        source_entity: (0, core_1.Opt)(Reference('entity_predicate')),\r\n        type: (0, core_1.Opt)(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: (0, core_1.Opt)(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: (0, core_1.ListNode)(StringNode()),\r\n                key: (0, core_1.MapNode)(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredients: (0, core_1.ListNode)(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\r\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: (0, core_1.NumberNode)({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: (0, core_1.Opt)(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        item: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        replace: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        values: (0, core_1.ListNode)((0, core_1.ChoiceNode)([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: (0, core_1.ObjectNode)({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: (0, core_1.BooleanNode)()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('game_event_tag', TagBase('game_event'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n    schemas.register('advancement_tag', TagBase('$advancement'));\r\n    schemas.register('chat_type_tag', TagBase('$chat_type'));\r\n    schemas.register('dimension_tag', TagBase('$dimension'));\r\n    schemas.register('dimension_type_tag', TagBase('$dimension_type'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('item_modifier_tag', TagBase('$item_modifier'));\r\n    schemas.register('loot_table_tag', TagBase('$loot_table'));\r\n    schemas.register('predicate_tag', TagBase('$predicate'));\r\n    schemas.register('recipe_tag', TagBase('$recipe'));\r\n    schemas.register('structure_tag', TagBase('$structure'));\r\n    schemas.register('biome_tag', TagBase('$worldgen/biome'));\r\n    schemas.register('configured_carver_tag', TagBase('$worldgen/configured_carver'));\r\n    schemas.register('configured_feature_tag', TagBase('$worldgen/configured_feature'));\r\n    schemas.register('structure_tag', TagBase('$worldgen/structure'));\r\n    schemas.register('configured_surface_builder_tag', TagBase('$worldgen/configured_surface_builder'));\r\n    schemas.register('density_function_tag', TagBase('$worldgen/density_function'));\r\n    schemas.register('flat_level_generator_preset_tag', TagBase('$worldgen/flat_level_generator_preset'));\r\n    schemas.register('noise_tag', TagBase('$worldgen/noise'));\r\n    schemas.register('noise_settings_tag', TagBase('$worldgen/noise_settings'));\r\n    schemas.register('placed_feature_tag', TagBase('$worldgen/placed_feature'));\r\n    schemas.register('processor_list_tag', TagBase('$worldgen/processor_list'));\r\n    schemas.register('structure_set_tag', TagBase('$worldgen/structure_set'));\r\n    schemas.register('template_pool_tag', TagBase('$worldgen/template_pool'));\r\n    schemas.register('world_preset_tag', TagBase('$worldgen/world_preset'));\r\n    schemas.register('banner_pattern_tag', TagBase('banner_pattern'));\r\n    schemas.register('cat_variant_tag', TagBase('cat_variant'));\r\n    schemas.register('instrument_tag', TagBase('instrument'));\r\n    schemas.register('painting_variant_tag', TagBase('painting_variant'));\r\n    schemas.register('point_of_interest_type_tag', TagBase('point_of_interest_type'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\r\n    schemas.register('text_component', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: (0, core_1.BooleanNode)(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    const StyleFields = {\r\n        color: (0, core_1.Opt)(StringNode()) /* TODO */,\r\n        font: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'font' } })),\r\n        bold: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        italic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        underlined: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        strikethrough: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        obfuscated: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n        insertion: (0, core_1.Opt)(StringNode()),\r\n    };\r\n    schemas.register('text_style', (0, core_1.ObjectNode)({\r\n        ...StyleFields\r\n    }, { context: 'text_component_object' }));\r\n    const CommonFields = {\r\n        ...StyleFields,\r\n        clickEvent: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: [{ push: 'action' }],\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: (0, core_1.Opt)(Reference('text_component')),\r\n                    contents: (0, core_1.Opt)(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        tag: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                        name: (0, core_1.Opt)(StringNode()),\r\n                        type: (0, core_1.Opt)(StringNode()),\r\n                        id: (0, core_1.Opt)(StringNode())\r\n                    })),\r\n                    contents: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.ObjectNode)({\r\n                        name: (0, core_1.Opt)(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        })),\r\n        extra: (0, core_1.Opt)(Reference('text_component_list'))\r\n    };\r\n    schemas.register('text_component_object', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'text',\r\n            match: v => typeof v === 'object',\r\n            change: v => ({ text: '' }),\r\n            priority: -1,\r\n            node: (0, core_1.ObjectNode)({\r\n                text: StringNode(),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'translation',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\r\n            change: v => ({ translate: '' }),\r\n            node: (0, core_1.ObjectNode)({\r\n                translate: StringNode(),\r\n                with: (0, core_1.Opt)(Reference('text_component_list')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'score',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\r\n            change: v => ({ score: {} }),\r\n            node: (0, core_1.ObjectNode)({\r\n                score: (0, core_1.ObjectNode)({\r\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n                    objective: StringNode({ validator: 'objective' }),\r\n                    value: (0, core_1.Opt)(StringNode())\r\n                }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'selector',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\r\n            change: v => ({ selector: '' }),\r\n            node: (0, core_1.ObjectNode)({\r\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\r\n                separator: (0, core_1.Opt)(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'keybind',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\r\n            change: v => ({ keybind: '' }),\r\n            node: (0, core_1.ObjectNode)({\r\n                keybind: StringNode({ enum: 'keybind', additional: true }),\r\n                ...CommonFields\r\n            })\r\n        },\r\n        {\r\n            type: 'nbt',\r\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\r\n            change: v => ({ nbt: '' }),\r\n            node: (0, core_1.ObjectNode)({\r\n                nbt: StringNode({ validator: 'nbt_path' }),\r\n                block: (0, core_1.Opt)(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\r\n                entity: (0, core_1.Opt)(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n                storage: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\r\n                interpret: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                separator: (0, core_1.Opt)(Reference('text_component')),\r\n                ...CommonFields\r\n            })\r\n        }\r\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', (0, core_1.Mod)((0, core_1.ListNode)(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = exports.MobCategorySpawnSettings = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    exports.MobCategorySpawnSettings = (0, core_1.Mod)((0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n        weight: (0, core_1.NumberNode)({ integer: true }),\r\n        minCount: (0, core_1.NumberNode)({ integer: true }),\r\n        maxCount: (0, core_1.NumberNode)({ integer: true })\r\n    })), {\r\n        category: () => 'pool',\r\n        default: () => [{\r\n                type: 'minecraft:bat',\r\n                weight: 1\r\n            }]\r\n    });\r\n    schemas.register('biome', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        temperature: (0, core_1.NumberNode)(),\r\n        downfall: (0, core_1.NumberNode)(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: (0, core_1.Opt)(StringNode({ enum: ['none', 'frozen'] })),\r\n        creature_spawn_probability: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n        effects: (0, core_1.ObjectNode)({\r\n            sky_color: (0, core_1.NumberNode)({ color: true }),\r\n            fog_color: (0, core_1.NumberNode)({ color: true }),\r\n            water_color: (0, core_1.NumberNode)({ color: true }),\r\n            water_fog_color: (0, core_1.NumberNode)({ color: true }),\r\n            grass_color: (0, core_1.Opt)((0, core_1.NumberNode)({ color: true })),\r\n            foliage_color: (0, core_1.Opt)((0, core_1.NumberNode)({ color: true })),\r\n            grass_color_modifier: (0, core_1.Opt)(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: (0, core_1.Opt)(StringNode()),\r\n            mood_sound: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                sound: StringNode(),\r\n                tick_delay: (0, core_1.NumberNode)({ integer: true }),\r\n                block_search_extent: (0, core_1.NumberNode)({ integer: true }),\r\n                offset: (0, core_1.NumberNode)()\r\n            })),\r\n            additions_sound: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                sound: StringNode(),\r\n                tick_chance: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            })),\r\n            music: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                sound: StringNode(),\r\n                min_delay: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n                max_delay: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n                replace_current_music: (0, core_1.BooleanNode)()\r\n            })),\r\n            particle: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                options: (0, core_1.ObjectNode)({\r\n                    type: StringNode()\r\n                }),\r\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        spawners: (0, core_1.MapNode)(StringNode({ enum: 'mob_category' }), exports.MobCategorySpawnSettings),\r\n        spawn_costs: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n            energy_budget: (0, core_1.NumberNode)(),\r\n            charge: (0, core_1.NumberNode)()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: (0, core_1.MapNode)(StringNode({ enum: ['air', 'liquid'] }), (0, core_1.Mod)((0, Common_1.Tag)({ resource: '$worldgen/configured_carver', inlineSchema: 'configured_carver' }), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: (0, core_1.ListNode)((0, core_1.Mod)((0, Common_1.Tag)({ resource: '$worldgen/placed_feature', inlineSchema: 'placed_feature' }), { category: () => 'predicate' }), { maxLength: 11 })\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const CanyonConfig = {\r\n        vertical_rotation: (0, Common_1.FloatProvider)(),\r\n        shape: (0, core_1.ObjectNode)({\r\n            distance_factor: (0, Common_1.FloatProvider)(),\r\n            thickness: (0, Common_1.FloatProvider)(),\r\n            width_smoothness: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n            horizontal_radius_factor: (0, Common_1.FloatProvider)(),\r\n            vertical_radius_default_factor: (0, core_1.NumberNode)(),\r\n            vertical_radius_center_factor: (0, core_1.NumberNode)()\r\n        })\r\n    };\r\n    const CaveConfig = {\r\n        horizontal_radius_multiplier: (0, Common_1.FloatProvider)(),\r\n        vertical_radius_multiplier: (0, Common_1.FloatProvider)(),\r\n        floor_level: (0, Common_1.FloatProvider)({ min: -1, max: 1 }),\r\n    };\r\n    schemas.register('configured_carver', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: (0, core_1.ObjectNode)({\r\n            probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n            y: Reference('height_provider'),\r\n            yScale: (0, Common_1.FloatProvider)(),\r\n            lava_level: Reference('vertical_anchor'),\r\n            replaceable: (0, Common_1.Tag)({ resource: 'block' }),\r\n            debug_settings: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                debug_mode: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                air_state: (0, core_1.Opt)(Reference('block_state')),\r\n                water_state: (0, core_1.Opt)(Reference('block_state')),\r\n                lava_state: (0, core_1.Opt)(Reference('block_state')),\r\n                barrier_state: (0, core_1.Opt)(Reference('block_state'))\r\n            })),\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:canyon': CanyonConfig,\r\n                'minecraft:cave': CaveConfig,\r\n                'minecraft:nether_cave': CaveConfig\r\n            },\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('decorator', (0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/placement_modifier_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_predicate_filter': {\r\n                predicate: Reference('block_predicate_worldgen')\r\n            },\r\n            'minecraft:carving_mask': {\r\n                step: StringNode({ enum: 'generation_step' })\r\n            },\r\n            'minecraft:rarity_filter': {\r\n                chance: (0, core_1.NumberNode)({ integer: true, min: 0 })\r\n            },\r\n            'minecraft:count': {\r\n                count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\r\n            },\r\n            'minecraft:count_on_every_layer': {\r\n                count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\r\n            },\r\n            'minecraft:noise_threshold_count': {\r\n                noise_level: (0, core_1.NumberNode)(),\r\n                below_noise: (0, core_1.NumberNode)({ integer: true }),\r\n                above_noise: (0, core_1.NumberNode)({ integer: true })\r\n            },\r\n            'minecraft:noise_based_count': {\r\n                noise_to_count_ratio: (0, core_1.NumberNode)({ integer: true }),\r\n                noise_factor: (0, core_1.NumberNode)(),\r\n                noise_offset: (0, core_1.Opt)((0, core_1.NumberNode)())\r\n            },\r\n            'minecraft:environment_scan': {\r\n                direction_of_search: StringNode({ enum: ['up', 'down'] }),\r\n                max_steps: (0, core_1.NumberNode)({ integer: true, min: 1, max: 32 }),\r\n                target_condition: Reference('block_predicate_worldgen'),\r\n                allowed_search_condition: (0, core_1.Opt)(Reference('block_predicate_worldgen'))\r\n            },\r\n            'minecraft:heightmap': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' })\r\n            },\r\n            'minecraft:height_range': {\r\n                height: Reference('height_provider')\r\n            },\r\n            'minecraft:random_offset': {\r\n                xz_spread: (0, Common_1.IntProvider)({ min: -16, max: 16 }),\r\n                y_spread: (0, Common_1.IntProvider)({ min: -16, max: 16 }),\r\n            },\r\n            'minecraft:surface_relative_threshold_filter': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                min_inclusive: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                max_inclusive: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n            },\r\n            'minecraft:surface_water_depth_filter': {\r\n                max_water_depth: (0, core_1.NumberNode)({ integer: true })\r\n            }\r\n        }\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDensityFunctionSchemas = exports.DensityFunction = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initDensityFunctionSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    exports.DensityFunction = (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)(),\r\n            change: () => 0\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/density_function' } }),\r\n            change: () => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('density_function'),\r\n            change: () => ({})\r\n        }\r\n    ], { choiceContext: 'density_function' }), {\r\n        default: () => 0\r\n    });\r\n    const NoiseRange = (0, core_1.NumberNode)({ min: -1000000, max: 1000000 });\r\n    const YRange = (0, core_1.NumberNode)({ integer: true, min: -2032 * 2, max: 2031 * 2 });\r\n    schemas.register('density_function', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/density_function_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:abs': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:add': {\r\n                argument1: exports.DensityFunction,\r\n                argument2: exports.DensityFunction,\r\n            },\r\n            'minecraft:blend_density': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:cache_2d': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:cache_all_in_cell': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:cache_once': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:clamp': {\r\n                input: Reference('density_function'),\r\n                min: NoiseRange,\r\n                max: NoiseRange,\r\n            },\r\n            'minecraft:constant': {\r\n                argument: (0, core_1.NumberNode)(),\r\n            },\r\n            'minecraft:cube': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:flat_cache': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:half_negative': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:interpolated': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:max': {\r\n                argument1: exports.DensityFunction,\r\n                argument2: exports.DensityFunction,\r\n            },\r\n            'minecraft:min': {\r\n                argument1: exports.DensityFunction,\r\n                argument2: exports.DensityFunction,\r\n            },\r\n            'minecraft:mul': {\r\n                argument1: exports.DensityFunction,\r\n                argument2: exports.DensityFunction,\r\n            },\r\n            'minecraft:noise': {\r\n                noise: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\r\n                xz_scale: (0, core_1.NumberNode)(),\r\n                y_scale: (0, core_1.NumberNode)(),\r\n            },\r\n            'minecraft:old_blended_noise': {\r\n                xz_scale: (0, core_1.NumberNode)(),\r\n                y_scale: (0, core_1.NumberNode)(),\r\n                xz_factor: (0, core_1.NumberNode)(),\r\n                y_factor: (0, core_1.NumberNode)(),\r\n                smear_scale_multiplier: (0, core_1.NumberNode)({ min: 1, max: 8 }),\r\n            },\r\n            'minecraft:quarter_negative': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:range_choice': {\r\n                input: exports.DensityFunction,\r\n                min_inclusive: NoiseRange,\r\n                max_exclusive: NoiseRange,\r\n                when_in_range: exports.DensityFunction,\r\n                when_out_of_range: exports.DensityFunction,\r\n            },\r\n            'minecraft:shift': {\r\n                argument: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\r\n            },\r\n            'minecraft:shift_a': {\r\n                argument: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\r\n            },\r\n            'minecraft:shift_b': {\r\n                argument: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\r\n            },\r\n            'minecraft:shifted_noise': {\r\n                noise: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\r\n                xz_scale: (0, core_1.NumberNode)(),\r\n                y_scale: (0, core_1.NumberNode)(),\r\n                shift_x: exports.DensityFunction,\r\n                shift_y: exports.DensityFunction,\r\n                shift_z: exports.DensityFunction,\r\n            },\r\n            'minecraft:slide': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:spline': {\r\n                spline: Reference('cubic_spline'),\r\n            },\r\n            'minecraft:square': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:squeeze': {\r\n                argument: exports.DensityFunction,\r\n            },\r\n            'minecraft:weird_scaled_sampler': {\r\n                rarity_value_mapper: StringNode({ enum: ['type_1', 'type_2'] }),\r\n                noise: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\r\n                input: exports.DensityFunction,\r\n            },\r\n            'minecraft:y_clamped_gradient': {\r\n                from_y: YRange,\r\n                to_y: YRange,\r\n                from_value: NoiseRange,\r\n                to_value: NoiseRange,\r\n            },\r\n        }\r\n    }, { context: 'density_function', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:noise',\r\n            noise: 'minecraft:cave_entrance',\r\n            xz_scale: 0.75,\r\n            y_scale: 0.5\r\n        })\r\n    }));\r\n    schemas.register('cubic_spline', (0, core_1.Mod)((0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'number',\r\n            node: (0, core_1.NumberNode)()\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: (0, core_1.ObjectNode)({\r\n                coordinate: exports.DensityFunction,\r\n                points: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    location: (0, core_1.NumberNode)(),\r\n                    derivative: (0, core_1.NumberNode)(),\r\n                    value: Reference('cubic_spline')\r\n                }))\r\n            }, { category: 'function' })\r\n        }\r\n    ], { context: 'terrain_spline', choiceContext: 'terrain_spline' }), {\r\n        default: () => 0\r\n    }));\r\n}\r\nexports.initDensityFunctionSchemas = initDensityFunctionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = exports.Processors = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    exports.Processors = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: (0, core_1.ListNode)(Reference('processor')),\r\n            change: v => (typeof v === 'object' && v !== null && Array.isArray(v.processors))\r\n                ? v.processors\r\n                : [{ processor_type: 'minecraft:nop' }]\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: Array.isArray(v)\r\n                    ? v\r\n                    : [{ processor_type: 'minecraft:nop' }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('processor_list', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        processors: (0, core_1.ListNode)(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: [{ push: 'processor_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: (0, core_1.NumberNode)()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: (0, core_1.ListNode)(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                rottable_blocks: (0, core_1.Opt)((0, Common_1.Tag)({ resource: 'block' }))\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: (0, core_1.NumberNode)({ integer: true })\r\n            },\r\n            'minecraft:protected_blocks': {\r\n                value: StringNode({ validator: 'resource', params: { pool: 'block', requireTag: true } })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: (0, core_1.ListNode)(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        position_predicate: (0, core_1.Opt)(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 255, integer: true })),\r\n        max_dist: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 255, integer: true })),\r\n        min_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n        max_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 }))\r\n    };\r\n    schemas.register('pos_rule_test', (0, core_1.ObjectNode)({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', (0, core_1.ObjectNode)({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: [{ push: 'predicate_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const ConfiguredFeature = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    const PlacedFeature = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/placed_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('placed_feature')\r\n        }\r\n    ], { choiceContext: 'placed_feature' });\r\n    const RandomPatchConfig = {\r\n        tries: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 })),\r\n        xz_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0 })),\r\n        y_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0 })),\r\n        feature: PlacedFeature,\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\r\n    };\r\n    const TargetBlockState = (0, core_1.ObjectNode)({\r\n        target: Reference('rule_test'),\r\n        state: Reference('block_state')\r\n    });\r\n    const OreConfig = {\r\n        size: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\r\n        discard_chance_on_air_exposure: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n        targets: (0, core_1.ListNode)(TargetBlockState)\r\n    };\r\n    const VegetationPatchConfig = {\r\n        surface: StringNode({ enum: 'cave_surface' }),\r\n        depth: (0, Common_1.IntProvider)({ min: 1, max: 128 }),\r\n        vertical_range: (0, core_1.NumberNode)({ integer: true, min: 1, max: 256 }),\r\n        extra_bottom_block_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n        extra_edge_column_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n        vegetation_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n        xz_radius: (0, Common_1.IntProvider)(),\r\n        replaceable: StringNode({ validator: 'resource', params: { pool: 'block', requireTag: true } }),\r\n        ground_state: Reference('block_state_provider'),\r\n        vegetation_feature: PlacedFeature\r\n    };\r\n    schemas.register('configured_feature', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: (0, core_1.ObjectNode)({\r\n            [core_1.Switch]: ['pop', { push: 'type' }],\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: (0, Common_1.IntProvider)({ min: 0, max: 3 }),\r\n                    height: (0, Common_1.IntProvider)({ min: 1, max: 10 })\r\n                },\r\n                'minecraft:block_column': {\r\n                    direction: StringNode({ enum: ['up', 'down', 'north', 'east', 'south', 'west'] }),\r\n                    allowed_placement: Reference('block_predicate_worldgen'),\r\n                    prioritize_tip: (0, core_1.BooleanNode)(),\r\n                    layers: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                        height: (0, Common_1.IntProvider)({ min: 0 }),\r\n                        provider: Reference('block_state_provider')\r\n                    }))\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\r\n                    rim_size: (0, Common_1.IntProvider)({ min: 0, max: 16 })\r\n                },\r\n                'minecraft:disk': {\r\n                    state_provider: Reference('rule_based_block_state_provider'),\r\n                    target: Reference('block_predicate_worldgen'),\r\n                    radius: (0, Common_1.IntProvider)({ min: 0, max: 8 }),\r\n                    half_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4 }),\r\n                },\r\n                'minecraft:dripstone_cluster': {\r\n                    floor_to_ceiling_search_range: (0, core_1.NumberNode)({ integer: true, min: 1, max: 512 }),\r\n                    height: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\r\n                    radius: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\r\n                    max_stalagmite_stalactite_height_diff: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\r\n                    height_deviation: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    dripstone_block_layer_thickness: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\r\n                    density: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\r\n                    wetness: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\r\n                    chance_of_dripstone_column_at_max_distance_from_center: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                    max_distance_from_edge_affecting_chance_of_dripstone_column: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    max_distance_from_center_affecting_height_bias: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 })\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: (0, core_1.BooleanNode)(),\r\n                    exit: (0, core_1.Opt)(Reference('block_pos'))\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    crystal_beam_target: (0, core_1.Opt)(Reference('block_pos')),\r\n                    spikes: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                        centerX: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        centerZ: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        height: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                        guarded: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:fossil': {\r\n                    max_empty_corners_allowed: (0, core_1.NumberNode)({ integer: true, min: 0, max: 7 }),\r\n                    fossil_structures: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    overlay_structures: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\r\n                    fossil_processors: ProcessorList_1.Processors,\r\n                    overlay_processors: ProcessorList_1.Processors,\r\n                },\r\n                'minecraft:geode': {\r\n                    blocks: (0, core_1.ObjectNode)({\r\n                        filling_provider: Reference('block_state_provider'),\r\n                        inner_layer_provider: Reference('block_state_provider'),\r\n                        alternate_inner_layer_provider: Reference('block_state_provider'),\r\n                        middle_layer_provider: Reference('block_state_provider'),\r\n                        outer_layer_provider: Reference('block_state_provider'),\r\n                        inner_placements: (0, core_1.ListNode)(Reference('block_state')),\r\n                        cannot_replace: StringNode({ validator: 'resource', params: { pool: 'block', requireTag: true } }),\r\n                        invalid_blocks: StringNode({ validator: 'resource', params: { pool: 'block', requireTag: true } })\r\n                    }),\r\n                    layers: (0, core_1.ObjectNode)({\r\n                        filling: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\r\n                        inner_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\r\n                        middle_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\r\n                        outer_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\r\n                    }),\r\n                    crack: (0, core_1.ObjectNode)({\r\n                        generate_crack_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                        base_crack_size: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 5 })),\r\n                        crack_point_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 10 })),\r\n                    }),\r\n                    noise_multiplier: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    use_potential_placements_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    use_alternate_layer0_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    placements_require_layer0_alternate: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    outer_wall_distance: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 1, max: 20 })),\r\n                    distribution_points: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 1, max: 20 })),\r\n                    point_offset: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 0, max: 10 })),\r\n                    min_gen_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                    max_gen_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\r\n                    invalid_blocks_threshold: (0, core_1.NumberNode)({ integer: true })\r\n                },\r\n                'minecraft:multiface_growth': {\r\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: ['minecraft:glow_lichen', 'minecraft:sculk_vein'] } })),\r\n                    search_range: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 1, max: 64, integer: true })),\r\n                    chance_of_spreading: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    can_place_on_floor: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    can_place_on_ceiling: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    can_place_on_wall: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    can_be_placed_on: (0, Common_1.Tag)({ resource: 'block' })\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    fluid: Reference('block_state_provider'),\r\n                    barrier: Reference('block_state_provider')\r\n                },\r\n                'minecraft:large_dripstone': {\r\n                    floor_to_ceiling_search_range: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1, max: 512 })),\r\n                    column_radius: (0, Common_1.IntProvider)({ min: 0, max: 60 }),\r\n                    height_scale: (0, Common_1.FloatProvider)({ min: 0, max: 20 }),\r\n                    max_column_radius_to_cave_height_ratio: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                    stalactite_bluntness: (0, Common_1.FloatProvider)({ min: 0.1, max: 10 }),\r\n                    stalagmite_bluntness: (0, Common_1.FloatProvider)({ min: 0.1, max: 10 }),\r\n                    wind_speed: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\r\n                    min_radius_for_wind: (0, core_1.NumberNode)({ integer: true, min: 0, max: 100 }),\r\n                    min_bluntness_for_wind: (0, core_1.NumberNode)({ min: 0, max: 5 })\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider'),\r\n                    spread_width: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                    spread_height: (0, core_1.NumberNode)({ integer: true, min: 1 })\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: (0, Common_1.IntProvider)({ min: 0, max: 12 })\r\n                },\r\n                'minecraft:no_bonemeal_flower': RandomPatchConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:pointed_dripstone': {\r\n                    chance_of_taller_dripstone: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    chance_of_directional_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    chance_of_spread_radius2: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                    chance_of_spread_radius3: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n                },\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: PlacedFeature,\r\n                    feature_true: PlacedFeature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                        chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                        feature: PlacedFeature\r\n                    })),\r\n                    default: PlacedFeature\r\n                },\r\n                'minecraft:replace_single_block': {\r\n                    targets: (0, core_1.ListNode)(TargetBlockState)\r\n                },\r\n                'minecraft:root_system': {\r\n                    required_vertical_space_for_tree: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    root_radius: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    root_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 1, max: 256 }),\r\n                    root_column_max_height: (0, core_1.NumberNode)({ integer: true, min: 1, max: 4096 }),\r\n                    hanging_root_radius: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    hanging_roots_vertical_span: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }),\r\n                    hanging_root_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 0, max: 256 }),\r\n                    allowed_vertical_water_for_tree: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    root_replaceable: StringNode({ validator: 'resource', params: { pool: 'block', requireTag: true } }),\r\n                    root_state_provider: Reference('block_state_provider'),\r\n                    hanging_root_state_provider: Reference('block_state_provider'),\r\n                    allowed_tree_position: Reference('block_predicate_worldgen'),\r\n                    feature: PlacedFeature\r\n                },\r\n                'minecraft:scattered_ore': OreConfig,\r\n                'minecraft:sculk_patch': {\r\n                    charge_count: (0, core_1.NumberNode)({ integer: true, min: 1, max: 32 }),\r\n                    amount_per_charge: (0, core_1.NumberNode)({ integer: true, min: 1, max: 500 }),\r\n                    spread_attempts: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                    growth_rounds: (0, core_1.NumberNode)({ integer: true, min: 0, max: 8 }),\r\n                    spread_rounds: (0, core_1.NumberNode)({ integer: true, min: 0, max: 8 }),\r\n                    extra_rare_growths: (0, Common_1.IntProvider)(),\r\n                    catalyst_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                },\r\n                'minecraft:sea_pickle': {\r\n                    count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\r\n                },\r\n                'minecraft:seagrass': {\r\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state_provider')\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: (0, Common_1.Tag)({ resource: '$worldgen/placed_feature', inlineSchema: 'placed_feature' }),\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: (0, core_1.NumberNode)({ integer: true }),\r\n                    hole_count: (0, core_1.NumberNode)({ integer: true }),\r\n                    requires_block_below: (0, core_1.BooleanNode)(),\r\n                    valid_blocks: (0, Common_1.Tag)({ resource: 'block' })\r\n                },\r\n                'minecraft:tree': {\r\n                    ignore_vines: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    force_dirt: (0, core_1.Opt)((0, core_1.BooleanNode)()),\r\n                    minimum_size: Reference('feature_size'),\r\n                    dirt_provider: Reference('block_state_provider'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    foliage_provider: Reference('block_state_provider'),\r\n                    root_placer: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/root_placer_type' } }),\r\n                        root_provider: Reference('block_state_provider'),\r\n                        trunk_offset_y: (0, Common_1.IntProvider)(),\r\n                        above_root_placement: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n                            above_root_provider: Reference('block_state_provider'),\r\n                            above_root_placement_chance: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                        })),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:mangrove_root_placer': {\r\n                                mangrove_root_placement: (0, core_1.ObjectNode)({\r\n                                    max_root_width: (0, core_1.NumberNode)({ integer: true, min: 1, max: 12 }),\r\n                                    max_root_length: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\r\n                                    random_skew_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                                    can_grow_through: (0, Common_1.Tag)({ resource: 'block' }),\r\n                                    muddy_roots_in: (0, Common_1.Tag)({ resource: 'block' }),\r\n                                    muddy_roots_provider: Reference('block_state_provider'),\r\n                                })\r\n                            }\r\n                        }\r\n                    }, { context: 'root_placer' })),\r\n                    trunk_placer: (0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: (0, core_1.NumberNode)({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: (0, core_1.NumberNode)({ integer: true, min: 0, max: 24 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:bending_trunk_placer': {\r\n                                bend_length: (0, Common_1.IntProvider)({ min: 1, max: 64 }),\r\n                                min_height_for_leaves: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\r\n                            },\r\n                            'minecraft:upwards_branching_trunk_placer': {\r\n                                extra_branch_steps: (0, Common_1.IntProvider)({ min: 1 }),\r\n                                extra_branch_length: (0, Common_1.IntProvider)({ min: 0 }),\r\n                                place_branch_per_log_probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                                can_grow_through: (0, Common_1.Tag)({ resource: 'block' })\r\n                            }\r\n                        }\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: (0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\r\n                        offset: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\r\n                            },\r\n                            'minecraft:random_spread_foliage_placer': {\r\n                                foliage_height: (0, Common_1.IntProvider)({ min: 1, max: 512 }),\r\n                                leaf_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 0, max: 256 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: [{ push: 'type' }],\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:attached_to_leaves': {\r\n                                probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                                exclusion_radius_xz: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }),\r\n                                exclusion_radius_y: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }),\r\n                                required_empty_blocks: (0, core_1.NumberNode)({ integer: true, min: 1, max: 16 }),\r\n                                block_provider: Reference('block_state_provider'),\r\n                                directions: (0, core_1.ListNode)(StringNode({ enum: 'direction' }))\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:leave_vine': {\r\n                                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                },\r\n                'minecraft:twisting_vines': {\r\n                    spread_width: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                    spread_height: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                    max_height: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                },\r\n                'minecraft:underwater_magma': {\r\n                    floor_search_range: (0, core_1.NumberNode)({ integer: true, min: 0, max: 512 }),\r\n                    placement_radius_around_floor: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\r\n                    placement_probability_per_valid_position: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:vegetation_patch': VegetationPatchConfig,\r\n                'minecraft:waterlogged_vegetation_patch': VegetationPatchConfig\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:tree',\r\n            config: {\r\n                minimum_size: {\r\n                    type: 'minecraft:two_layers_feature_size'\r\n                },\r\n                trunk_placer: {\r\n                    type: 'minecraft:straight_trunk_placer',\r\n                    base_height: 5,\r\n                    height_rand_a: 2,\r\n                    height_rand_b: 0\r\n                },\r\n                foliage_placer: {\r\n                    type: 'minecraft:blob_foliage_placer',\r\n                    radius: 2,\r\n                    offset: 0,\r\n                    height: 3\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('placed_feature', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        feature: ConfiguredFeature,\r\n        placement: (0, core_1.ListNode)(Reference('decorator'))\r\n    }, { context: 'placed_feature' }), {\r\n        default: () => ({\r\n            feature: 'minecraft:oak',\r\n            placement: [\r\n                {\r\n                    type: 'minecraft:count',\r\n                    count: 4\r\n                },\r\n                {\r\n                    type: 'minecraft:in_square'\r\n                },\r\n                {\r\n                    type: 'minecraft:heightmap',\r\n                    heightmap: 'OCEAN_FLOOR'\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('feature_size', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 80 })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 81 })),\r\n                lower_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\r\n                upper_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 80 })),\r\n                lower_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\r\n                middle_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\r\n                upper_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    const NoiseProvider = {\r\n        seed: (0, core_1.NumberNode)({ integer: true }),\r\n        noise: Reference('noise_parameters'),\r\n        scale: (0, core_1.Mod)((0, core_1.NumberNode)({ min: Number.MIN_VALUE }), { default: () => 1 })\r\n    };\r\n    schemas.register('block_state_provider', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:dual_noise_provider': {\r\n                ...NoiseProvider,\r\n                variety: (0, Common_1.InclusiveRange)({ integer: true, min: 1, max: 64 }),\r\n                slow_noise: Reference('noise_parameters'),\r\n                slow_scale: (0, core_1.Mod)((0, core_1.NumberNode)({ min: Number.MIN_VALUE }), { default: () => 1 }),\r\n                states: (0, core_1.ListNode)(Reference('block_state'))\r\n            },\r\n            'minecraft:noise_threshold_provider': {\r\n                ...NoiseProvider,\r\n                threshold: (0, core_1.NumberNode)({ min: -1, max: 1 }),\r\n                high_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                default_state: Reference('block_state'),\r\n                low_states: (0, core_1.ListNode)(Reference('block_state')),\r\n                high_states: (0, core_1.ListNode)(Reference('block_state'))\r\n            },\r\n            'minecraft:noise_provider': {\r\n                ...NoiseProvider,\r\n                states: (0, core_1.ListNode)(Reference('block_state'))\r\n            },\r\n            'minecraft:randomized_int_state_provider': {\r\n                property: StringNode(),\r\n                values: (0, Common_1.IntProvider)(),\r\n                source: Reference('block_state_provider')\r\n            },\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: (0, core_1.ListNode)((0, core_1.Mod)((0, core_1.ObjectNode)({\r\n                    weight: (0, core_1.NumberNode)({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    schemas.register('rule_based_block_state_provider', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        fallback: Reference('block_state_provider'),\r\n        rules: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n            if_true: Reference('block_predicate_worldgen'),\r\n            then: Reference('block_state_provider')\r\n        }))\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            fallback: {\r\n                type: 'minecraft:simple_state_provider'\r\n            }\r\n        })\r\n    }));\r\n    const Offset = {\r\n        offset: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.NumberNode)({ integer: true, min: -16, max: 16 }), { minLength: 3, maxLength: 3 }))\r\n    };\r\n    schemas.register('block_predicate_worldgen', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'block_predicate_type' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:all_of': {\r\n                predicates: (0, core_1.ListNode)(Reference('block_predicate_worldgen'))\r\n            },\r\n            'minecraft:any_of': {\r\n                predicates: (0, core_1.ListNode)(Reference('block_predicate_worldgen'))\r\n            },\r\n            'minecraft:has_sturdy_face': {\r\n                ...Offset,\r\n                direction: StringNode({ enum: 'direction' })\r\n            },\r\n            'minecraft:inside_world_bounds': {\r\n                ...Offset,\r\n            },\r\n            'minecraft:matching_block_tag': {\r\n                ...Offset,\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            },\r\n            'minecraft:matching_blocks': {\r\n                ...Offset,\r\n                blocks: (0, Common_1.Tag)({ resource: 'block' })\r\n            },\r\n            'minecraft:matching_fluids': {\r\n                ...Offset,\r\n                fluids: (0, Common_1.Tag)({ resource: 'fluid' })\r\n            },\r\n            'minecraft:not': {\r\n                predicate: Reference('block_predicate_worldgen')\r\n            },\r\n            'minecraft:would_survive': {\r\n                ...Offset,\r\n                state: Reference('block_state')\r\n            }\r\n        }\r\n    }, { context: 'block_predicate' }), {\r\n        default: () => ({\r\n            type: 'minecraft:true'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nconst DensityFunction_1 = require(\"./DensityFunction\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        sea_level: (0, core_1.NumberNode)({ integer: true }),\r\n        disable_mob_generation: (0, core_1.BooleanNode)(),\r\n        aquifers_enabled: (0, core_1.BooleanNode)(),\r\n        ore_veins_enabled: (0, core_1.BooleanNode)(),\r\n        legacy_random_source: (0, core_1.BooleanNode)(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: (0, core_1.ObjectNode)({\r\n            min_y: (0, core_1.NumberNode)({ integer: true, min: -2048, max: 2047 }),\r\n            height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }),\r\n            size_horizontal: (0, core_1.NumberNode)({ integer: true }),\r\n            size_vertical: (0, core_1.NumberNode)({ integer: true }),\r\n        }),\r\n        noise_router: (0, core_1.ObjectNode)({\r\n            barrier: DensityFunction_1.DensityFunction,\r\n            fluid_level_floodedness: DensityFunction_1.DensityFunction,\r\n            fluid_level_spread: DensityFunction_1.DensityFunction,\r\n            lava: DensityFunction_1.DensityFunction,\r\n            temperature: DensityFunction_1.DensityFunction,\r\n            vegetation: DensityFunction_1.DensityFunction,\r\n            continents: DensityFunction_1.DensityFunction,\r\n            erosion: DensityFunction_1.DensityFunction,\r\n            depth: DensityFunction_1.DensityFunction,\r\n            ridges: DensityFunction_1.DensityFunction,\r\n            initial_density_without_jaggedness: DensityFunction_1.DensityFunction,\r\n            final_density: DensityFunction_1.DensityFunction,\r\n            vein_toggle: DensityFunction_1.DensityFunction,\r\n            vein_ridged: DensityFunction_1.DensityFunction,\r\n            vein_gap: DensityFunction_1.DensityFunction,\r\n        }),\r\n        spawn_target: (0, core_1.ListNode)(Reference('parameter_point')),\r\n        surface_rule: Reference('material_rule'),\r\n    }, { context: 'noise_settings' }), node => ({\r\n        default: () => Common_1.DefaultNoiseSettings,\r\n        validate: (path, value, errors, options) => {\r\n            var _a, _b, _c, _d;\r\n            value = node.validate(path, value, errors, options);\r\n            if (((_a = value === null || value === void 0 ? void 0 : value.noise) === null || _a === void 0 ? void 0 : _a.min_y) + ((_b = value === null || value === void 0 ? void 0 : value.noise) === null || _b === void 0 ? void 0 : _b.height) > 2047) {\r\n                errors.add(path.push('noise').push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if (((_c = value === null || value === void 0 ? void 0 : value.noise) === null || _c === void 0 ? void 0 : _c.height) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if (((_d = value === null || value === void 0 ? void 0 : value.noise) === null || _d === void 0 ? void 0 : _d.min_y) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n    schemas.register('noise_slider', (0, core_1.ObjectNode)({\r\n        target: (0, core_1.NumberNode)(),\r\n        size: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n        offset: (0, core_1.NumberNode)({ integer: true })\r\n    }));\r\n    schemas.register('generator_layer', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: (0, core_1.NumberNode)({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nconst Biome_1 = require(\"./Biome\");\r\nfunction initStructureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('structure', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_type' } }),\r\n        biomes: (0, Common_1.Tag)({ resource: '$worldgen/biome' }),\r\n        step: StringNode({ enum: 'decoration_step' }),\r\n        spawn_overrides: (0, core_1.MapNode)(StringNode({ enum: 'mob_category' }), (0, core_1.ObjectNode)({\r\n            bounding_box: StringNode({ enum: ['piece', 'full'] }),\r\n            spawns: Biome_1.MobCategorySpawnSettings,\r\n        })),\r\n        terrain_adaptation: (0, core_1.Opt)(StringNode({ enum: ['none', 'beard_thin', 'beard_box', 'bury'] })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:jigsaw': {\r\n                start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n                size: (0, core_1.NumberNode)({ integer: true, min: 1, max: 7 }),\r\n                start_height: Reference('height_provider'),\r\n                start_jigsaw_name: (0, core_1.Opt)(StringNode()),\r\n                project_start_to_heightmap: (0, core_1.Opt)(StringNode({ enum: 'heightmap_type' })),\r\n                max_distance_from_center: (0, core_1.Mod)((0, core_1.NumberNode)({ integer: true, min: 1, max: 128 }), { default: () => 80 }),\r\n                use_expansion_hack: (0, core_1.BooleanNode)(),\r\n            },\r\n            'minecraft:mineshaft': {\r\n                mineshaft_type: StringNode({ enum: ['normal', 'mesa'] }),\r\n            },\r\n            'minecraft:nether_fossil': {\r\n                height: Reference('height_provider')\r\n            },\r\n            'minecraft:ocean_ruin': {\r\n                biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                large_probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                cluster_probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:ruined_portal': {\r\n                setups: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n                    placement: StringNode({ enum: ['on_land_surface', 'partly_buried', 'on_ocean_floor', 'in_mountain', 'underground', 'in_nether'] }),\r\n                    air_pocket_probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                    mossiness: (0, core_1.NumberNode)({ min: 0, max: 1 }),\r\n                    overgrown: (0, core_1.BooleanNode)(),\r\n                    vines: (0, core_1.BooleanNode)(),\r\n                    can_be_cold: (0, core_1.BooleanNode)(),\r\n                    replace_with_blackstone: (0, core_1.BooleanNode)(),\r\n                    weight: (0, core_1.NumberNode)({ min: 0 })\r\n                }))\r\n            },\r\n            'minecraft:shipwreck': {\r\n                is_beached: (0, core_1.Opt)((0, core_1.BooleanNode)())\r\n            }\r\n        }\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:jigsaw',\r\n            step: 'surface_structures',\r\n            size: 6,\r\n            max_distance_from_center: 80,\r\n        })\r\n    }));\r\n}\r\nexports.initStructureSchemas = initStructureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureSetSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initStructureSetSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StructureSet = (0, core_1.ChoiceNode)([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/structure_set' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('structure_set')\r\n        }\r\n    ], { choiceContext: 'structure_set' });\r\n    schemas.register('structure_set', (0, core_1.ObjectNode)({\r\n        structures: (0, core_1.ListNode)((0, core_1.ObjectNode)({\r\n            structure: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_structure_feature' } }),\r\n            weight: (0, core_1.NumberNode)({ integer: true, min: 1 })\r\n        })),\r\n        placement: Reference('structure_placement')\r\n    }, { context: 'structure_set' }));\r\n    schemas.register('structure_placement', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_placement' } }),\r\n        salt: (0, core_1.NumberNode)({ integer: true, min: 0 }),\r\n        frequency_reduction_method: (0, core_1.Opt)(StringNode({ enum: ['default', 'legacy_type_1', 'legacy_type_2', 'legacy_type_3'] })),\r\n        frequency: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\r\n        exclusion_zone: (0, core_1.Opt)((0, core_1.ObjectNode)({\r\n            other_set: StructureSet,\r\n            chunk_count: (0, core_1.NumberNode)({ integer: true, min: 1, max: 16 })\r\n        })),\r\n        locate_offset: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.NumberNode)({ integer: true, min: -16, max: 16 }), { minLength: 3, maxLength: 3 })),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:concentric_rings': {\r\n                distance: (0, core_1.NumberNode)({ integer: true, min: 0, max: 1023 }),\r\n                spread: (0, core_1.NumberNode)({ integer: true, min: 0, max: 1023 }),\r\n                count: (0, core_1.NumberNode)({ integer: true, min: 1, max: 4095 }),\r\n                preferred_biomes: (0, Common_1.Tag)({ resource: '$worldgen/biome' })\r\n            },\r\n            'minecraft:random_spread': {\r\n                spread_type: (0, core_1.Opt)(StringNode({ enum: ['linear', 'triangular'] })),\r\n                spacing: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }),\r\n                separation: (0, core_1.Mod)((0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                    validate: (path, value, errors, options) => {\r\n                        if (path.pop().push('spacing').get() <= value) {\r\n                            errors.add(path, 'error.separation_smaller_spacing');\r\n                        }\r\n                        return node.validate(path, value, errors, options);\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'structure_placement' }), {\r\n        default: () => ({\r\n            type: 'minecraft:random_spread',\r\n            spacing: 10,\r\n            separation: 5,\r\n            salt: Math.floor(Math.random() * 2147483647)\r\n        })\r\n    }));\r\n}\r\nexports.initStructureSetSchemas = initStructureSetSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceRuleSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceRuleSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('material_rule', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/material_rule' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:block': {\r\n                result_state: Reference('block_state'),\r\n            },\r\n            'minecraft:condition': {\r\n                if_true: Reference('material_condition'),\r\n                then_run: Reference('material_rule')\r\n            },\r\n            'minecraft:sequence': {\r\n                sequence: (0, core_1.ListNode)(Reference('material_rule'))\r\n            }\r\n        }\r\n    }, { context: 'material_rule', category: 'pool' }), {\r\n        default: () => ({\r\n            type: 'minecraft:block',\r\n            result_state: {\r\n                Name: 'minecraft:stone'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('material_condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/material_condition' } }),\r\n        [core_1.Switch]: [{ push: 'type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:biome': {\r\n                biome_is: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n            },\r\n            'minecraft:noise_threshold': {\r\n                noise: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\r\n                min_threshold: (0, core_1.NumberNode)(),\r\n                max_threshold: (0, core_1.NumberNode)()\r\n            },\r\n            'minecraft:not': {\r\n                invert: Reference('material_condition')\r\n            },\r\n            'minecraft:stone_depth': {\r\n                offset: (0, core_1.NumberNode)({ integer: true }),\r\n                surface_type: StringNode({ enum: 'cave_surface' }),\r\n                add_surface_depth: (0, core_1.BooleanNode)(),\r\n                secondary_depth_range: (0, core_1.NumberNode)({ integer: true }),\r\n            },\r\n            'minecraft:vertical_gradient': {\r\n                random_name: StringNode(),\r\n                true_at_and_below: Reference('vertical_anchor'),\r\n                false_at_and_above: Reference('vertical_anchor'),\r\n            },\r\n            'minecraft:water': {\r\n                offset: (0, core_1.NumberNode)({ integer: true }),\r\n                surface_depth_multiplier: (0, core_1.NumberNode)({ integer: true, min: -20, max: 20 }),\r\n                add_stone_depth: (0, core_1.BooleanNode)()\r\n            },\r\n            'minecraft:y_above': {\r\n                anchor: Reference('vertical_anchor'),\r\n                surface_depth_multiplier: (0, core_1.NumberNode)({ integer: true, min: -20, max: 20 }),\r\n                add_stone_depth: (0, core_1.BooleanNode)()\r\n            }\r\n        }\r\n    }, { context: 'material_condition' }), {\r\n        default: () => ({\r\n            type: 'minecraft:biome',\r\n            is_biome: 'minecraft:plains'\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceRuleSchemas = initSurfaceRuleSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('template_pool', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        name: StringNode(),\r\n        fallback: StringNode(),\r\n        elements: (0, core_1.ListNode)(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        weight: (0, core_1.NumberNode)({ integer: true, min: 1, max: 150 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: [{ push: 'element_type' }],\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/placed_feature' } })\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n                elements: (0, core_1.ListNode)(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: ProcessorList_1.Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldPresetSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldPresetSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('world_preset', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        dimensions: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$dimension', isDefinition: true } }), Reference('dimension'))\r\n    }, { context: 'world_preset' }), {\r\n        default: () => ({\r\n            dimensions: {\r\n                'minecraft:overworld': {\r\n                    type: 'minecraft:overworld',\r\n                    generator: {\r\n                        type: 'minecraft:noise',\r\n                        biome_source: {\r\n                            type: 'minecraft:multi_noise',\r\n                            preset: 'minecraft:overworld',\r\n                        },\r\n                        settings: 'minecraft:overworld',\r\n                    },\r\n                },\r\n                'minecraft:the_nether': {\r\n                    type: 'minecraft:the_nether',\r\n                    generator: {\r\n                        type: 'minecraft:noise',\r\n                        biome_source: {\r\n                            type: 'minecraft:multi_noise',\r\n                            preset: 'minecraft:nether',\r\n                        },\r\n                        settings: 'minecraft:nether',\r\n                    },\r\n                },\r\n                'minecraft:the_end': {\r\n                    type: 'minecraft:the_end',\r\n                    generator: {\r\n                        type: 'minecraft:noise',\r\n                        biome_source: {\r\n                            type: 'minecraft:the_end',\r\n                        },\r\n                        settings: 'minecraft:end',\r\n                    },\r\n                },\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('flat_level_generator_preset', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        display: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        settings: Reference('flat_generator_settings'),\r\n    }), {\r\n        default: () => ({\r\n            display: 'minecraft:grass_block',\r\n            settings: {\r\n                lakes: false,\r\n                features: false,\r\n                biome: 'minecraft:plains',\r\n                structure_overrides: [],\r\n                layers: [\r\n                    {\r\n                        height: 3,\r\n                        block: 'minecraft:dirt'\r\n                    },\r\n                    {\r\n                        height: 1,\r\n                        block: 'minecraft:grass_block'\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initWorldPresetSchemas = initWorldPresetSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst DensityFunction_1 = require(\"./DensityFunction\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst Structure_1 = require(\"./Structure\");\r\nconst StructureSet_1 = require(\"./StructureSet\");\r\nconst SurfaceRule_1 = require(\"./SurfaceRule\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nconst WorldPreset_1 = require(\"./WorldPreset\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    // `ProcessorList.ts`, `DensityFunction.ts`, and `Biome.ts` have exports. They should be initialized first. \r\n    (0, ProcessorList_1.initProcessorListSchemas)(schemas, collections);\r\n    (0, DensityFunction_1.initDensityFunctionSchemas)(schemas, collections);\r\n    (0, Biome_1.initBiomeSchemas)(schemas, collections);\r\n    (0, Carver_1.initCarverSchemas)(schemas, collections);\r\n    (0, Decorator_1.initDecoratorSchemas)(schemas, collections);\r\n    (0, Feature_1.initFeatureSchemas)(schemas, collections);\r\n    (0, NoiseSettings_1.initNoiseSettingsSchemas)(schemas, collections);\r\n    (0, Structure_1.initStructureSchemas)(schemas, collections);\r\n    (0, StructureSet_1.initStructureSetSchemas)(schemas, collections);\r\n    (0, SurfaceRule_1.initSurfaceRuleSchemas)(schemas, collections);\r\n    (0, TemplatePool_1.initTemplatePoolSchemas)(schemas, collections);\r\n    (0, WorldPreset_1.initWorldPresetSchemas)(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', (0, core_1.Mod)((0, core_1.ObjectNode)({\r\n        generate_features: (0, core_1.BooleanNode)(),\r\n        bonus_chest: (0, core_1.BooleanNode)(),\r\n        seed: (0, core_1.NumberNode)({ integer: true }),\r\n        dimensions: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                preset: \"minecraft:overworld\"\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                preset: \"minecraft:nether\"\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst assets_1 = require(\"./assets\");\r\nconst ChatType_1 = require(\"./ChatType\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst ItemModifier_1 = require(\"./ItemModifier\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    (0, Common_1.initCommonSchemas)(schemas, collections);\r\n    (0, ChatType_1.initChatTypeSchemas)(schemas, collections);\r\n    (0, Advancement_1.initAdvancementSchemas)(schemas, collections);\r\n    (0, assets_1.initAssetsSchemas)(schemas, collections);\r\n    (0, Condition_1.initConditionSchemas)(schemas, collections);\r\n    (0, DimensionType_1.initDimensionTypeSchemas)(schemas, collections);\r\n    (0, Dimension_1.initDimensionSchemas)(schemas, collections);\r\n    (0, ItemModifier_1.initItemModifierSchemas)(schemas, collections);\r\n    (0, LootTable_1.initLootTableSchemas)(schemas, collections);\r\n    (0, PackMcmeta_1.initPackMcmetaSchemas)(schemas, collections);\r\n    (0, Predicates_1.initPredicatesSchemas)(schemas, collections);\r\n    (0, Recipe_1.initRecipeSchemas)(schemas, collections);\r\n    (0, Tags_1.initTagsSchemas)(schemas, collections);\r\n    (0, TextComponent_1.initTextComponentSchemas)(schemas, collections);\r\n    (0, worldgen_1.initWorldgenSchemas)(schemas, collections);\r\n    (0, WorldSettings_1.initWorldSettingsSchemas)(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = exports.lootContext = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    (0, Collections_1.initCollections)(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    (0, schemas_1.initSchemas)(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n"],"names":["Collections","initCollections","collections","Advancement","core_1","require$$0","initAdvancementSchemas","schemas","Reference","StringNode","EntityPredicate","v","_a","_b","path","Model","initModelSchemas","Vec","length","min","max","Texture","BlockDefinition","initBlockDefinitionSchemas","VariantChildren","Font","initFontSchemas","assets","Model_1","BlockDefinition_1","require$$1","Font_1","require$$2","initAssetsSchemas","ChatType","initChatTypeSchemas","exports","initCommonSchemas","Bounds","integer","ObjectWithType","pool","directType","directPath","directDefault","objectDefault","context","cases","defaultCase","k","provider","choices","keys","config","t","_c","entitySourceNode","conditions","copySourceNode","res","f","node","Condition","Common_1","initConditionSchemas","Dimension","initDimensionSchemas","ClimateParameter","DimensionType","initDimensionTypeSchemas","value","errors","options","ItemModifier","initItemModifierSchemas","LootContext","LootTable","LootContext_1","initLootTableSchemas","functionsAndConditions","compileSwitchNode","contextMap","collectionID","getNode","getAvailableOptions","providedContext","c","tableType","allows","requires","_","conditionIDSwtichNode","type","functionIDSwtichNode","entitySourceSwtichNode","copySourceSwtichNode","singletonFields","PackMcmeta","CURRENT_PACK_FORMAT","initPackMcmetaSchemas","_p","Predicates","initPredicatesSchemas","StateChoice","Recipe","initRecipeSchemas","Tags","initTagsSchemas","TagBase","TextComponent","initTextComponentSchemas","getSimpleString","n","s","StyleFields","CommonFields","initBiomeSchemas","Carver","initCarverSchemas","CanyonConfig","CaveConfig","Decorator","initDecoratorSchemas","initDensityFunctionSchemas","NoiseRange","YRange","ProcessorList","initProcessorListSchemas","posTestFields","Feature","ProcessorList_1","require$$3","initFeatureSchemas","ConfiguredFeature","PlacedFeature","RandomPatchConfig","HugeMushroomConfig","TargetBlockState","OreConfig","VegetationPatchConfig","NoiseProvider","Offset","NoiseSettings","DensityFunction_1","initNoiseSettingsSchemas","_d","Structure","Biome_1","initStructureSchemas","StructureSet","initStructureSetSchemas","SurfaceRule","initSurfaceRuleSchemas","TemplatePool","initTemplatePoolSchemas","WorldPreset","initWorldPresetSchemas","worldgen","Carver_1","Decorator_1","Feature_1","require$$4","NoiseSettings_1","require$$5","require$$6","Structure_1","require$$7","StructureSet_1","require$$8","SurfaceRule_1","require$$9","TemplatePool_1","require$$10","WorldPreset_1","require$$11","initWorldgenSchemas","WorldSettings","initWorldSettingsSchemas","seed","Advancement_1","assets_1","ChatType_1","Condition_1","Dimension_1","DimensionType_1","ItemModifier_1","LootTable_1","PackMcmeta_1","Predicates_1","Recipe_1","Tags_1","require$$12","TextComponent_1","require$$13","worldgen_1","require$$14","WorldSettings_1","require$$15","initSchemas","__createBinding","this","m","k2","desc","__setModuleDefault","__importStar","mod","result","lib","getSchemas_1","getCollections_1","lootContext","Collections_1","schemas_1","getCollections","getSchemas"],"mappings":"sZACA,OAAO,eAAeA,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EACrCA,GAAA,gBAAG,OAC1B,SAASC,GAAgBC,EAAa,CAClCA,EAAY,SAAS,sBAAuB,CACxC,qCACA,4BACA,+BACA,yBACA,0BACA,8BACA,gCACA,6BACA,yBACA,kCACA,4BACA,2BACA,wBACA,+BACA,iCACA,6BACA,0BACA,+BACA,gCACA,uBACA,8BACA,oCACA,+BACA,yCACA,+BACA,uBACA,6BACA,qBACA,0BACA,yBACA,4CACA,+BACA,0CACA,iCACA,4BACA,gCACA,0BACA,yBACA,6BACA,2BACA,4BACA,wBACA,uBACA,iBACA,4CACA,4CACA,2BACA,uBACA,uBACA,2BACA,2BACR,CAAK,EACDA,EAAY,SAAS,UAAW,CAC5B,mBACA,aACA,WACA,WACA,cACA,WACA,cACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,WACA,WACA,2BACA,eACA,iBACA,YACA,2BACA,iBACA,mBACA,YACA,wBACA,aACA,kBACA,wBACA,SACR,CAAK,EACDA,EAAY,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,MACR,CAAK,EACDA,EAAY,SAAS,WAAY,CAC7B,WACA,WACA,YACA,WACR,CAAK,EACDA,EAAY,SAAS,gBAAiB,CAClC,OACA,SACA,gBACA,eACR,CAAK,EACDA,EAAY,SAAS,cAAe,CAChC,eACA,OACA,SACA,eACR,CAAK,EACDA,EAAY,SAAS,iCAAkC,CACnD,gCACA,sCACA,qBACR,CAAK,EACDA,EAAY,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,cACR,CAAK,EACDA,EAAY,SAAS,cAAe,CAChC,kBACA,kBACA,iBACA,UACA,WACA,QACA,iBACA,UACA,YACA,WACA,gBACA,aACA,mBACA,gBACA,YACA,aACA,YACA,SACR,CAAK,EACDA,EAAY,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,iBACR,CAAK,EACDA,EAAY,SAAS,iBAAkB,CACnC,QACA,SACA,gBACA,SACA,MACA,SACA,OACA,WACA,WACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,UACA,aACR,CAAK,EACDA,EAAY,SAAS,iBAAkB,CACnC,kBACA,4BACA,cACA,iBACA,gBACA,kBACR,CAAK,EACDA,EAAY,SAAS,kBAAmB,CACpC,MACA,QACR,CAAK,EACDA,EAAY,SAAS,kBAAmB,CACpC,iBACA,QACA,sBACA,yBACA,qBACA,cACA,mBACA,yBACA,gBACA,qBACA,wBACR,CAAK,EACDA,EAAY,SAAS,oBAAqB,CACtC,kBACA,kBACA,oBACA,qBACA,oBACA,mBACA,iBACA,mBACA,+BACA,+BACA,oBACA,iBACR,CAAK,EACDA,EAAY,SAAS,iBAAkB,CACnC,OACA,qBACA,sBACA,kBACA,mBACA,gBACA,aACA,cACA,eACA,gBACA,gBACA,mBACA,kBACA,gBACA,QACA,iBACA,kBACA,eACA,mBACA,gBACA,gBACA,oBACA,mBACA,iBACA,SACA,UACA,gBACA,kBACA,sBACA,yBACA,SACA,eACA,WACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,QACR,CAAK,EACDA,EAAY,SAAS,YAAa,CAC9B,QACA,SACA,UACA,aACA,SACA,OACA,OACA,OACA,aACA,OACA,SACA,OACA,QACA,QACA,MACA,OACR,CAAK,EACDA,EAAY,SAAS,eAAgB,CACjC,QACA,SACR,CAAK,EACDA,EAAY,SAAS,YAAa,CAC9B,OACA,KACA,QACA,OACA,QACA,MACR,CAAK,EACDA,EAAY,SAAS,OA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"}